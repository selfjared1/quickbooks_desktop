from dataclasses import dataclass, field
from decimal import Decimal
from enum import Enum
from typing import List, Optional, Union

from xsdata.models.datatype import XmlDate


class ArrefundCreditCardQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ArrefundCreditCardQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class AvsstreetValue(Enum):
    PASS = "Pass"
    FAIL = "Fail"
    NOT_AVAILABLE = "NotAvailable"


class AvszipValue(Enum):
    PASS = "Pass"
    FAIL = "Fail"
    NOT_AVAILABLE = "NotAvailable"


@dataclass
class Abbreviation:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AccountNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class AccountQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class AccountTaxLineInfoQueryRqType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


class AccountTypeFilterValue(Enum):
    ACCOUNTS_PAYABLE = "AccountsPayable"
    ACCOUNTS_RECEIVABLE = "AccountsReceivable"
    ALLOWED_FOR1099 = "AllowedFor1099"
    APAND_SALES_TAX = "APAndSalesTax"
    APOR_CREDIT_CARD = "APOrCreditCard"
    ARAND_AP = "ARAndAP"
    ASSET = "Asset"
    BALANCE_SHEET = "BalanceSheet"
    BANK = "Bank"
    BANK_AND_ARAND_APAND_UF = "BankAndARAndAPAndUF"
    BANK_AND_UF = "BankAndUF"
    COST_OF_SALES = "CostOfSales"
    CREDIT_CARD = "CreditCard"
    CURRENT_ASSET = "CurrentAsset"
    CURRENT_ASSET_AND_EXPENSE = "CurrentAssetAndExpense"
    CURRENT_LIABILITY = "CurrentLiability"
    EQUITY = "Equity"
    EQUITY_AND_INCOME_AND_EXPENSE = "EquityAndIncomeAndExpense"
    EXPENSE_AND_OTHER_EXPENSE = "ExpenseAndOtherExpense"
    FIXED_ASSET = "FixedAsset"
    INCOME_AND_EXPENSE = "IncomeAndExpense"
    INCOME_AND_OTHER_INCOME = "IncomeAndOtherIncome"
    LIABILITY = "Liability"
    LIABILITY_AND_EQUITY = "LiabilityAndEquity"
    LONG_TERM_LIABILITY = "LongTermLiability"
    NON_POSTING = "NonPosting"
    ORDINARY_EXPENSE = "OrdinaryExpense"
    ORDINARY_INCOME = "OrdinaryIncome"
    ORDINARY_INCOME_AND_COGS = "OrdinaryIncomeAndCOGS"
    ORDINARY_INCOME_AND_EXPENSE = "OrdinaryIncomeAndExpense"
    OTHER_ASSET = "OtherAsset"
    OTHER_CURRENT_ASSET = "OtherCurrentAsset"
    OTHER_CURRENT_LIABILITY = "OtherCurrentLiability"
    OTHER_EXPENSE = "OtherExpense"
    OTHER_INCOME = "OtherIncome"
    OTHER_INCOME_OR_EXPENSE = "OtherIncomeOrExpense"


class AccountTypeValue(Enum):
    ACCOUNTS_PAYABLE = "AccountsPayable"
    ACCOUNTS_RECEIVABLE = "AccountsReceivable"
    BANK = "Bank"
    COST_OF_GOODS_SOLD = "CostOfGoodsSold"
    CREDIT_CARD = "CreditCard"
    EQUITY = "Equity"
    EXPENSE = "Expense"
    FIXED_ASSET = "FixedAsset"
    INCOME = "Income"
    LONG_TERM_LIABILITY = "LongTermLiability"
    NON_POSTING = "NonPosting"
    OTHER_ASSET = "OtherAsset"
    OTHER_CURRENT_ASSET = "OtherCurrentAsset"
    OTHER_CURRENT_LIABILITY = "OtherCurrentLiability"
    OTHER_EXPENSE = "OtherExpense"
    OTHER_INCOME = "OtherIncome"


class AccrualPeriodValue(Enum):
    BEGINNING_OF_YEAR = "BeginningOfYear"
    EVERY_HOUR_ON_PAYCHECK = "EveryHourOnPaycheck"
    EVERY_PAYCHECK = "EveryPaycheck"


class AcquiredAsValue(Enum):
    NEW = "New"
    OLD = "Old"


class ActiveStatusValue(Enum):
    ACTIVE_ONLY = "ActiveOnly"
    INACTIVE_ONLY = "InactiveOnly"
    ALL = "All"


@dataclass
class AddSerialNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class AddToMenuValue(Enum):
    FILE = "File"
    COMPANY = "Company"
    CUSTOMERS = "Customers"
    VENDORS = "Vendors"
    EMPLOYEES = "Employees"
    BANKING = "Banking"


@dataclass
class AdditionalContactRef:
    contact_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "ContactName",
            "type": "Element",
            "required": True,
            "max_length": 40,
        },
    )
    contact_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "ContactValue",
            "type": "Element",
            "required": True,
            "max_length": 255,
        },
    )


@dataclass
class AdditionalNotes:
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "required": True,
            "max_length": 4095,
        },
    )


@dataclass
class Addr1:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Addr2:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Addr3:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Addr4:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Addr5:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Address:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class AddressBlock:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


class AdjustBillingRateRelativeToValue(Enum):
    STANDARD_RATE = "StandardRate"
    CURRENT_CUSTOM_RATE = "CurrentCustomRate"


@dataclass
class AdjustPercentage:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class AdjustRelativeToValue(Enum):
    STANDARD_PRICE = "StandardPrice"
    COST = "Cost"
    CURRENT_CUSTOM_PRICE = "CurrentCustomPrice"


@dataclass
class AfterMergeListId:
    class Meta:
        name = "AfterMergeListID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


class AgingReportBasisValue(Enum):
    AGE_FROM_DUE_DATE = "AgeFromDueDate"
    AGE_FROM_TRANSACTION_DATE = "AgeFromTransactionDate"


class AgingReportTypeValue(Enum):
    APAGING_DETAIL = "APAgingDetail"
    APAGING_SUMMARY = "APAgingSummary"
    ARAGING_DETAIL = "ARAgingDetail"
    ARAGING_SUMMARY = "ARAgingSummary"
    COLLECTIONS_REPORT = "CollectionsReport"


@dataclass
class AltContact:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AltPhone:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Amount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class AmountDue:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class AmountDueInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class AmountInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class AnnualInterestRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class AppId:
    class Meta:
        name = "AppID"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AppName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AppVer:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AppendNotes:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ApplicationLogin:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AppliedAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class AppliedToTxnAddTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ApplyCheckToTxnAddTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ApplyCheckToTxnModTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class AssemblyBuildPoint:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class AssetDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AssetNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class AssignClassesToValue(Enum):
    NONE = "None"
    ACCOUNTS = "Accounts"
    ITEMS = "Items"
    NAMES = "Names"


class AssignToObjectValue(Enum):
    ACCOUNT = "Account"
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    COMPANY = "Company"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    CUSTOMER = "Customer"
    DEPOSIT = "Deposit"
    EMPLOYEE = "Employee"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM = "Item"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    OTHER_NAME = "OtherName"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    VENDOR = "Vendor"
    VENDOR_CREDIT = "VendorCredit"


@dataclass
class AuthId:
    class Meta:
        name = "AuthID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class AuthorizationCode:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AutomaticLoginUserName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class AverageCost:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class BooltypeValue(Enum):
    VALUE = ""


@dataclass
class Balance:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class BalanceRemaining:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class BalanceRemainingInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class BankNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class BarCodeQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class BarCodeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class BarCodeValue:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class BaseUnit:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    abbreviation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Abbreviation",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )


@dataclass
class BillAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class BillAddressBlock:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


class BillPaymentCheckQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class BillPaymentCheckQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class BillPaymentCreditCardQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class BillPaymentCreditCardQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class BillQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class BillQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class BillToPayQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class BillableAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class BillableRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class BillableStatusValue(Enum):
    BILLABLE = "Billable"
    NOT_BILLABLE = "NotBillable"
    HAS_BEEN_BILLED = "HasBeenBilled"


class BillingRateQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class BillingRateTypeValue(Enum):
    FIXED_RATE = "FixedRate"
    PER_ITEM = "PerItem"


class BudgetCriterionValue(Enum):
    ACCOUNTS = "Accounts"
    ACCOUNTS_AND_CLASSES = "AccountsAndClasses"
    ACCOUNTS_AND_CUSTOMERS = "AccountsAndCustomers"


class BudgetSummaryReportTypeValue(Enum):
    BALANCE_SHEET_BUDGET_OVERVIEW = "BalanceSheetBudgetOverview"
    BALANCE_SHEET_BUDGET_VS_ACTUAL = "BalanceSheetBudgetVsActual"
    PROFIT_AND_LOSS_BUDGET_OVERVIEW = "ProfitAndLossBudgetOverview"
    PROFIT_AND_LOSS_BUDGET_PERFORMANCE = "ProfitAndLossBudgetPerformance"
    PROFIT_AND_LOSS_BUDGET_VS_ACTUAL = "ProfitAndLossBudgetVsActual"


@dataclass
class BuildAssemblyModTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class BuildAssemblyQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class BuildAssemblyQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class BuildPoint:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class Clsid:
    class Meta:
        name = "CLSID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"0|(\{[0-9a-fA-F]{8}(\-([0-9a-fA-F]{4})){3}\-[0-9a-fA-F]{12}\})",
        },
    )


class CalculateChargesFromValue(Enum):
    DUE_DATE = "DueDate"
    INVOICE_OR_BILLED_DATE = "InvoiceOrBilledDate"


class CardSecurityCodeMatchValue(Enum):
    PASS = "Pass"
    FAIL = "Fail"
    NOT_AVAILABLE = "NotAvailable"


class CashFlowClassificationValue(Enum):
    NONE = "None"
    OPERATING = "Operating"
    INVESTING = "Investing"
    FINANCING = "Financing"
    NOT_APPLICABLE = "NotApplicable"


@dataclass
class Cc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ChargeQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ChargeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class CheckNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class CheckQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class CheckQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class City:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ClassQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class ClearedStatusModRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ClearedStatusModTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ClearedStatusModTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class ClearedStatusValue(Enum):
    CLEARED = "Cleared"
    NOT_CLEARED = "NotCleared"
    PENDING = "Pending"


@dataclass
class ClientTransId:
    class Meta:
        name = "ClientTransID"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ColDataDataType(Enum):
    IDTYPE = "IDTYPE"
    GUIDTYPE = "GUIDTYPE"
    STRTYPE = "STRTYPE"
    BOOLTYPE = "BOOLTYPE"
    DATETYPE = "DATETYPE"
    DATETIMETYPE = "DATETIMETYPE"
    TIMEINTERVALTYPE = "TIMEINTERVALTYPE"
    AMTTYPE = "AMTTYPE"
    PRICETYPE = "PRICETYPE"
    QUANTYPE = "QUANTYPE"
    PERCENTTYPE = "PERCENTTYPE"
    ENUMTYPE = "ENUMTYPE"
    INTTYPE = "INTTYPE"


class ColDescDataType(Enum):
    AMTTYPE = "AMTTYPE"
    BOOLTYPE = "BOOLTYPE"
    DATETIMETYPE = "DATETIMETYPE"
    DATETYPE = "DATETYPE"
    ENUMTYPE = "ENUMTYPE"
    GUIDTYPE = "GUIDTYPE"
    IDTYPE = "IDTYPE"
    INTTYPE = "INTTYPE"
    PERCENTTYPE = "PERCENTTYPE"
    PRICETYPE = "PRICETYPE"
    QUANTYPE = "QUANTYPE"
    STRTYPE = "STRTYPE"
    TIMEINTERVALTYPE = "TIMEINTERVALTYPE"


@dataclass
class ColTitle:
    title_row: Optional[int] = field(
        default=None,
        metadata={
            "name": "titleRow",
            "type": "Attribute",
            "required": True,
        },
    )
    value: Optional[str] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )


class ColTypeValue(Enum):
    ACCOUNT = "Account"
    ADDR1 = "Addr1"
    ADDR2 = "Addr2"
    ADDR3 = "Addr3"
    ADDR4 = "Addr4"
    ADDR5 = "Addr5"
    AGING = "Aging"
    AMOUNT = "Amount"
    AMOUNT_DIFFERENCE = "AmountDifference"
    AVERAGE_COST = "AverageCost"
    BILLED_DATE = "BilledDate"
    BILLING_STATUS = "BillingStatus"
    BLANK = "Blank"
    CALCULATED_AMOUNT = "CalculatedAmount"
    CLASS = "Class"
    CLEARED_STATUS = "ClearedStatus"
    COST_PRICE = "CostPrice"
    CREATE_DATE = "CreateDate"
    CREDIT = "Credit"
    CUSTOM_FIELD = "CustomField"
    DATE = "Date"
    DEBIT = "Debit"
    DELIVERY_DATE = "DeliveryDate"
    DUE_DATE = "DueDate"
    DURATION = "Duration"
    EARLIEST_RECEIPT_DATE = "EarliestReceiptDate"
    ESTIMATE_ACTIVE = "EstimateActive"
    FOB = "FOB"
    INCOME_SUBJECT_TO_TAX = "IncomeSubjectToTax"
    INVOICED = "Invoiced"
    IS_ADJUSTMENT = "IsAdjustment"
    ITEM = "Item"
    ITEM_DESC = "ItemDesc"
    ITEM_VENDOR = "ItemVendor"
    LABEL = "Label"
    LAST_MODIFIED_BY = "LastModifiedBy"
    LATEST_OR_PRIOR_STATE = "LatestOrPriorState"
    MEMO = "Memo"
    MODIFIED_TIME = "ModifiedTime"
    NAME = "Name"
    NAME_ACCOUNT_NUMBER = "NameAccountNumber"
    NAME_ADDRESS = "NameAddress"
    NAME_CITY = "NameCity"
    NAME_CONTACT = "NameContact"
    NAME_EMAIL = "NameEmail"
    NAME_FAX = "NameFax"
    NAME_PHONE = "NamePhone"
    NAME_STATE = "NameState"
    NAME_ZIP = "NameZip"
    OPEN_BALANCE = "OpenBalance"
    ORIGINAL_AMOUNT = "OriginalAmount"
    PAID_AMOUNT = "PaidAmount"
    PAID_STATUS = "PaidStatus"
    PAID_THROUGH_DATE = "PaidThroughDate"
    PAYMENT_METHOD = "PaymentMethod"
    PAYROLL_ITEM = "PayrollItem"
    PERCENT = "Percent"
    PERCENT_CHANGE = "PercentChange"
    PERCENT_OF_TOTAL_RETAIL = "PercentOfTotalRetail"
    PERCENT_OF_TOTAL_VALUE = "PercentOfTotalValue"
    PHYSICAL_COUNT = "PhysicalCount"
    PONUMBER = "PONumber"
    PRINT_STATUS = "PrintStatus"
    PROGRESS_AMOUNT = "ProgressAmount"
    PROGRESS_PERCENT = "ProgressPercent"
    QUANTITY = "Quantity"
    QUANTITY_AVAILABLE = "QuantityAvailable"
    QUANTITY_ON_HAND = "QuantityOnHand"
    QUANTITY_ON_ORDER = "QuantityOnOrder"
    QUANTITY_ON_PENDING_BUILD = "QuantityOnPendingBuild"
    QUANTITY_ON_SALES_ORDER = "QuantityOnSalesOrder"
    RECEIVED_QUANTITY = "ReceivedQuantity"
    REF_NUMBER = "RefNumber"
    REORDER_POINT = "ReorderPoint"
    RETAIL_VALUE_ON_HAND = "RetailValueOnHand"
    RUNNING_BALANCE = "RunningBalance"
    SALES_PER_WEEK = "SalesPerWeek"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SHIP_DATE = "ShipDate"
    SHIP_METHOD = "ShipMethod"
    SHIP_TO_ADDR1 = "ShipToAddr1"
    SHIP_TO_ADDR2 = "ShipToAddr2"
    SHIP_TO_ADDR3 = "ShipToAddr3"
    SHIP_TO_ADDR4 = "ShipToAddr4"
    SHIP_TO_ADDR5 = "ShipToAddr5"
    SONUMBER = "SONumber"
    SOURCE_NAME = "SourceName"
    SPLIT_ACCOUNT = "SplitAccount"
    SSNOR_TAX_ID = "SSNOrTaxID"
    SUGGESTED_REORDER = "SuggestedReorder"
    TAX_LINE = "TaxLine"
    TAX_TABLE_VERSION = "TaxTableVersion"
    TERMS = "Terms"
    TOTAL = "Total"
    TXN_ID = "TxnID"
    TXN_NUMBER = "TxnNumber"
    TXN_TYPE = "TxnType"
    UNIT_PRICE = "UnitPrice"
    USER_EDIT = "UserEdit"
    VALUE_ON_HAND = "ValueOnHand"
    WAGE_BASE = "WageBase"
    WAGE_BASE_TIPS = "WageBaseTips"


@dataclass
class CommercialCardCode:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CompanyActivityQueryRqType:
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CompanyAddressBlockForCustomer:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class CompanyAddressForCustomer:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class CompanyEmailForCustomer:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class CompanyFileEventOperationValue(Enum):
    CLOSE = "Close"
    OPEN = "Open"


@dataclass
class CompanyFilePath:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CompanyId:
    class Meta:
        name = "CompanyID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class CompanyName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CompanyType:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CompanyWebSite:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ConnectionTicket:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Contact:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ContactName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ContactValue:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ConversionRatio:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class Cost:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class CostBasis:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class CountAdjustment:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Country:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CreditAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class CreditAmountInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class CreditCardAddress:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class CreditCardChargeQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class CreditCardChargeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class CreditCardCreditQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class CreditCardCreditQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class CreditCardNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CreditCardPostalCode:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class CreditCardTransId:
    class Meta:
        name = "CreditCardTransID"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class CreditCardTxnTypeValue(Enum):
    AUTHORIZATION = "Authorization"
    CAPTURE = "Capture"
    CHARGE = "Charge"
    REFUND = "Refund"
    VOICE_AUTHORIZATION = "VoiceAuthorization"


@dataclass
class CreditLimit:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class CreditMemoQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class CreditMemoQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class CreditRemaining:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class CreditRemainingInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class CreditTxnId:
    class Meta:
        name = "CreditTxnID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class CurrencyCode:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class CurrencyQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class CurrentRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class CustomDetailReportTypeValue(Enum):
    CUSTOM_TXN_DETAIL = "CustomTxnDetail"


@dataclass
class CustomPrice:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class CustomPricePercent:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class CustomRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class CustomRatePercent:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class CustomSummaryReportTypeValue(Enum):
    CUSTOM_SUMMARY = "CustomSummary"


class CustomerMsgQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class CustomerQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class CustomerQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class CustomerTypeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class DatetimetypeValue(Enum):
    VALUE = ""


class DatetypeValue(Enum):
    VALUE = ""


@dataclass
class DataEventRecoveryInfoDelRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtAddTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class DataExtDefQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class DataExtFormatString:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class DataExtId:
    class Meta:
        name = "DataExtID"

    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DataExtName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class DataExtNewName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class DataExtTypeValue(Enum):
    AMTTYPE = "AMTTYPE"
    DATETIMETYPE = "DATETIMETYPE"
    INTTYPE = "INTTYPE"
    PERCENTTYPE = "PERCENTTYPE"
    PRICETYPE = "PRICETYPE"
    QUANTYPE = "QUANTYPE"
    STR1024_TYPE = "STR1024TYPE"
    STR255_TYPE = "STR255TYPE"


@dataclass
class DataExtValue:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class DateDrivenTermsQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class DateMacroValue(Enum):
    ALL = "All"
    TODAY = "Today"
    THIS_WEEK = "ThisWeek"
    THIS_WEEK_TO_DATE = "ThisWeekToDate"
    THIS_MONTH = "ThisMonth"
    THIS_MONTH_TO_DATE = "ThisMonthToDate"
    THIS_CALENDAR_QUARTER = "ThisCalendarQuarter"
    THIS_CALENDAR_QUARTER_TO_DATE = "ThisCalendarQuarterToDate"
    THIS_FISCAL_QUARTER = "ThisFiscalQuarter"
    THIS_FISCAL_QUARTER_TO_DATE = "ThisFiscalQuarterToDate"
    THIS_CALENDAR_YEAR = "ThisCalendarYear"
    THIS_CALENDAR_YEAR_TO_DATE = "ThisCalendarYearToDate"
    THIS_FISCAL_YEAR = "ThisFiscalYear"
    THIS_FISCAL_YEAR_TO_DATE = "ThisFiscalYearToDate"
    YESTERDAY = "Yesterday"
    LAST_WEEK = "LastWeek"
    LAST_WEEK_TO_DATE = "LastWeekToDate"
    LAST_MONTH = "LastMonth"
    LAST_MONTH_TO_DATE = "LastMonthToDate"
    LAST_CALENDAR_QUARTER = "LastCalendarQuarter"
    LAST_CALENDAR_QUARTER_TO_DATE = "LastCalendarQuarterToDate"
    LAST_FISCAL_QUARTER = "LastFiscalQuarter"
    LAST_FISCAL_QUARTER_TO_DATE = "LastFiscalQuarterToDate"
    LAST_CALENDAR_YEAR = "LastCalendarYear"
    LAST_CALENDAR_YEAR_TO_DATE = "LastCalendarYearToDate"
    LAST_FISCAL_YEAR = "LastFiscalYear"
    LAST_FISCAL_YEAR_TO_DATE = "LastFiscalYearToDate"
    NEXT_WEEK = "NextWeek"
    NEXT_FOUR_WEEKS = "NextFourWeeks"
    NEXT_MONTH = "NextMonth"
    NEXT_CALENDAR_QUARTER = "NextCalendarQuarter"
    NEXT_CALENDAR_YEAR = "NextCalendarYear"
    NEXT_FISCAL_QUARTER = "NextFiscalQuarter"
    NEXT_FISCAL_YEAR = "NextFiscalYear"


@dataclass
class DayOfMonthDue:
    value: Optional[int] = field(
        default=None,
        metadata={
            "min_inclusive": 1,
            "max_inclusive": 31,
        },
    )


@dataclass
class DaysBillsAreDue:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


class DecimalPlacesValue(Enum):
    VALUE_0 = "0"
    VALUE_2 = "2"


class DecimalSeparatorValue(Enum):
    PERIOD = "Period"
    COMMA = "Comma"


@dataclass
class DefaultFob:
    class Meta:
        name = "DefaultFOB"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class DefaultMarkup:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class DeliveryMethodValue(Enum):
    EMAIL = "Email"
    FAX = "Fax"
    PRINT = "Print"


class DeliveryPolicyValue(Enum):
    DELIVER_ALWAYS = "DeliverAlways"
    DELIVER_ONLY_IF_RUNNING = "DeliverOnlyIfRunning"


@dataclass
class Department:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class DepositLineAddPaymentTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class DepositLineAddPaymentTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class DepositLineModPaymentTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class DepositLineModPaymentTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class DepositQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class DepositQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class DepositTotal:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class DepositTotalInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class Desc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Description:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class DetailAccountTypeValue(Enum):
    AP = "AP"
    AR = "AR"
    ACCUMULATED_ADJUSTMENT = "AccumulatedAdjustment"
    ACCUMULATED_AMORTIZATION = "AccumulatedAmortization"
    ACCUMULATED_AMORTIZATION_OF_OTHER_ASSETS = (
        "AccumulatedAmortizationOfOtherAssets"
    )
    ACCUMULATED_DEPLETION = "AccumulatedDepletion"
    ACCUMULATED_DEPRECIATION = "AccumulatedDepreciation"
    ADVERTISING_OR_PROMOTIONAL = "AdvertisingOrPromotional"
    ALLOWANCE_FOR_BAD_DEBTS = "AllowanceForBadDebts"
    AMORTIZATION = "Amortization"
    AUTO = "Auto"
    BAD_DEBTS = "BadDebts"
    BANK_CHARGES = "BankCharges"
    BUILDINGS = "Buildings"
    CASH_ON_HAND = "CashOnHand"
    CHARITABLE_CONTRIBUTIONS = "CharitableContributions"
    CHECKING = "Checking"
    COMMON_STOCK = "CommonStock"
    COST_OF_LABOR = "CostOfLabor"
    COST_OF_LABOR_COS = "CostOfLaborCOS"
    CREDIT_CARD = "CreditCard"
    DEPLETABLE_ASSETS = "DepletableAssets"
    DEPRECIATION = "Depreciation"
    DEVELOPMENT_COSTS = "DevelopmentCosts"
    DISCOUNTS_OR_REFUNDS_GIVEN = "DiscountsOrRefundsGiven"
    DIVIDEND_INCOME = "DividendIncome"
    DUES_AND_SUBSCRIPTIONS = "DuesAndSubscriptions"
    EMPLOYEE_CASH_ADVANCES = "EmployeeCashAdvances"
    ENTERTAINMENT = "Entertainment"
    ENTERTAINMENT_MEALS = "EntertainmentMeals"
    EQUIPMENT_RENTAL = "EquipmentRental"
    EQUIPMENT_RENTAL_COS = "EquipmentRentalCOS"
    FEDERAL_INCOME_TAX_PAYABLE = "FederalIncomeTaxPayable"
    FURNITURE_AND_FIXTURES = "FurnitureAndFixtures"
    GOODWILL = "Goodwill"
    INSURANCE = "Insurance"
    INSURANCE_PAYABLE = "InsurancePayable"
    INTANGIBLE_ASSETS = "IntangibleAssets"
    INTEREST_EARNED = "InterestEarned"
    INTEREST_PAID = "InterestPaid"
    INVENTORY = "Inventory"
    INVESTMENT_MORTGAGE_OR_REAL_ESTATE_LOANS = (
        "InvestmentMortgageOrRealEstateLoans"
    )
    INVESTMENT_OTHER = "InvestmentOther"
    INVESTMENT_TAX_EXEMPT_SECURITIES = "InvestmentTaxExemptSecurities"
    INVESTMENT_USGOV_OBLIGATIONS = "InvestmentUSGovObligations"
    LAND = "Land"
    LEASE_BUYOUT = "LeaseBuyout"
    LEASEHOLD_IMPROVEMENTS = "LeaseholdImprovements"
    LEGAL_AND_PROFESSIONAL_FEES = "LegalAndProfessionalFees"
    LICENSES = "Licenses"
    LINE_OF_CREDIT = "LineOfCredit"
    LOAN_PAYABLE = "LoanPayable"
    LOANS_TO_OFFICERS = "LoansToOfficers"
    LOANS_TO_OTHERS = "LoansToOthers"
    LOANS_TO_STOCKHOLDERS = "LoansToStockholders"
    MACHINERY_AND_EQUIPMENT = "MachineryAndEquipment"
    MONEY_MARKET = "MoneyMarket"
    NON_PROFIT_INCOME = "NonProfitIncome"
    NOTES_PAYABLE = "NotesPayable"
    OFFICE_OR_GENERAL_ADMINISTRATIVE_EXPENSES = (
        "OfficeOrGeneralAdministrativeExpenses"
    )
    OPENING_BALANCE_EQUITY = "OpeningBalanceEquity"
    ORGANIZATIONAL_COSTS = "OrganizationalCosts"
    OTHER_COSTS_OF_SERVICE_COS = "OtherCostsOfServiceCOS"
    OTHER_CURRENT_ASSETS = "OtherCurrentAssets"
    OTHER_CURRENT_LIAB = "OtherCurrentLiab"
    OTHER_FIXED_ASSETS = "OtherFixedAssets"
    OTHER_INVESTMENT_INCOME = "OtherInvestmentIncome"
    OTHER_LONG_TERM_ASSETS = "OtherLongTermAssets"
    OTHER_LONG_TERM_LIAB = "OtherLongTermLiab"
    OTHER_MISC_EXPENSE = "OtherMiscExpense"
    OTHER_MISC_INCOME = "OtherMiscIncome"
    OTHER_MISC_SERVICE_COST = "OtherMiscServiceCost"
    OTHER_PRIMARY_INCOME = "OtherPrimaryIncome"
    OWNERS_EQUITY = "OwnersEquity"
    PAID_IN_CAPITAL_OR_SURPLUS = "PaidInCapitalOrSurplus"
    PARTNER_CONTRIBUTIONS = "PartnerContributions"
    PARTNER_DISTRIBUTIONS = "PartnerDistributions"
    PARTNERS_EQUITY = "PartnersEquity"
    PAYROLL_CLEARING = "PayrollClearing"
    PAYROLL_EXPENSES = "PayrollExpenses"
    PAYROLL_TAX_PAYABLE = "PayrollTaxPayable"
    PENALTIES_AND_SETTLEMENTS = "PenaltiesAndSettlements"
    PREFERRED_STOCK = "PreferredStock"
    PREPAID_EXPENSES = "PrepaidExpenses"
    PREPAID_EXPENSES_PAYABLE = "PrepaidExpensesPayable"
    PROMOTIONAL_MEALS = "PromotionalMeals"
    RENT_OR_LEASE_OF_BUILDINGS = "RentOrLeaseOfBuildings"
    RENTS_HELD_IN_TRUST = "RentsHeldInTrust"
    RENTS_IN_TRUST_LIAB = "RentsInTrustLiab"
    REPAIR_AND_MAINTENANCE = "RepairAndMaintenance"
    RETAINAGE = "Retainage"
    RETAINED_EARNINGS = "RetainedEarnings"
    SALES_OF_PRODUCT_INCOME = "SalesOfProductIncome"
    SALES_TAX_PAYABLE = "SalesTaxPayable"
    SAVINGS = "Savings"
    SECURITY_DEPOSITS = "SecurityDeposits"
    SERVICE_OR_FEE_INCOME = "ServiceOrFeeIncome"
    SHAREHOLDER_NOTES_PAYABLE = "ShareholderNotesPayable"
    SHIPPING_FREIGHT_AND_DELIVERY = "ShippingFreightAndDelivery"
    SHIPPING_FREIGHT_AND_DELIVERY_COS = "ShippingFreightAndDeliveryCOS"
    STATE_OR_LOCAL_INCOME_TAX_PAYABLE = "StateOrLocalIncomeTaxPayable"
    SUPPLIES_AND_MATERIALS = "SuppliesAndMaterials"
    SUPPLIES_AND_MATERIALS_COGS = "SuppliesAndMaterialsCOGS"
    TAX_EXEMPT_INTEREST = "TaxExemptInterest"
    TAXES_PAID = "TaxesPaid"
    TRAVEL = "Travel"
    TRAVEL_MEALS = "TravelMeals"
    TREASURY_STOCK = "TreasuryStock"
    TRUST_ACCOUNTS = "TrustAccounts"
    TRUST_ACCOUNTS_LIAB = "TrustAccountsLiab"
    UNDEPOSITED_FUNDS = "UndepositedFunds"
    UTILITIES = "Utilities"
    VEHICLES = "Vehicles"


@dataclass
class DisabilityDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class DisabledValue(Enum):
    YES = "Yes"
    NO = "No"


@dataclass
class DiscountAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class DiscountDayOfMonth:
    value: Optional[int] = field(
        default=None,
        metadata={
            "min_inclusive": 1,
            "max_inclusive": 31,
        },
    )


@dataclass
class DiscountPct:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class DiscountRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class DiscountRatePercent:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class Domain:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class DoneStatusValue(Enum):
    NOT_DONE_ONLY = "NotDoneOnly"
    DONE_ONLY = "DoneOnly"
    ALL = "All"


@dataclass
class DueNextMonthDays:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Ein:
    class Meta:
        name = "EIN"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class EditSequence:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Email:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class EmployeeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class EmployeeTypeValue(Enum):
    OFFICER = "Officer"
    OWNER = "Owner"
    REGULAR = "Regular"
    STATUTORY = "Statutory"


class EnabledIfNotValue(Enum):
    ACCOUNTANT_COPY_EXISTS = "AccountantCopyExists"
    ASSEMBLY_ITEMS_ENABLED = "AssemblyItemsEnabled"
    CLASSES_ENABLED = "ClassesEnabled"
    ESTIMATES_ENABLED = "EstimatesEnabled"
    HAS_CUSTOMERS = "HasCustomers"
    HAS_VENDORS = "HasVendors"
    INVENTORY_ENABLED = "InventoryEnabled"
    IS_ACCOUNTANT_COPY = "IsAccountantCopy"
    MULTI_USER_MODE = "MultiUserMode"
    PAYROLL_ENABLED = "PayrollEnabled"
    PRICE_LEVELS_ENABLED = "PriceLevelsEnabled"
    SALES_ORDERS_ENABLED = "SalesOrdersEnabled"
    SALES_TAX_ENABLED = "SalesTaxEnabled"
    TIME_TRACKING_ENABLED = "TimeTrackingEnabled"


class EnabledIfValue(Enum):
    ACCOUNTANT_COPY_EXISTS = "AccountantCopyExists"
    ASSEMBLY_ITEMS_ENABLED = "AssemblyItemsEnabled"
    CLASSES_ENABLED = "ClassesEnabled"
    ESTIMATES_ENABLED = "EstimatesEnabled"
    HAS_CUSTOMERS = "HasCustomers"
    HAS_VENDORS = "HasVendors"
    INVENTORY_ENABLED = "InventoryEnabled"
    IS_ACCOUNTANT_COPY = "IsAccountantCopy"
    MULTI_USER_MODE = "MultiUserMode"
    PAYROLL_ENABLED = "PayrollEnabled"
    PRICE_LEVELS_ENABLED = "PriceLevelsEnabled"
    SALES_ORDERS_ENABLED = "SalesOrdersEnabled"
    SALES_TAX_ENABLED = "SalesTaxEnabled"
    TIME_TRACKING_ENABLED = "TimeTrackingEnabled"


class EntityQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class EntityQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class EntityTypeFilterValue(Enum):
    CUSTOMER = "Customer"
    EMPLOYEE = "Employee"
    OTHER_NAME = "OtherName"
    VENDOR = "Vendor"


class EstimateQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class EstimateQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class EthnicityValue(Enum):
    AMERICIAN_INDIAN = "AmericianIndian"
    ASIAN = "Asian"
    BLACK = "Black"
    HAWAIIAN = "Hawaiian"
    HISPANIC = "Hispanic"
    WHITE = "White"
    TWO_OR_MORE_RACES = "TwoOrMoreRaces"


@dataclass
class EventTag:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ExemptValue(Enum):
    EXEMPT = "Exempt"
    NON_EXEMPT = "NonExempt"


@dataclass
class ExpirationMonth:
    value: Optional[int] = field(
        default=None,
        metadata={
            "min_inclusive": 1,
            "max_inclusive": 12,
        },
    )


@dataclass
class ExpirationYear:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ExternalGuid:
    class Meta:
        name = "ExternalGUID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"0|(\{[0-9a-fA-F]{8}(\-([0-9a-fA-F]{4})){3}\-[0-9a-fA-F]{12}\})",
        },
    )


class FloattypeValue(Enum):
    VALUE = ""


@dataclass
class Fob:
    class Meta:
        name = "FOB"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Fax:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class FirstDayOfWeekValue(Enum):
    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"
    SUNDAY = "Sunday"


class FirstMonthFiscalYearValue(Enum):
    JANUARY = "January"
    FEBRUARY = "February"
    MARCH = "March"
    APRIL = "April"
    MAY = "May"
    JUNE = "June"
    JULY = "July"
    AUGUST = "August"
    SEPTEMBER = "September"
    OCTOBER = "October"
    NOVEMBER = "November"
    DECEMBER = "December"


class FirstMonthIncomeTaxYearValue(Enum):
    JANUARY = "January"
    FEBRUARY = "February"
    MARCH = "March"
    APRIL = "April"
    MAY = "May"
    JUNE = "June"
    JULY = "July"
    AUGUST = "August"
    SEPTEMBER = "September"
    OCTOBER = "October"
    NOVEMBER = "November"
    DECEMBER = "December"


@dataclass
class FirstName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class FiscalYear:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FixedBillingRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class FromAccountBalance:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class FromName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class FromRefNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class FullName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class FullNameWithChildren:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class GenderValue(Enum):
    MALE = "Male"
    FEMALE = "Female"


class GeneralDetailReportTypeValue(Enum):
    VALUE_1099_DETAIL = "1099Detail"
    AUDIT_TRAIL = "AuditTrail"
    BALANCE_SHEET_DETAIL = "BalanceSheetDetail"
    CHECK_DETAIL = "CheckDetail"
    CUSTOMER_BALANCE_DETAIL = "CustomerBalanceDetail"
    DEPOSIT_DETAIL = "DepositDetail"
    ESTIMATES_BY_JOB = "EstimatesByJob"
    EXPENSE_BY_VENDOR_DETAIL = "ExpenseByVendorDetail"
    GENERAL_LEDGER = "GeneralLedger"
    INCOME_BY_CUSTOMER_DETAIL = "IncomeByCustomerDetail"
    INCOME_TAX_DETAIL = "IncomeTaxDetail"
    INVENTORY_VALUATION_DETAIL = "InventoryValuationDetail"
    JOB_PROGRESS_INVOICES_VS_ESTIMATES = "JobProgressInvoicesVsEstimates"
    JOURNAL = "Journal"
    MISSING_CHECKS = "MissingChecks"
    OPEN_INVOICES = "OpenInvoices"
    OPEN_POS = "OpenPOs"
    OPEN_POS_BY_JOB = "OpenPOsByJob"
    OPEN_SALES_ORDER_BY_CUSTOMER = "OpenSalesOrderByCustomer"
    OPEN_SALES_ORDER_BY_ITEM = "OpenSalesOrderByItem"
    PENDING_SALES = "PendingSales"
    PROFIT_AND_LOSS_DETAIL = "ProfitAndLossDetail"
    PURCHASE_BY_ITEM_DETAIL = "PurchaseByItemDetail"
    PURCHASE_BY_VENDOR_DETAIL = "PurchaseByVendorDetail"
    SALES_BY_CUSTOMER_DETAIL = "SalesByCustomerDetail"
    SALES_BY_ITEM_DETAIL = "SalesByItemDetail"
    SALES_BY_REP_DETAIL = "SalesByRepDetail"
    TXN_DETAIL_BY_ACCOUNT = "TxnDetailByAccount"
    TXN_LIST_BY_CUSTOMER = "TxnListByCustomer"
    TXN_LIST_BY_DATE = "TxnListByDate"
    TXN_LIST_BY_VENDOR = "TxnListByVendor"
    UNPAID_BILLS_DETAIL = "UnpaidBillsDetail"
    UNBILLED_COSTS_BY_JOB = "UnbilledCostsByJob"
    VENDOR_BALANCE_DETAIL = "VendorBalanceDetail"


class GeneralSummaryReportTypeValue(Enum):
    BALANCE_SHEET_BY_CLASS = "BalanceSheetByClass"
    BALANCE_SHEET_PREV_YEAR_COMP = "BalanceSheetPrevYearComp"
    BALANCE_SHEET_STANDARD = "BalanceSheetStandard"
    BALANCE_SHEET_SUMMARY = "BalanceSheetSummary"
    CUSTOMER_BALANCE_SUMMARY = "CustomerBalanceSummary"
    EXPENSE_BY_VENDOR_SUMMARY = "ExpenseByVendorSummary"
    INCOME_BY_CUSTOMER_SUMMARY = "IncomeByCustomerSummary"
    INVENTORY_STOCK_STATUS_BY_ITEM = "InventoryStockStatusByItem"
    INVENTORY_STOCK_STATUS_BY_VENDOR = "InventoryStockStatusByVendor"
    INCOME_TAX_SUMMARY = "IncomeTaxSummary"
    INVENTORY_VALUATION_SUMMARY = "InventoryValuationSummary"
    INVENTORY_VALUATION_SUMMARY_BY_SITE = "InventoryValuationSummaryBySite"
    LOT_NUMBER_IN_STOCK_BY_SITE = "LotNumberInStockBySite"
    PHYSICAL_INVENTORY_WORKSHEET = "PhysicalInventoryWorksheet"
    PROFIT_AND_LOSS_BY_CLASS = "ProfitAndLossByClass"
    PROFIT_AND_LOSS_BY_JOB = "ProfitAndLossByJob"
    PROFIT_AND_LOSS_PREV_YEAR_COMP = "ProfitAndLossPrevYearComp"
    PROFIT_AND_LOSS_STANDARD = "ProfitAndLossStandard"
    PROFIT_AND_LOSS_YTDCOMP = "ProfitAndLossYTDComp"
    PURCHASE_BY_ITEM_SUMMARY = "PurchaseByItemSummary"
    PURCHASE_BY_VENDOR_SUMMARY = "PurchaseByVendorSummary"
    SALES_BY_CUSTOMER_SUMMARY = "SalesByCustomerSummary"
    SALES_BY_ITEM_SUMMARY = "SalesByItemSummary"
    SALES_BY_REP_SUMMARY = "SalesByRepSummary"
    SALES_TAX_LIABILITY = "SalesTaxLiability"
    SALES_TAX_REVENUE_SUMMARY = "SalesTaxRevenueSummary"
    SERIAL_NUMBER_IN_STOCK_BY_SITE = "SerialNumberInStockBySite"
    TRIAL_BALANCE = "TrialBalance"
    VENDOR_BALANCE_SUMMARY = "VendorBalanceSummary"


@dataclass
class GracePeriod:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class HostInfo:
    product_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProductName",
            "type": "Element",
            "required": True,
            "max_length": 255,
        },
    )
    major_version: Optional[str] = field(
        default=None,
        metadata={
            "name": "MajorVersion",
            "type": "Element",
            "required": True,
            "max_length": 5,
        },
    )
    minor_version: Optional[str] = field(
        default=None,
        metadata={
            "name": "MinorVersion",
            "type": "Element",
            "required": True,
            "max_length": 5,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "required": True,
            "max_length": 2,
        },
    )


class IncludeAccountsValue(Enum):
    ALL = "All"
    IN_USE = "InUse"


class IncludeColumnValue(Enum):
    ACCOUNT = "Account"
    AGING = "Aging"
    AMOUNT = "Amount"
    AMOUNT_DIFFERENCE = "AmountDifference"
    AVERAGE_COST = "AverageCost"
    BILLED_DATE = "BilledDate"
    BILLING_STATUS = "BillingStatus"
    CALCULATED_AMOUNT = "CalculatedAmount"
    CLASS = "Class"
    CLEARED_STATUS = "ClearedStatus"
    COST_PRICE = "CostPrice"
    CREDIT = "Credit"
    CURRENCY = "Currency"
    DATE = "Date"
    DEBIT = "Debit"
    DELIVERY_DATE = "DeliveryDate"
    DUE_DATE = "DueDate"
    ESTIMATE_ACTIVE = "EstimateActive"
    EXCHANGE_RATE = "ExchangeRate"
    FOB = "FOB"
    INCOME_SUBJECT_TO_TAX = "IncomeSubjectToTax"
    INVOICED = "Invoiced"
    ITEM = "Item"
    ITEM_DESC = "ItemDesc"
    LAST_MODIFIED_BY = "LastModifiedBy"
    LATEST_OR_PRIOR_STATE = "LatestOrPriorState"
    MEMO = "Memo"
    MODIFIED_TIME = "ModifiedTime"
    NAME = "Name"
    NAME_ACCOUNT_NUMBER = "NameAccountNumber"
    NAME_ADDRESS = "NameAddress"
    NAME_CITY = "NameCity"
    NAME_CONTACT = "NameContact"
    NAME_EMAIL = "NameEmail"
    NAME_FAX = "NameFax"
    NAME_PHONE = "NamePhone"
    NAME_STATE = "NameState"
    NAME_ZIP = "NameZip"
    OPEN_BALANCE = "OpenBalance"
    ORIGINAL_AMOUNT = "OriginalAmount"
    PAID_AMOUNT = "PaidAmount"
    PAID_STATUS = "PaidStatus"
    PAID_THROUGH_DATE = "PaidThroughDate"
    PAYMENT_METHOD = "PaymentMethod"
    PAYROLL_ITEM = "PayrollItem"
    PONUMBER = "PONumber"
    PRINT_STATUS = "PrintStatus"
    PROGRESS_AMOUNT = "ProgressAmount"
    PROGRESS_PERCENT = "ProgressPercent"
    QUANTITY = "Quantity"
    QUANTITY_AVAILABLE = "QuantityAvailable"
    QUANTITY_ON_HAND = "QuantityOnHand"
    QUANTITY_ON_SALES_ORDER = "QuantityOnSalesOrder"
    RECEIVED_QUANTITY = "ReceivedQuantity"
    REF_NUMBER = "RefNumber"
    RUNNING_BALANCE = "RunningBalance"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SERIAL_OR_LOT_NUMBER = "SerialOrLotNumber"
    SHIP_DATE = "ShipDate"
    SHIP_METHOD = "ShipMethod"
    SOURCE_NAME = "SourceName"
    SPLIT_ACCOUNT = "SplitAccount"
    SSNOR_TAX_ID = "SSNOrTaxID"
    TAX_LINE = "TaxLine"
    TAX_TABLE_VERSION = "TaxTableVersion"
    TERMS = "Terms"
    TXN_ID = "TxnID"
    TXN_NUMBER = "TxnNumber"
    TXN_TYPE = "TxnType"
    UNIT_PRICE = "UnitPrice"
    USER_EDIT = "UserEdit"
    VALUE_ON_HAND = "ValueOnHand"
    WAGE_BASE = "WageBase"
    WAGE_BASE_TIPS = "WageBaseTips"


@dataclass
class IncludeRetElement:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Initial:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class InstallationId:
    class Meta:
        name = "InstallationID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


class InventoryAdjustmentQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class InventoryAdjustmentQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class InventorySiteQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class InvoiceQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class InvoiceQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class Invoiced:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class IsTrackingSerialOrLotNumberValue(Enum):
    NONE = "None"
    SERIAL_NUMBER = "SerialNumber"
    LOT_NUMBER = "LotNumber"


@dataclass
class ItemDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ItemDiscountQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemDiscountQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemFixedAssetQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemFixedAssetQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemGroupQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemGroupQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemInventoryAssemblyQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemInventoryAssemblyQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemInventoryQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemInventoryQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemNonInventoryQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemNonInventoryQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemOtherChargeQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemOtherChargeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemPaymentQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemPaymentQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemReceiptQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemReceiptQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemSalesTaxGroupQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemSalesTaxGroupQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemSalesTaxQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemSalesTaxQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemServiceQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemServiceQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemSitesQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemSitesQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemSubtotalQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ItemSubtotalQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ItemTypeFilterValue(Enum):
    ALL_EXCEPT_FIXED_ASSET = "AllExceptFixedAsset"
    ASSEMBLY = "Assembly"
    DISCOUNT = "Discount"
    FIXED_ASSET = "FixedAsset"
    INVENTORY = "Inventory"
    INVENTORY_AND_ASSEMBLY = "InventoryAndAssembly"
    NON_INVENTORY = "NonInventory"
    OTHER_CHARGE = "OtherCharge"
    PAYMENT = "Payment"
    SALES = "Sales"
    SALES_TAX = "SalesTax"
    SERVICE = "Service"


@dataclass
class JobDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class JobReportTypeValue(Enum):
    ITEM_ESTIMATES_VS_ACTUALS = "ItemEstimatesVsActuals"
    ITEM_PROFITABILITY = "ItemProfitability"
    JOB_ESTIMATES_VS_ACTUALS_DETAIL = "JobEstimatesVsActualsDetail"
    JOB_ESTIMATES_VS_ACTUALS_SUMMARY = "JobEstimatesVsActualsSummary"
    JOB_PROFITABILITY_DETAIL = "JobProfitabilityDetail"
    JOB_PROFITABILITY_SUMMARY = "JobProfitabilitySummary"
    VALUE = ""


class JobStatusValue(Enum):
    AWARDED = "Awarded"
    CLOSED = "Closed"
    IN_PROGRESS = "InProgress"
    NONE = "None"
    NOT_AWARDED = "NotAwarded"
    PENDING = "Pending"


@dataclass
class JobTitle:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class JobTypeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class JournalEntryQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class JournalEntryQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class JournalLineTypeValue(Enum):
    DEBIT = "Debit"
    CREDIT = "Credit"


class KeyEmployeeValue(Enum):
    YES = "Yes"
    NO = "No"


@dataclass
class Language:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class LastCheckNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class LastName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class LeadAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class LeadContactId:
    class Meta:
        name = "LeadContactID"

    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


class LeadQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class LeadQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class LegalAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class LegalCompanyName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class LineTypeValue(Enum):
    ECPURCHASES = "ECPurchases"
    ECSALES = "ECSales"
    PURCHASES = "Purchases"
    SALES = "Sales"
    SUB_TOTAL = "SubTotal"
    TAX_ON_PURCHASES = "TaxOnPurchases"
    TAX_ON_SALES = "TaxOnSales"
    TOTAL = "Total"


@dataclass
class LinkToTxnId:
    class Meta:
        name = "LinkToTxnID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


class LinkTypeValue(Enum):
    AMTTYPE = "AMTTYPE"
    QUANTYPE = "QUANTYPE"


class ListDataExtTypeValue(Enum):
    ACCOUNT = "Account"
    CUSTOMER = "Customer"
    EMPLOYEE = "Employee"
    ITEM = "Item"
    OTHER_NAME = "OtherName"
    VENDOR = "Vendor"


class ListDelTypeValue(Enum):
    ACCOUNT = "Account"
    BILLING_RATE = "BillingRate"
    CLASS = "Class"
    CURRENCY = "Currency"
    CUSTOMER = "Customer"
    CUSTOMER_MSG = "CustomerMsg"
    CUSTOMER_TYPE = "CustomerType"
    DATE_DRIVEN_TERMS = "DateDrivenTerms"
    EMPLOYEE = "Employee"
    INVENTORY_SITE = "InventorySite"
    ITEM_DISCOUNT = "ItemDiscount"
    ITEM_FIXED_ASSET = "ItemFixedAsset"
    ITEM_GROUP = "ItemGroup"
    ITEM_INVENTORY = "ItemInventory"
    ITEM_INVENTORY_ASSEMBLY = "ItemInventoryAssembly"
    ITEM_NON_INVENTORY = "ItemNonInventory"
    ITEM_OTHER_CHARGE = "ItemOtherCharge"
    ITEM_PAYMENT = "ItemPayment"
    ITEM_SALES_TAX = "ItemSalesTax"
    ITEM_SALES_TAX_GROUP = "ItemSalesTaxGroup"
    ITEM_SERVICE = "ItemService"
    ITEM_SUBTOTAL = "ItemSubtotal"
    JOB_TYPE = "JobType"
    OTHER_NAME = "OtherName"
    PAYMENT_METHOD = "PaymentMethod"
    PAYROLL_ITEM_NON_WAGE = "PayrollItemNonWage"
    PAYROLL_ITEM_WAGE = "PayrollItemWage"
    PRICE_LEVEL = "PriceLevel"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SHIP_METHOD = "ShipMethod"
    STANDARD_TERMS = "StandardTerms"
    TO_DO = "ToDo"
    UNIT_OF_MEASURE_SET = "UnitOfMeasureSet"
    VEHICLE = "Vehicle"
    VENDOR = "Vendor"
    VENDOR_TYPE = "VendorType"
    WORKERS_COMP_CODE = "WorkersCompCode"


class ListDeletedQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class ListDisplayAddRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


class ListDisplayAddTypeValue(Enum):
    ACCOUNT = "Account"
    CUSTOMER = "Customer"
    EMPLOYEE = "Employee"
    ITEM = "Item"
    OTHER_NAME = "OtherName"
    VENDOR = "Vendor"


@dataclass
class ListDisplayModRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


class ListDisplayModTypeValue(Enum):
    ACCOUNT = "Account"
    CUSTOMER = "Customer"
    EMPLOYEE = "Employee"
    ITEM = "Item"
    OTHER_NAME = "OtherName"
    VENDOR = "Vendor"


class ListEventOperationValue(Enum):
    ADD = "Add"
    MODIFY = "Modify"
    DELETE = "Delete"
    MERGE = "Merge"


class ListEventTypeValue(Enum):
    ACCOUNT = "Account"
    CLASS = "Class"
    CUSTOMER = "Customer"
    CUSTOMER_MSG = "CustomerMsg"
    CUSTOMER_TYPE = "CustomerType"
    DATE_DRIVEN_TERMS = "DateDrivenTerms"
    EMPLOYEE = "Employee"
    ITEM_DISCOUNT = "ItemDiscount"
    ITEM_FIXED_ASSET = "ItemFixedAsset"
    ITEM_GROUP = "ItemGroup"
    ITEM_INVENTORY = "ItemInventory"
    ITEM_INVENTORY_ASSEMBLY = "ItemInventoryAssembly"
    ITEM_NON_INVENTORY = "ItemNonInventory"
    ITEM_OTHER_CHARGE = "ItemOtherCharge"
    ITEM_PAYMENT = "ItemPayment"
    ITEM_SALES_TAX = "ItemSalesTax"
    ITEM_SALES_TAX_GROUP = "ItemSalesTaxGroup"
    ITEM_SERVICE = "ItemService"
    ITEM_SUBTOTAL = "ItemSubtotal"
    JOB_TYPE = "JobType"
    OTHER_NAME = "OtherName"
    PAYMENT_METHOD = "PaymentMethod"
    PRICE_LEVEL = "PriceLevel"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SHIP_METHOD = "ShipMethod"
    STANDARD_TERMS = "StandardTerms"
    TO_DO = "ToDo"
    VENDOR = "Vendor"
    VENDOR_TYPE = "VendorType"


@dataclass
class ListId:
    class Meta:
        name = "ListID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class ListIdwithChildren:
    class Meta:
        name = "ListIDWithChildren"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


class ListMergeTypeValue(Enum):
    ACCOUNT = "Account"
    CLASS = "Class"
    CUSTOMER = "Customer"
    ITEM_DISCOUNT = "ItemDiscount"
    ITEM_GROUP = "ItemGroup"
    ITEM_INVENTORY = "ItemInventory"
    ITEM_NON_INVENTORY = "ItemNonInventory"
    ITEM_OTHER_CHARGE = "ItemOtherCharge"
    ITEM_PAYMENT = "ItemPayment"
    ITEM_SALES_TAX = "ItemSalesTax"
    ITEM_SALES_TAX_GROUP = "ItemSalesTaxGroup"
    ITEM_SERVICE = "ItemService"
    ITEM_SUBTOTAL = "ItemSubtotal"
    VENDOR = "Vendor"


class ListTypeValue(Enum):
    ACCOUNT = "Account"
    CLASS = "Class"
    CUSTOMER = "Customer"
    CUSTOMER_MSG = "CustomerMsg"
    CUSTOMER_TYPE = "CustomerType"
    DATE_DRIVEN_TERMS = "DateDrivenTerms"
    EMPLOYEE = "Employee"
    ITEM_DISCOUNT = "ItemDiscount"
    ITEM_FIXED_ASSET = "ItemFixedAsset"
    ITEM_GROUP = "ItemGroup"
    ITEM_INVENTORY = "ItemInventory"
    ITEM_INVENTORY_ASSEMBLY = "ItemInventoryAssembly"
    ITEM_NON_INVENTORY = "ItemNonInventory"
    ITEM_OTHER_CHARGE = "ItemOtherCharge"
    ITEM_PAYMENT = "ItemPayment"
    ITEM_SALES_TAX = "ItemSalesTax"
    ITEM_SALES_TAX_GROUP = "ItemSalesTaxGroup"
    ITEM_SERVICE = "ItemService"
    ITEM_SUBTOTAL = "ItemSubtotal"
    JOB_TYPE = "JobType"
    OTHER_NAME = "OtherName"
    PAYMENT_METHOD = "PaymentMethod"
    PRICE_LEVEL = "PriceLevel"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SHIP_METHOD = "ShipMethod"
    STANDARD_TERMS = "StandardTerms"
    TO_DO = "ToDo"
    VENDOR = "Vendor"
    VENDOR_TYPE = "VendorType"


@dataclass
class Location:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class LocationId:
    class Meta:
        name = "LocationID"

    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class LotNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class MainAddress:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class MainPhone:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class MajorVersion:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ManufacturerPartNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class MappingCategoryValue(Enum):
    BOX1 = "BOX1"
    BOX2 = "BOX2"
    BOX3 = "BOX3"
    BOX4 = "BOX4"
    BOX5 = "BOX5"
    BOX6 = "BOX6"
    BOX7 = "BOX7"
    BOX8 = "BOX8"
    BOX9 = "BOX9"
    BOX10 = "BOX10"
    BOX13 = "BOX13"
    BOX14 = "BOX14"


@dataclass
class MarkupRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class MarkupRatePercent:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class MatchCriterionValue(Enum):
    STARTS_WITH = "StartsWith"
    CONTAINS = "Contains"
    ENDS_WITH = "EndsWith"


@dataclass
class Max:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class MaxCapacity:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class MaxReturned:
    value: Optional[int] = field(
        default=None,
        metadata={
            "min_inclusive": 1,
        },
    )


@dataclass
class Memo:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class MenuText:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class MerchantAccountNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class MiddleName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class MilitaryStatusValue(Enum):
    ACTIVE = "Active"
    RESERVE = "Reserve"


@dataclass
class MinFinanceCharge:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class MinorVersion:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Mobile:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Name:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class NameOnCard:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class NameOnCheck:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class NewQuantity:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class NewValue:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class NextRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class NonWageTypeValue(Enum):
    ADDITION = "Addition"
    COMPANY_CONTRIBUTION = "CompanyContribution"
    DEDUCTION = "Deduction"
    DIRECT_DEPOSIT = "DirectDeposit"
    TAX = "Tax"


@dataclass
class Note:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class NoteId:
    class Meta:
        name = "NoteID"

    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Notes:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class NumColTitleRows:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class NumColumns:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class NumRows:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class OdometerEnd:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class OdometerStart:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class OnFileValue(Enum):
    YES = "Yes"
    NO = "No"


@dataclass
class OpenAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class OpenBalance:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class OperatorValue(Enum):
    LESS_THAN = "LessThan"
    LESS_THAN_EQUAL = "LessThanEqual"
    EQUAL = "Equal"
    GREATER_THAN = "GreaterThan"
    GREATER_THAN_EQUAL = "GreaterThanEqual"


class OptionForPriceRuleConflictValue(Enum):
    ZERO = "Zero"
    BASE_PRICE = "BasePrice"


@dataclass
class OriginalAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class Other:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Other1:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Other2:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class OtherDataExtTypeValue(Enum):
    COMPANY = "Company"


@dataclass
class OtherNameAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class OtherNameAddressBlock:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


class OtherNameQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class OverrideCheckNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class OverrideMemo:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class OwnerId:
    class Meta:
        name = "OwnerID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"0|(\{[0-9a-fA-F]{8}(\-([0-9a-fA-F]{4})){3}\-[0-9a-fA-F]{12}\})",
        },
    )


@dataclass
class Ponumber:
    class Meta:
        name = "PONumber"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class Pager:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class PagerPin:
    class Meta:
        name = "PagerPIN"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class PaidStatusValue(Enum):
    ALL = "All"
    PAID_ONLY = "PaidOnly"
    NOT_PAID_ONLY = "NotPaidOnly"


class PartOrFullTimeValue(Enum):
    PART_TIME = "PartTime"
    FULL_TIME = "FullTime"


class PayPeriodValue(Enum):
    DAILY = "Daily"
    WEEKLY = "Weekly"
    BIWEEKLY = "Biweekly"
    SEMIMONTHLY = "Semimonthly"
    MONTHLY = "Monthly"
    QUARTERLY = "Quarterly"
    YEARLY = "Yearly"


class PaySalesTaxValue(Enum):
    MONTHLY = "Monthly"
    QUARTERLY = "Quarterly"
    ANNUALLY = "Annually"


@dataclass
class PaymentAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class PaymentGroupingCode:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


class PaymentMethodQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class PaymentMethodTypeValue(Enum):
    AMERICAN_EXPRESS = "AmericanExpress"
    CASH = "Cash"
    CHECK = "Check"
    DEBIT_CARD = "DebitCard"
    DISCOVER = "Discover"
    ECHECK = "ECheck"
    GIFT_CARD = "GiftCard"
    MASTER_CARD = "MasterCard"
    OTHER = "Other"
    OTHER_CREDIT_CARD = "OtherCreditCard"
    VISA = "Visa"


class PaymentStatusValue(Enum):
    UNKNOWN = "Unknown"
    COMPLETED = "Completed"


@dataclass
class PaymentTxnId:
    class Meta:
        name = "PaymentTxnID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class PaymentTxnLineId:
    class Meta:
        name = "PaymentTxnLineID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


class PayrollDetailReportTypeValue(Enum):
    EMPLOYEE_STATE_TAXES_DETAIL = "EmployeeStateTaxesDetail"
    PAYROLL_ITEM_DETAIL = "PayrollItemDetail"
    PAYROLL_REVIEW_DETAIL = "PayrollReviewDetail"
    PAYROLL_TRANSACTION_DETAIL = "PayrollTransactionDetail"
    PAYROLL_TRANSACTIONS_BY_PAYEE = "PayrollTransactionsByPayee"


class PayrollItemNonWageQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class PayrollItemWageQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class PayrollLastPeriodQueryRqType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


class PayrollSummaryReportTypeValue(Enum):
    EMPLOYEE_EARNINGS_SUMMARY = "EmployeeEarningsSummary"
    PAYROLL_LIABILITY_BALANCES = "PayrollLiabilityBalances"
    PAYROLL_SUMMARY = "PayrollSummary"


class PendingStatusValue(Enum):
    ALL = "All"
    PENDING_ONLY = "PendingOnly"
    NOT_PENDING_ONLY = "NotPendingOnly"


@dataclass
class Phone:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class PostalCode:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class PreferencesQueryRqType:
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


class PreferredDeliveryMethodValue(Enum):
    NONE = "None"
    EMAIL = "Email"
    FAX = "Fax"


@dataclass
class Price:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class PriceLevelFixedPercentage:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class PriceLevelQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class PriceLevelTypeValue(Enum):
    FIXED_PERCENTAGE = "FixedPercentage"
    PER_ITEM = "PerItem"


@dataclass
class PricePercent:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class PrintAs:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class PriorityValue(Enum):
    LOW = "Low"
    MEDIUM = "Medium"
    HIGH = "High"


@dataclass
class ProductName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ProgId:
    class Meta:
        name = "ProgID"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class PurchaseCost:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class PurchaseDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class PurchaseOrderLineGroupModTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderLineModTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderModTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class PurchaseOrderQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class PurchaseOrderQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class QbfileModeValue(Enum):
    MULTI_USER = "MultiUser"
    SINGLE_USER = "SingleUser"


class QbxmlmsgsRqOnError(Enum):
    CONTINUE_ON_ERROR = "continueOnError"
    ROLLBACK_ON_ERROR = "rollbackOnError"
    STOP_ON_ERROR = "stopOnError"


class QbxmlmsgsRqResponseData(Enum):
    INCLUDE_ALL = "includeAll"
    INCLUDE_NONE = "includeNone"


@dataclass
class Quantity:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityCanBuild:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityDifference:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityNeeded:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityOnHand:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityOnOrder:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityOnPendingTransfers:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityOnPurchaseOrders:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityOnSalesOrder:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityOnSalesOrders:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityRequiredByPendingBuildTxns:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityToBeBuiltByPendingBuildTxns:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityToBuild:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityToTransfer:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class QuantityTransferred:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class Rate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class RatePercent:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class ReceivePaymentQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class ReceivePaymentQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class ReceivePaymentToDepositQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class ReceivedQuantity:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class ReconBatchId:
    class Meta:
        name = "ReconBatchID"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class RefNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class RefNumberCaseSensitive:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class RefundAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class RefundAmountInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class RefundAppliedToTxnAddTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class RelationValue(Enum):
    SPOUSE = "Spouse"
    PARTNER = "Partner"
    MOTHER = "Mother"
    FATHER = "Father"
    SISTER = "Sister"
    BROTHER = "Brother"
    SON = "Son"
    DAUGHTER = "Daughter"
    FRIEND = "Friend"
    OTHER = "Other"


class RemoveFromObjectValue(Enum):
    ACCOUNT = "Account"
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    COMPANY = "Company"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    CUSTOMER = "Customer"
    DEPOSIT = "Deposit"
    EMPLOYEE = "Employee"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM = "Item"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    OTHER_NAME = "OtherName"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    VENDOR = "Vendor"
    VENDOR_CREDIT = "VendorCredit"


@dataclass
class RemoveSerialNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ReorderLevel:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class ReorderPoint:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class ReportAgingAsOfValue(Enum):
    REPORT_END_DATE = "ReportEndDate"
    TODAY = "Today"


class ReportBasisValue(Enum):
    ACCRUAL = "Accrual"
    CASH = "Cash"
    NONE = "None"


class ReportCalendarValue(Enum):
    CALENDAR_YEAR = "CalendarYear"
    FISCAL_YEAR = "FiscalYear"
    TAX_YEAR = "TaxYear"


class ReportDateMacroValue(Enum):
    ALL = "All"
    TODAY = "Today"
    THIS_WEEK = "ThisWeek"
    THIS_WEEK_TO_DATE = "ThisWeekToDate"
    THIS_MONTH = "ThisMonth"
    THIS_MONTH_TO_DATE = "ThisMonthToDate"
    THIS_QUARTER = "ThisQuarter"
    THIS_QUARTER_TO_DATE = "ThisQuarterToDate"
    THIS_YEAR = "ThisYear"
    THIS_YEAR_TO_DATE = "ThisYearToDate"
    YESTERDAY = "Yesterday"
    LAST_WEEK = "LastWeek"
    LAST_WEEK_TO_DATE = "LastWeekToDate"
    LAST_MONTH = "LastMonth"
    LAST_MONTH_TO_DATE = "LastMonthToDate"
    LAST_QUARTER = "LastQuarter"
    LAST_QUARTER_TO_DATE = "LastQuarterToDate"
    LAST_YEAR = "LastYear"
    LAST_YEAR_TO_DATE = "LastYearToDate"
    NEXT_WEEK = "NextWeek"
    NEXT_FOUR_WEEKS = "NextFourWeeks"
    NEXT_MONTH = "NextMonth"
    NEXT_QUARTER = "NextQuarter"
    NEXT_YEAR = "NextYear"


class ReportDetailLevelFilterValue(Enum):
    ALL = "All"
    ALL_EXCEPT_SUMMARY = "AllExceptSummary"
    SUMMARY_ONLY = "SummaryOnly"


class ReportModifiedDateRangeMacroValue(Enum):
    ALL = "All"
    TODAY = "Today"
    THIS_WEEK = "ThisWeek"
    THIS_WEEK_TO_DATE = "ThisWeekToDate"
    THIS_MONTH = "ThisMonth"
    THIS_MONTH_TO_DATE = "ThisMonthToDate"
    THIS_QUARTER = "ThisQuarter"
    THIS_QUARTER_TO_DATE = "ThisQuarterToDate"
    THIS_YEAR = "ThisYear"
    THIS_YEAR_TO_DATE = "ThisYearToDate"
    YESTERDAY = "Yesterday"
    LAST_WEEK = "LastWeek"
    LAST_WEEK_TO_DATE = "LastWeekToDate"
    LAST_MONTH = "LastMonth"
    LAST_MONTH_TO_DATE = "LastMonthToDate"
    LAST_QUARTER = "LastQuarter"
    LAST_QUARTER_TO_DATE = "LastQuarterToDate"
    LAST_YEAR = "LastYear"
    LAST_YEAR_TO_DATE = "LastYearToDate"
    NEXT_WEEK = "NextWeek"
    NEXT_FOUR_WEEKS = "NextFourWeeks"
    NEXT_MONTH = "NextMonth"
    NEXT_QUARTER = "NextQuarter"
    NEXT_YEAR = "NextYear"


class ReportOpenBalanceAsOfValue(Enum):
    REPORT_END_DATE = "ReportEndDate"
    TODAY = "Today"


class ReportPostingStatusFilterValue(Enum):
    EITHER = "Either"
    NON_POSTING = "NonPosting"
    POSTING = "Posting"


@dataclass
class ReportSubtitle:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ReportTitle:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ReportingPeriodValue(Enum):
    MONTHLY = "Monthly"
    QUARTERLY = "Quarterly"


@dataclass
class ResaleNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ResultCode:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ResultMessage:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class ReturnColumnsValue(Enum):
    ACTIVE_ONLY = "ActiveOnly"
    NON_ZERO = "NonZero"
    ALL = "All"


class ReturnRowsValue(Enum):
    ACTIVE_ONLY = "ActiveOnly"
    NON_ZERO = "NonZero"
    ALL = "All"


class RowDataRowType(Enum):
    ACCOUNT = "account"
    CLASS = "class"
    CUSTOMER = "customer"
    CUSTOMER_MESSAGE = "customerMessage"
    CUSTOMER_TYPE = "customerType"
    EMPLOYEE = "employee"
    ITEM = "item"
    JOB_TYPE = "jobType"
    LABEL = "label"
    MEMORIZED_TXN = "memorizedTxn"
    MEMORIZED_REPORT = "memorizedReport"
    NAME = "name"
    OTHER_NAME = "otherName"
    PAYMENT_METHOD = "paymentMethod"
    PAYROLL_ITEM = "payrollItem"
    SALES_REP = "salesRep"
    SALES_TAX_CODE = "salesTaxCode"
    SHIP_METHOD = "shipMethod"
    STATE = "state"
    STYLE = "style"
    TERMS = "terms"
    TO_DO = "toDo"
    VENDOR = "vendor"
    VENDOR_TYPE = "vendorType"


@dataclass
class Ssn:
    class Meta:
        name = "SSN"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class SalesDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class SalesExpense:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


class SalesOrderQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class SalesOrderQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class SalesPrice:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class SalesReceiptLineGroupModTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptLineModTxnLineId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptModTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


class SalesReceiptQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class SalesReceiptQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class SalesRepQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class SalesTaxCodeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class SalesTaxCountryValue(Enum):
    AUSTRALIA = "Australia"
    CANADA = "Canada"
    UK = "UK"
    US = "US"


class SalesTaxPayableQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class SalesTaxPaymentCheckQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class SalesTaxPaymentCheckQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class SalesTaxPercentage:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class SalesTaxReturnLineNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class SalesTaxReturnLineQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class SalesTaxReturnQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class SalesTaxTotal:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class Salutation:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class SerialNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class SerialNumberAddedOrRemovedValue(Enum):
    ADDED = "Added"
    REMOVED = "Removed"


class ServiceStatusValue(Enum):
    ACTIVE = "Active"
    EXPIRED = "Expired"
    NEVER = "Never"
    PENDING = "Pending"
    SUSPENDED = "Suspended"
    TERMINATED = "Terminated"
    TRIAL = "Trial"


@dataclass
class SessionTicket:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class SetCreditCreditTxnId:
    class Meta:
        global_type = False

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )
    use_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "useMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ShipAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class ShipAddressBlock:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


class ShipMethodQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class SiteAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class SiteAddressBlock:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class SiteDesc:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class SpecialAccountTypeValue(Enum):
    ACCOUNTS_PAYABLE = "AccountsPayable"
    ACCOUNTS_RECEIVABLE = "AccountsReceivable"
    CONDENSE_ITEM_ADJUSTMENT_EXPENSES = "CondenseItemAdjustmentExpenses"
    COST_OF_GOODS_SOLD = "CostOfGoodsSold"
    DIRECT_DEPOSIT_LIABILITIES = "DirectDepositLiabilities"
    ESTIMATES = "Estimates"
    EXCHANGE_GAIN_LOSS = "ExchangeGainLoss"
    INVENTORY_ASSETS = "InventoryAssets"
    ITEM_RECEIPT_ACCOUNT = "ItemReceiptAccount"
    OPENING_BALANCE_EQUITY = "OpeningBalanceEquity"
    PAYROLL_EXPENSES = "PayrollExpenses"
    PAYROLL_LIABILITIES = "PayrollLiabilities"
    PETTY_CASH = "PettyCash"
    PURCHASE_ORDERS = "PurchaseOrders"
    RECONCILIATION_DIFFERENCES = "ReconciliationDifferences"
    RETAINED_EARNINGS = "RetainedEarnings"
    SALES_ORDERS = "SalesOrders"
    SALES_TAX_PAYABLE = "SalesTaxPayable"
    UNCATEGORIZED_EXPENSES = "UncategorizedExpenses"
    UNCATEGORIZED_INCOME = "UncategorizedIncome"
    UNDEPOSITED_FUNDS = "UndepositedFunds"


class SpecialItemTypeValue(Enum):
    FINANCE_CHARGE = "FinanceCharge"
    REIMBURSABLE_EXPENSE_GROUP = "ReimbursableExpenseGroup"
    REIMBURSABLE_EXPENSE_SUBTOTAL = "ReimbursableExpenseSubtotal"


@dataclass
class StandardMileageRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class StandardMileageTotalAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class StandardTermsQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class State:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class StatementId:
    class Meta:
        name = "StatementID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


class StatusValue(Enum):
    HOT = "Hot"
    WARM = "Warm"
    COLD = "Cold"


@dataclass
class StdDiscountDays:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class StdDueDays:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Sublevel:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class SubscriberId:
    class Meta:
        name = "SubscriberID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"0|(\{[0-9a-fA-F]{8}(\-([0-9a-fA-F]{4})){3}\-[0-9a-fA-F]{12}\})",
        },
    )


@dataclass
class SubscriptionDelRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


class SubscriptionTypeValue(Enum):
    DATA = "Data"
    UI = "UI"
    UIEXTENSION = "UIExtension"


@dataclass
class Subtotal:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class Suffix:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class SuggestedDiscountAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class SummarizeBudgetColumnsByValue(Enum):
    CLASS = "Class"
    CUSTOMER = "Customer"
    DATE = "Date"


class SummarizeBudgetRowsByValue(Enum):
    ACCOUNT = "Account"
    CLASS = "Class"
    CUSTOMER = "Customer"


class SummarizeColumnsByValue(Enum):
    ACCOUNT = "Account"
    BALANCE_SHEET = "BalanceSheet"
    CLASS = "Class"
    CUSTOMER = "Customer"
    CUSTOMER_TYPE = "CustomerType"
    DAY = "Day"
    EMPLOYEE = "Employee"
    FOUR_WEEK = "FourWeek"
    HALF_MONTH = "HalfMonth"
    INCOME_STATEMENT = "IncomeStatement"
    ITEM_DETAIL = "ItemDetail"
    ITEM_TYPE = "ItemType"
    MONTH = "Month"
    PAYEE = "Payee"
    PAYMENT_METHOD = "PaymentMethod"
    PAYROLL_ITEM_DETAIL = "PayrollItemDetail"
    PAYROLL_YTD_DETAIL = "PayrollYtdDetail"
    QUARTER = "Quarter"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SHIP_METHOD = "ShipMethod"
    TERMS = "Terms"
    TOTAL_ONLY = "TotalOnly"
    TWO_WEEK = "TwoWeek"
    VENDOR = "Vendor"
    VENDOR_TYPE = "VendorType"
    WEEK = "Week"
    YEAR = "Year"


class SummarizeRowsByValue(Enum):
    ACCOUNT = "Account"
    BALANCE_SHEET = "BalanceSheet"
    CLASS = "Class"
    CUSTOMER = "Customer"
    CUSTOMER_TYPE = "CustomerType"
    DAY = "Day"
    EMPLOYEE = "Employee"
    FOUR_WEEK = "FourWeek"
    HALF_MONTH = "HalfMonth"
    INCOME_STATEMENT = "IncomeStatement"
    ITEM_DETAIL = "ItemDetail"
    ITEM_TYPE = "ItemType"
    MONTH = "Month"
    PAYEE = "Payee"
    PAYMENT_METHOD = "PaymentMethod"
    PAYROLL_ITEM_DETAIL = "PayrollItemDetail"
    PAYROLL_YTD_DETAIL = "PayrollYtdDetail"
    QUARTER = "Quarter"
    SALES_REP = "SalesRep"
    SALES_TAX_CODE = "SalesTaxCode"
    SHIP_METHOD = "ShipMethod"
    TAX_LINE = "TaxLine"
    TERMS = "Terms"
    TOTAL_ONLY = "TotalOnly"
    TWO_WEEK = "TwoWeek"
    VENDOR = "Vendor"
    VENDOR_TYPE = "VendorType"
    WEEK = "Week"
    YEAR = "Year"


class SummaryReportBasisValue(Enum):
    ACCRUAL = "Accrual"
    CASH = "Cash"


@dataclass
class SupportedQbxmlversion:
    class Meta:
        name = "SupportedQBXMLVersion"

    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class TimeintervaltypeValue(Enum):
    VALUE = ""


@dataclass
class TargetBonus:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class TargetParentId:
    class Meta:
        name = "TargetParentID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class TaxAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class TaxFormValue(Enum):
    FORM1040 = "Form1040"
    FORM1065 = "Form1065"
    FORM1120 = "Form1120"
    FORM1120_S = "Form1120S"
    FORM990 = "Form990"
    FORM990_PF = "Form990PF"
    FORM990_T = "Form990T"
    OTHER_OR_NONE = "OtherOrNone"


@dataclass
class TaxLineId:
    class Meta:
        name = "TaxLineID"

    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class TaxLineName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class TaxRate:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class TaxRegistrationNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class TemplateQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class TemplateTypeValue(Enum):
    BUILD_ASSEMBLY = "BuildAssembly"
    CREDIT_MEMO = "CreditMemo"
    ESTIMATE = "Estimate"
    INVOICE = "Invoice"
    PURCHASE_ORDER = "PurchaseOrder"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"


class TermsQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class TextRow:
    row_number: Optional[int] = field(
        default=None,
        metadata={
            "name": "rowNumber",
            "type": "Attribute",
            "required": True,
        },
    )
    value: Optional[str] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )


class ThousandSeparatorGroupingValue(Enum):
    XX_XXX_XXX = "XX_XXX_XXX"
    X_XX_XX_XXX_1 = "X_XX_XX_XXX"


class ThousandSeparatorValue(Enum):
    COMMA = "Comma"
    PERIOD = "Period"
    SPACE = "Space"
    APOSTROPHE = "Apostrophe"


@dataclass
class Threshold:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class TimeReportTypeValue(Enum):
    TIME_BY_ITEM = "TimeByItem"
    TIME_BY_JOB_DETAIL = "TimeByJobDetail"
    TIME_BY_JOB_SUMMARY = "TimeByJobSummary"
    TIME_BY_NAME = "TimeByName"


class TimeTrackingQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class TimeTrackingQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class ToAccountBalance:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class ToDoQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class ToName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class ToRefNumber:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class TotalAmount:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class TotalAmountInHomeCurrency:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class TotalBalance:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class TotalMiles:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class TotalValue:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class TrackLostEventsValue(Enum):
    ALL = "All"
    NONE = "None"


class TransactionDetailLevelFilterValue(Enum):
    ALL = "All"
    SUMMARY_ONLY = "SummaryOnly"
    ALL_EXCEPT_SUMMARY = "AllExceptSummary"


class TransactionModeValue(Enum):
    CARD_NOT_PRESENT = "CardNotPresent"
    CARD_PRESENT = "CardPresent"


class TransactionPaidStatusFilterValue(Enum):
    EITHER = "Either"
    CLOSED = "Closed"
    OPEN = "Open"


class TransactionPostingStatusFilterValue(Enum):
    EITHER = "Either"
    NON_POSTING = "NonPosting"
    POSTING = "Posting"


class TransactionQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class TransactionQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class TransferInventoryQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class TransferInventoryQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class TransferQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class TransferQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class TxnAuthorizationStamp:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


class TxnDataExtTypeValue(Enum):
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    VENDOR_CREDIT = "VendorCredit"


class TxnDelTypeValue(Enum):
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    TIME_TRACKING = "TimeTracking"
    TRANSFER_INVENTORY = "TransferInventory"
    VEHICLE_MILEAGE = "VehicleMileage"
    VENDOR_CREDIT = "VendorCredit"


class TxnDeletedQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class TxnDisplayAddRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


class TxnDisplayAddTypeValue(Enum):
    BILL = "Bill"
    BILL_PAYMENT = "BillPayment"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    VENDOR_CREDIT = "VendorCredit"


@dataclass
class TxnDisplayModRsType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


class TxnDisplayModTypeValue(Enum):
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    VENDOR_CREDIT = "VendorCredit"


class TxnEventOperationValue(Enum):
    ADD = "Add"
    MODIFY = "Modify"
    DELETE = "Delete"


class TxnEventTypeValue(Enum):
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    TIME_TRACKING = "TimeTracking"
    VENDOR_CREDIT = "VendorCredit"


@dataclass
class TxnId:
    class Meta:
        name = "TxnID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class TxnLineId:
    class Meta:
        name = "TxnLineID"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "max_length": 36,
        },
    )


@dataclass
class TxnNumber:
    value: Optional[int] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


class TxnTypeFilterValue(Enum):
    ALL = "All"
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    LIABILITY_ADJUSTMENT = "LiabilityAdjustment"
    PAYCHECK = "Paycheck"
    PAYROLL_LIABILITY_CHECK = "PayrollLiabilityCheck"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    TRANSFER = "Transfer"
    VENDOR_CREDIT = "VendorCredit"
    YTDADJUSTMENT = "YTDAdjustment"


class TxnTypeValue(Enum):
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    BUILD_ASSEMBLY = "BuildAssembly"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    ESTIMATE = "Estimate"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    LIABILITY_ADJUSTMENT = "LiabilityAdjustment"
    PAYCHECK = "Paycheck"
    PAYROLL_LIABILITY_CHECK = "PayrollLiabilityCheck"
    PURCHASE_ORDER = "PurchaseOrder"
    RECEIVE_PAYMENT = "ReceivePayment"
    SALES_ORDER = "SalesOrder"
    SALES_RECEIPT = "SalesReceipt"
    SALES_TAX_PAYMENT_CHECK = "SalesTaxPaymentCheck"
    TRANSFER = "Transfer"
    VENDOR_CREDIT = "VendorCredit"
    YTDADJUSTMENT = "YTDAdjustment"


class TxnVoidTypeValue(Enum):
    ARREFUND_CREDIT_CARD = "ARRefundCreditCard"
    BILL = "Bill"
    BILL_PAYMENT_CHECK = "BillPaymentCheck"
    BILL_PAYMENT_CREDIT_CARD = "BillPaymentCreditCard"
    CHARGE = "Charge"
    CHECK = "Check"
    CREDIT_CARD_CHARGE = "CreditCardCharge"
    CREDIT_CARD_CREDIT = "CreditCardCredit"
    CREDIT_MEMO = "CreditMemo"
    DEPOSIT = "Deposit"
    INVENTORY_ADJUSTMENT = "InventoryAdjustment"
    INVOICE = "Invoice"
    ITEM_RECEIPT = "ItemReceipt"
    JOURNAL_ENTRY = "JournalEntry"
    SALES_RECEIPT = "SalesReceipt"
    VENDOR_CREDIT = "VendorCredit"


class TypeValue(Enum):
    TASK = "Task"
    CALL = "Call"
    FAX = "Fax"
    EMAIL = "Email"
    MEETING = "Meeting"
    APPOINTMENT = "Appointment"


class UscitizenValue(Enum):
    YES = "Yes"
    NO = "No"


class UsveteranValue(Enum):
    YES = "Yes"
    NO = "No"


@dataclass
class UnbilledQuantity:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,10}(\.[0-9]{1,5})?)?",
        },
    )


@dataclass
class Unit:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class UnitOfMeasure:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class UnitOfMeasureSetQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class UnitOfMeasureTypeValue(Enum):
    AREA = "Area"
    COUNT = "Count"
    LENGTH = "Length"
    OTHER = "Other"
    TIME = "Time"
    VOLUME = "Volume"
    WEIGHT = "Weight"


class UnitUsedForValue(Enum):
    PURCHASE = "Purchase"
    SALES = "Sales"
    SHIPPING = "Shipping"


@dataclass
class UnusedCredits:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class UnusedPayment:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class UseTimeDataToCreatePaychecksValue(Enum):
    NOT_SET = "NotSet"
    USE_TIME_DATA = "UseTimeData"
    DO_NOT_USE_TIME_DATA = "DoNotUseTimeData"


@dataclass
class ValueDifference:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


class VehicleMileageQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class VehicleMileageQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class VehicleQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class VendorAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class VendorAddressBlock:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )


class VendorCreditQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class VendorCreditQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class VendorMsg:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


@dataclass
class VendorOrPayeeName:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class VendorQueryRqTypeIterator(Enum):
    START = "Start"
    CONTINUE = "Continue"
    STOP = "Stop"


class VendorQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class VendorTaxIdent:
    value: str = field(
        default="",
        metadata={
            "required": True,
        },
    )


class VendorTypeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


class VisibleIfNotValue(Enum):
    ACCOUNTANT_COPY_EXISTS = "AccountantCopyExists"
    ASSEMBLY_ITEMS_ENABLED = "AssemblyItemsEnabled"
    CLASSES_ENABLED = "ClassesEnabled"
    ESTIMATES_ENABLED = "EstimatesEnabled"
    HAS_CUSTOMERS = "HasCustomers"
    HAS_VENDORS = "HasVendors"
    INVENTORY_ENABLED = "InventoryEnabled"
    IS_ACCOUNTANT_COPY = "IsAccountantCopy"
    MULTI_USER_MODE = "MultiUserMode"
    PAYROLL_ENABLED = "PayrollEnabled"
    PRICE_LEVELS_ENABLED = "PriceLevelsEnabled"
    SALES_ORDERS_ENABLED = "SalesOrdersEnabled"
    SALES_TAX_ENABLED = "SalesTaxEnabled"
    TIME_TRACKING_ENABLED = "TimeTrackingEnabled"


class VisibleIfValue(Enum):
    ACCOUNTANT_COPY_EXISTS = "AccountantCopyExists"
    ASSEMBLY_ITEMS_ENABLED = "AssemblyItemsEnabled"
    CLASSES_ENABLED = "ClassesEnabled"
    ESTIMATES_ENABLED = "EstimatesEnabled"
    HAS_CUSTOMERS = "HasCustomers"
    HAS_VENDORS = "HasVendors"
    INVENTORY_ENABLED = "InventoryEnabled"
    IS_ACCOUNTANT_COPY = "IsAccountantCopy"
    MULTI_USER_MODE = "MultiUserMode"
    PAYROLL_ENABLED = "PayrollEnabled"
    PRICE_LEVELS_ENABLED = "PriceLevelsEnabled"
    SALES_ORDERS_ENABLED = "SalesOrdersEnabled"
    SALES_TAX_ENABLED = "SalesTaxEnabled"
    TIME_TRACKING_ENABLED = "TimeTrackingEnabled"


class WageTypeValue(Enum):
    BONUS = "Bonus"
    COMMISSION = "Commission"
    HOURLY_OVERTIME = "HourlyOvertime"
    HOURLY_REGULAR = "HourlyRegular"
    HOURLY_SICK = "HourlySick"
    HOURLY_VACATION = "HourlyVacation"
    SALARY_REGULAR = "SalaryRegular"
    SALARY_SICK = "SalarySick"
    SALARY_VACATION = "SalaryVacation"


class WorkersCompCodeQueryRqTypeMetaData(Enum):
    NO_META_DATA = "NoMetaData"
    META_DATA_ONLY = "MetaDataOnly"
    META_DATA_AND_RESPONSE_DATA = "MetaDataAndResponseData"


@dataclass
class YearEndAccumulatedDepreciation:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class YearEndBookValue:
    value: str = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([+\-]?[0-9]{1,13}(\.[0-9]{2})?)?",
        },
    )


@dataclass
class ApaccountRef:
    class Meta:
        name = "APAccountRef"

    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class AraccountRef:
    class Meta:
        name = "ARAccountRef"

    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class Avsstreet:
    class Meta:
        name = "AVSStreet"

    value: Optional[AvsstreetValue] = field(default=None)


@dataclass
class Avszip:
    class Meta:
        name = "AVSZip"

    value: Optional[AvszipValue] = field(default=None)


@dataclass
class AccountFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class AccountMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class AccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class AccountTaxLineInfoRet:
    tax_line_id: Optional[TaxLineId] = field(
        default=None,
        metadata={
            "name": "TaxLineID",
            "type": "Element",
        },
    )
    tax_line_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxLineName",
            "type": "Element",
            "max_length": 256,
        },
    )


@dataclass
class AccountType:
    value: Optional[AccountTypeValue] = field(default=None)


@dataclass
class AccountTypeFilter:
    value: Optional[AccountTypeFilterValue] = field(default=None)


@dataclass
class AccountantCopyExists:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AccrualPeriod:
    value: Optional[AccrualPeriodValue] = field(default=None)


@dataclass
class AccrualStartDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AcquiredAs:
    value: Optional[AcquiredAsValue] = field(default=None)


@dataclass
class ActiveStatus:
    value: ActiveStatusValue = field(default=ActiveStatusValue.ACTIVE_ONLY)


@dataclass
class AddToMenu:
    value: Optional[AddToMenuValue] = field(default=None)


@dataclass
class AdditionalNotesMod:
    note_id: Optional[NoteId] = field(
        default=None,
        metadata={
            "name": "NoteID",
            "type": "Element",
            "required": True,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "required": True,
            "max_length": 4095,
        },
    )


@dataclass
class AdjustBillingRateRelativeTo:
    value: Optional[AdjustBillingRateRelativeToValue] = field(default=None)


@dataclass
class AdjustRelativeTo:
    value: Optional[AdjustRelativeToValue] = field(default=None)


@dataclass
class AdjustedServiceDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AgingReportBasis:
    value: Optional[AgingReportBasisValue] = field(default=None)


@dataclass
class AgingReportType:
    value: Optional[AgingReportTypeValue] = field(default=None)


@dataclass
class AllowOverride:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ApplyAccountRefToExistingTxns:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ApplyCogsaccountRefToExistingTxns:
    class Meta:
        name = "ApplyCOGSAccountRefToExistingTxns"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ApplyCheckToTxnAdd:
    txn_id: Optional[ApplyCheckToTxnAddTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )


@dataclass
class ApplyCheckToTxnMod:
    txn_id: Optional[ApplyCheckToTxnModTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )


@dataclass
class ApplyExpenseAccountRefToExistingTxns:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ApplyIncomeAccountRefToExistingTxns:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AsOfDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AssetAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class AssignClassesTo:
    value: AssignClassesToValue = field(default=AssignClassesToValue.NONE)


@dataclass
class AssignEvenIfUsed:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AssignToObject:
    value: Optional[AssignToObjectValue] = field(default=None)


@dataclass
class BankAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class BarCodeQueryRqType:
    bar_code_value: List[str] = field(
        default_factory=list,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BarCodeQueryRqTypeMetaData = field(
        default=BarCodeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[BarCodeQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillableStatus:
    value: Optional[BillableStatusValue] = field(default=None)


@dataclass
class BilledDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class BillingRateMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class BillingRateRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class BillingRateType:
    value: Optional[BillingRateTypeValue] = field(default=None)


@dataclass
class BirthDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class BudgetCriterion:
    value: Optional[BudgetCriterionValue] = field(default=None)


@dataclass
class BudgetSummaryReportType:
    value: Optional[BudgetSummaryReportTypeValue] = field(default=None)


@dataclass
class CogsaccountRef:
    class Meta:
        name = "COGSAccountRef"

    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ComcallbackInfo:
    class Meta:
        name = "COMCallbackInfo"

    app_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "AppName",
            "type": "Element",
            "required": True,
            "max_length": 128,
        },
    )
    prog_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProgID",
            "type": "Element",
            "max_length": 128,
        },
    )
    clsid: Optional[Clsid] = field(
        default=None,
        metadata={
            "name": "CLSID",
            "type": "Element",
        },
    )


@dataclass
class CalculateChargesFrom:
    value: Optional[CalculateChargesFromValue] = field(default=None)


@dataclass
class CardSecurityCodeMatch:
    value: Optional[CardSecurityCodeMatchValue] = field(default=None)


@dataclass
class CashFlowClassification:
    value: Optional[CashFlowClassificationValue] = field(default=None)


@dataclass
class ClassFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class ClassMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ClassRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ClearEarnings:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ClearExpenseLines:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ClearItemLines:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ClearItemsInGroup:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ClearedStatus:
    value: Optional[ClearedStatusValue] = field(default=None)


@dataclass
class ClientDateTime:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class ClosingDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ColData:
    col_id: Optional[int] = field(
        default=None,
        metadata={
            "name": "colID",
            "type": "Attribute",
            "required": True,
        },
    )
    value: Optional[str] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    data_type: Optional[ColDataDataType] = field(
        default=None,
        metadata={
            "name": "dataType",
            "type": "Attribute",
        },
    )


@dataclass
class ColType:
    value: Optional[ColTypeValue] = field(default=None)


@dataclass
class CompanyFileEventOperation:
    value: Optional[CompanyFileEventOperationValue] = field(default=None)


@dataclass
class CompanyQueryRqType:
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class Contacts:
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 5,
        },
    )


@dataclass
class ContactsMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 5,
        },
    )


@dataclass
class CreateChangeOrder:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class CreditCardAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class CreditCardInfo:
    credit_card_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    expiration_month: Optional[ExpirationMonth] = field(
        default=None,
        metadata={
            "name": "ExpirationMonth",
            "type": "Element",
        },
    )
    expiration_year: Optional[ExpirationYear] = field(
        default=None,
        metadata={
            "name": "ExpirationYear",
            "type": "Element",
        },
    )
    name_on_card: Optional[str] = field(
        default=None,
        metadata={
            "name": "NameOnCard",
            "type": "Element",
            "max_length": 41,
        },
    )
    credit_card_address: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardAddress",
            "type": "Element",
            "max_length": 41,
        },
    )
    credit_card_postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardPostalCode",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class CreditCardTxnType:
    value: Optional[CreditCardTxnTypeValue] = field(default=None)


@dataclass
class CurrencyFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[str] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 64,
        },
    )


@dataclass
class CurrencyRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 64,
        },
    )


@dataclass
class CurrentEffectiveDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class CustomDetailReportType:
    value: Optional[CustomDetailReportTypeValue] = field(default=None)


@dataclass
class CustomSummaryReportType:
    value: Optional[CustomSummaryReportTypeValue] = field(default=None)


@dataclass
class CustomerListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class CustomerMsgMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class CustomerMsgRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 101,
        },
    )


@dataclass
class CustomerRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class CustomerSalesTaxCodeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 3,
        },
    )


@dataclass
class CustomerTypeMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class CustomerTypeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class DataEventRecoveryInfoDelRqType:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataEventRecoveryInfoQueryRqType:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataEventRecoveryTime:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class DataEventSubscriptionQueryRqType:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExt:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    data_ext_value: Optional[DataExtValue] = field(
        default=None,
        metadata={
            "name": "DataExtValue",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class DataExtDefDelRqType:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtListRequire:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DataExtTxnRequire:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DataExtType:
    value: Optional[DataExtTypeValue] = field(default=None)


@dataclass
class Date:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DateMacro:
    value: Optional[DateMacroValue] = field(default=None)


@dataclass
class DecimalPlaces:
    value: DecimalPlacesValue = field(default=DecimalPlacesValue.VALUE_2)


@dataclass
class DecimalSeparator:
    value: DecimalSeparatorValue = field(default=DecimalSeparatorValue.PERIOD)


@dataclass
class DefaultDiscountAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class DefaultItemSalesTaxRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class DefaultNonTaxableSalesTaxCodeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 3,
        },
    )


@dataclass
class DefaultShipMethodRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 15,
        },
    )


@dataclass
class DefaultShipTo:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DefaultTaxableSalesTaxCodeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 3,
        },
    )


@dataclass
class DeliverOwnEvents:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DeliveryMethod:
    value: DeliveryMethodValue = field(default=DeliveryMethodValue.PRINT)


@dataclass
class DeliveryPolicy:
    value: Optional[DeliveryPolicyValue] = field(default=None)


@dataclass
class DepositToAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class DetailAccountType:
    value: Optional[DetailAccountTypeValue] = field(default=None)


@dataclass
class Disabled:
    value: Optional[DisabledValue] = field(default=None)


@dataclass
class DiscountAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class DiscountClassRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class DisplayReport:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DividingDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class DoneStatus:
    value: DoneStatusValue = field(default=DoneStatusValue.NOT_DONE_ONLY)


@dataclass
class DueDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Duration:
    value: Union[str, TimeintervaltypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"[+\-]?PT([0-9]+H)?([0-9]+M)?([0-9]+S)?",
        },
    )


@dataclass
class EffectiveDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class EmployeeAddress:
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[Addr3] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
        },
    )
    addr4: Optional[Addr4] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[Country] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
        },
    )


@dataclass
class EmployeeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class EmployeeType:
    value: EmployeeTypeValue = field(default=EmployeeTypeValue.REGULAR)


@dataclass
class EnabledIf:
    value: Optional[EnabledIfValue] = field(default=None)


@dataclass
class EnabledIfNot:
    value: Optional[EnabledIfNotValue] = field(default=None)


@dataclass
class EnhancedInventoryReceivingEnabled:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class EntityFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class EntityListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class EntityMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class EntityRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class EntityTypeFilter:
    value: Optional[EntityTypeFilterValue] = field(default=None)


@dataclass
class ErrorRecovery:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class Ethnicity:
    value: Optional[EthnicityValue] = field(default=None)


@dataclass
class ExchangeRate:
    value: Optional[Union[Decimal, FloattypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Exempt:
    value: Optional[ExemptValue] = field(default=None)


@dataclass
class ExpectedDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ExpenseAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ExpirationDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FifoeffectiveDate:
    class Meta:
        name = "FIFOEffectiveDate"

    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Fifoenabled:
    class Meta:
        name = "FIFOEnabled"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FinanceChargeAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class FirstDayOfWeek:
    value: Optional[FirstDayOfWeekValue] = field(default=None)


@dataclass
class FirstMonthFiscalYear:
    value: Optional[FirstMonthFiscalYearValue] = field(default=None)


@dataclass
class FirstMonthIncomeTaxYear:
    value: Optional[FirstMonthIncomeTaxYearValue] = field(default=None)


@dataclass
class ForceMapping:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ForceUomchange:
    class Meta:
        name = "ForceUOMChange"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FromDeletedDate:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class FromEffectiveDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FromInventorySiteLocationRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class FromInventorySiteRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class FromModifiedDate:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class FromReportDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FromReportModifiedDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class FromTxnDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Gender:
    value: Optional[GenderValue] = field(default=None)


@dataclass
class GeneralDetailReportType:
    value: Optional[GeneralDetailReportTypeValue] = field(default=None)


@dataclass
class GeneralSummaryReportType:
    value: Optional[GeneralSummaryReportTypeValue] = field(default=None)


@dataclass
class HiredDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class HomeCurrencyRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 64,
        },
    )


@dataclass
class HoursAccrued:
    value: Union[str, TimeintervaltypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"[+\-]?PT([0-9]+H)?([0-9]+M)?([0-9]+S)?",
        },
    )


@dataclass
class HoursAvailable:
    value: Union[str, TimeintervaltypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"[+\-]?PT([0-9]+H)?([0-9]+M)?([0-9]+S)?",
        },
    )


@dataclass
class HoursUsed:
    value: Union[str, TimeintervaltypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"[+\-]?PT([0-9]+H)?([0-9]+M)?([0-9]+S)?",
        },
    )


@dataclass
class IncludeAccounts:
    value: Optional[IncludeAccountsValue] = field(default=None)


@dataclass
class IncludeColumn:
    value: Optional[IncludeColumnValue] = field(default=None)


@dataclass
class IncludeComponentLineItems:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IncludeLineItems:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IncludeLinkedTxns:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IncludeMaxCapacity:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IncludeSubcolumns:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IncomeAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class InventoryDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class InventorySiteLocationRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class InventorySiteRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class IsActive:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAdjustment:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAmountsEnteredInHomeCurrency:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAssessingForOverdueCharges:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAssigningJournalEntryNumbers:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAutoApply:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAutoApplyingPayments:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAutomaticLogin:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAutomaticLoginAllowed:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsAutomaticallyUsingDiscounts:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsBarcodeEnabled:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsBillable:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsBilled:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsDefaultSite:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsDone:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsFiling1099Misc:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsFinanceCharge:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsFullyInvoiced:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsFullyReceived:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsHomeCurrencyAdjustment:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsManuallyClosed:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsMarkedToBePrinted:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsMultiCurrencyOn:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsMultiLocationInventoryAvailable:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsMultiLocationInventoryEnabled:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsNewCompany:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsPaid:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsPending:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsPersonalDataAccessAllowed:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsPrimaryContact:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsPrintItemsInGroup:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsPrintingItemsWithZeroAmounts:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsRsbenabled:
    class Meta:
        name = "IsRSBEnabled"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsRequiringAccounts:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsResettingHoursEachNewYear:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsRoundingSalesPriceUp:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsSalesTaxAgency:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsSampleCompany:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsStatementWithParent:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsSynchronous:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxAccount:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxAgency:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxIncluded:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxOnTax:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxTrackedOnPurchases:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxTrackedOnSales:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTaxable:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsToBeEmailed:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsToBePrinted:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTrackingReimbursedExpensesAsIncome:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTrackingSerialOrLotNumber:
    value: IsTrackingSerialOrLotNumberValue = field(
        default=IsTrackingSerialOrLotNumberValue.NONE
    )


@dataclass
class IsUsedOnPurchaseTransaction:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUserDefinedCurrency:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingAccountNumbers:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingAmountsIncludeTax:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingAuditTrail:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingClassTracking:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingCustomerTaxCode:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingEstimates:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingInventory:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingPriceLevels:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingProgressInvoicing:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingTimeDataToCreatePaychecks:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsUsingVendorTaxCode:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsVendorEligibleFor1099:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ItemFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[str] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ItemGroupRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ItemInventoryAssemblyRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ItemInventoryRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ItemMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ItemPurchaseTaxRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ItemRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )


@dataclass
class ItemSalesTaxRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ItemServiceRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ItemTypeFilter:
    value: Optional[ItemTypeFilterValue] = field(default=None)


@dataclass
class JobEndDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class JobProjectedEndDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class JobReportType:
    value: Optional[JobReportTypeValue] = field(default=None)


@dataclass
class JobStartDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class JobStatus:
    value: JobStatusValue = field(default=JobStatusValue.NONE)


@dataclass
class JobTypeMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class JobTypeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class JournalLineType:
    value: Optional[JournalLineTypeValue] = field(default=None)


@dataclass
class KeyEmployee:
    value: Optional[KeyEmployeeValue] = field(default=None)


@dataclass
class LastCondenseTime:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class LastRestoreTime:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class LeadListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class LeadRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class LiabilityAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class LineType:
    value: Optional[LineTypeValue] = field(default=None)


@dataclass
class LinkToTxn:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class LinkType:
    value: Optional[LinkTypeValue] = field(default=None)


@dataclass
class ListDataExtType:
    value: Optional[ListDataExtTypeValue] = field(default=None)


@dataclass
class ListDelType:
    value: Optional[ListDelTypeValue] = field(default=None)


@dataclass
class ListDisplayAddType:
    value: Optional[ListDisplayAddTypeValue] = field(default=None)


@dataclass
class ListDisplayModType:
    value: Optional[ListDisplayModTypeValue] = field(default=None)


@dataclass
class ListEventOperation:
    value: Optional[ListEventOperationValue] = field(default=None)


@dataclass
class ListEventType:
    value: Optional[ListEventTypeValue] = field(default=None)


@dataclass
class ListMergeType:
    value: Optional[ListMergeTypeValue] = field(default=None)


@dataclass
class ListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class ListType:
    value: Optional[ListTypeValue] = field(default=None)


@dataclass
class Locations:
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Element",
            "required": True,
            "max_length": 32,
        },
    )
    lead_address: Optional[LeadAddress] = field(
        default=None,
        metadata={
            "name": "LeadAddress",
            "type": "Element",
        },
    )


@dataclass
class LocationsMod:
    location_id: Optional[LocationId] = field(
        default=None,
        metadata={
            "name": "LocationID",
            "type": "Element",
            "required": True,
        },
    )
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Element",
            "required": True,
            "max_length": 32,
        },
    )
    lead_address: Optional[LeadAddress] = field(
        default=None,
        metadata={
            "name": "LeadAddress",
            "type": "Element",
        },
    )


@dataclass
class LocationsRet:
    location_id: Optional[LocationId] = field(
        default=None,
        metadata={
            "name": "LocationID",
            "type": "Element",
        },
    )
    main_address: Optional[str] = field(
        default=None,
        metadata={
            "name": "MainAddress",
            "type": "Element",
            "required": True,
            "max_length": 32,
        },
    )
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Element",
            "required": True,
            "max_length": 32,
        },
    )
    lead_address: Optional[LeadAddress] = field(
        default=None,
        metadata={
            "name": "LeadAddress",
            "type": "Element",
        },
    )


@dataclass
class MappingCategory:
    value: Optional[MappingCategoryValue] = field(default=None)


@dataclass
class MarkPendingIfRequired:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class MatchCriterion:
    value: Optional[MatchCriterionValue] = field(default=None)


@dataclass
class MaximumHours:
    value: Union[str, TimeintervaltypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"[+\-]?PT([0-9]+H)?([0-9]+M)?([0-9]+S)?",
        },
    )


@dataclass
class MergeFrom:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )


@dataclass
class MergeTo:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )


@dataclass
class MilitaryStatus:
    value: Optional[MilitaryStatusValue] = field(default=None)


@dataclass
class NameRangeFilter:
    from_name: Optional[FromName] = field(
        default=None,
        metadata={
            "name": "FromName",
            "type": "Element",
        },
    )
    to_name: Optional[ToName] = field(
        default=None,
        metadata={
            "name": "ToName",
            "type": "Element",
        },
    )


@dataclass
class NextEffectiveDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class NonWageType:
    value: Optional[NonWageTypeValue] = field(default=None)


@dataclass
class OnFile:
    value: Optional[OnFileValue] = field(default=None)


@dataclass
class OpenBalanceDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Operator:
    value: Optional[OperatorValue] = field(default=None)


@dataclass
class OptionForPriceRuleConflict:
    value: Optional[OptionForPriceRuleConflictValue] = field(default=None)


@dataclass
class OriginalHireDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class OtherDataExtType:
    value: Optional[OtherDataExtTypeValue] = field(default=None)


@dataclass
class Override:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class OverrideClassRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class OverrideItemAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class OverrideUomsetRef:
    class Meta:
        name = "OverrideUOMSetRef"

    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class PaidStatus:
    value: PaidStatusValue = field(default=PaidStatusValue.ALL)


@dataclass
class ParentRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )


@dataclass
class ParentSiteRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class PartOrFullTime:
    value: Optional[PartOrFullTimeValue] = field(default=None)


@dataclass
class PayPeriod:
    value: Optional[PayPeriodValue] = field(default=None)


@dataclass
class PaySalesTax:
    value: Optional[PaySalesTaxValue] = field(default=None)


@dataclass
class PayeeEntityRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class PaymentMethodMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class PaymentMethodRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class PaymentMethodType:
    value: Optional[PaymentMethodTypeValue] = field(default=None)


@dataclass
class PaymentStatus:
    value: Optional[PaymentStatusValue] = field(default=None)


@dataclass
class PayrollDetailReportType:
    value: Optional[PayrollDetailReportTypeValue] = field(default=None)


@dataclass
class PayrollItemMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class PayrollItemWageRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class PayrollSummaryReportType:
    value: Optional[PayrollSummaryReportTypeValue] = field(default=None)


@dataclass
class PendingStatus:
    value: PendingStatusValue = field(default=PendingStatusValue.ALL)


@dataclass
class PeriodEndDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class PeriodStartDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class PrefVendorRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class PreferredDeliveryMethod:
    value: Optional[PreferredDeliveryMethodValue] = field(default=None)


@dataclass
class PreferredPaymentMethodRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class PrefillAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class PriceLevelMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class PriceLevelRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class PriceLevelType:
    value: Optional[PriceLevelTypeValue] = field(default=None)


@dataclass
class Priority:
    value: PriorityValue = field(default=PriorityValue.LOW)


@dataclass
class PurchaseDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class PurchaseTaxCodeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 3,
        },
    )


@dataclass
class QbfileMode:
    class Meta:
        name = "QBFileMode"

    value: Optional[QbfileModeValue] = field(default=None)


@dataclass
class ReceivePaymentToDepositQueryRqType:
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ReceivePaymentToDepositQueryRqTypeMetaData = field(
        default=ReceivePaymentToDepositQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class RefNumberRangeFilter:
    from_ref_number: Optional[FromRefNumber] = field(
        default=None,
        metadata={
            "name": "FromRefNumber",
            "type": "Element",
        },
    )
    to_ref_number: Optional[ToRefNumber] = field(
        default=None,
        metadata={
            "name": "ToRefNumber",
            "type": "Element",
        },
    )


@dataclass
class RefundAppliedToTxnAdd:
    txn_id: Optional[RefundAppliedToTxnAddTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    refund_amount: Optional[RefundAmount] = field(
        default=None,
        metadata={
            "name": "RefundAmount",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class RefundFromAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class RelatedUnit:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    abbreviation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Abbreviation",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    conversion_ratio: Optional[ConversionRatio] = field(
        default=None,
        metadata={
            "name": "ConversionRatio",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class Relation:
    value: Optional[RelationValue] = field(default=None)


@dataclass
class ReleasedDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ReminderDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ReminderTime:
    value: Union[str, TimeintervaltypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"[+\-]?PT([0-9]+H)?([0-9]+M)?([0-9]+S)?",
        },
    )


@dataclass
class RemoveFromObject:
    value: Optional[RemoveFromObjectValue] = field(default=None)


@dataclass
class RemovePending:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ReportAgingAsOf:
    value: ReportAgingAsOfValue = field(
        default=ReportAgingAsOfValue.REPORT_END_DATE
    )


@dataclass
class ReportBasis:
    value: ReportBasisValue = field(default=ReportBasisValue.NONE)


@dataclass
class ReportCalendar:
    value: Optional[ReportCalendarValue] = field(default=None)


@dataclass
class ReportClassFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class ReportDateMacro:
    value: Optional[ReportDateMacroValue] = field(default=None)


@dataclass
class ReportDetailLevelFilter:
    value: ReportDetailLevelFilterValue = field(
        default=ReportDetailLevelFilterValue.ALL
    )


@dataclass
class ReportModifiedDateRangeMacro:
    value: Optional[ReportModifiedDateRangeMacroValue] = field(default=None)


@dataclass
class ReportOpenBalanceAsOf:
    value: ReportOpenBalanceAsOfValue = field(
        default=ReportOpenBalanceAsOfValue.TODAY
    )


@dataclass
class ReportPostingStatusFilter:
    value: Optional[ReportPostingStatusFilterValue] = field(default=None)


@dataclass
class ReportingPeriod:
    value: ReportingPeriodValue = field(default=ReportingPeriodValue.QUARTERLY)


@dataclass
class ReturnColumns:
    value: Optional[ReturnColumnsValue] = field(default=None)


@dataclass
class ReturnRows:
    value: Optional[ReturnRowsValue] = field(default=None)


@dataclass
class RowData:
    row_type: Optional[RowDataRowType] = field(
        default=None,
        metadata={
            "name": "rowType",
            "type": "Attribute",
        },
    )
    value: Optional[str] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )


@dataclass
class SalesDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class SalesRepEntityRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class SalesRepMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SalesRepRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 5,
        },
    )


@dataclass
class SalesTaxCodeMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SalesTaxCodeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 3,
        },
    )


@dataclass
class SalesTaxCountry:
    value: SalesTaxCountryValue = field(default=SalesTaxCountryValue.CANADA)


@dataclass
class SalesTaxReturnLineRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxReturnQueryRqType:
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesTaxReturnQueryRqTypeMetaData = field(
        default=SalesTaxReturnQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxReturnRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxReturnRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )


@dataclass
class SameShipAddrOk:
    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class SerialNumberAddedOrRemoved:
    value: Optional[SerialNumberAddedOrRemovedValue] = field(default=None)


@dataclass
class ServerDateTime:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class ServiceDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ServiceStatus:
    value: Optional[ServiceStatusValue] = field(default=None)


@dataclass
class ShipDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ShipMethodMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ShipMethodRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 15,
        },
    )


@dataclass
class ShipToEntityRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class SimpleListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class SiteFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[str] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 64,
        },
    )


@dataclass
class SpecialAccountType:
    value: Optional[SpecialAccountTypeValue] = field(default=None)


@dataclass
class SpecialItemType:
    value: Optional[SpecialItemTypeValue] = field(default=None)


@dataclass
class StatementDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class Status:
    value: Optional[StatusValue] = field(default=None)


@dataclass
class SubscriptionType:
    value: Optional[SubscriptionTypeValue] = field(default=None)


@dataclass
class SuggestedDiscountDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class SummarizeBudgetColumnsBy:
    value: Optional[SummarizeBudgetColumnsByValue] = field(default=None)


@dataclass
class SummarizeBudgetRowsBy:
    value: Optional[SummarizeBudgetRowsByValue] = field(default=None)


@dataclass
class SummarizeColumnsBy:
    value: Optional[SummarizeColumnsByValue] = field(default=None)


@dataclass
class SummarizeRowsBy:
    value: Optional[SummarizeRowsByValue] = field(default=None)


@dataclass
class SummaryReportBasis:
    value: Optional[SummaryReportBasisValue] = field(default=None)


@dataclass
class SupervisorListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class SupervisorRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )


@dataclass
class TaxAgencyVendorRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class TaxForm:
    value: Optional[TaxFormValue] = field(default=None)


@dataclass
class TaxLineInfoRet:
    tax_line_id: Optional[TaxLineId] = field(
        default=None,
        metadata={
            "name": "TaxLineID",
            "type": "Element",
            "required": True,
        },
    )
    tax_line_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxLineName",
            "type": "Element",
            "max_length": 256,
        },
    )


@dataclass
class TaxOnPurchasesAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class TaxOnSalesAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class TaxVendorRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class TemplateMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class TemplateQueryRqType:
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TemplateQueryRqTypeMetaData = field(
        default=TemplateQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class TemplateRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class TemplateType:
    value: Optional[TemplateTypeValue] = field(default=None)


@dataclass
class TermsMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class TermsRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ThousandSeparator:
    value: ThousandSeparatorValue = field(default=ThousandSeparatorValue.COMMA)


@dataclass
class ThousandSeparatorGrouping:
    value: ThousandSeparatorGroupingValue = field(
        default=ThousandSeparatorGroupingValue.XX_XXX_XXX
    )


@dataclass
class TimeCreated:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class TimeDeleted:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class TimeLastProcessed:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class TimeModified:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class TimeReportType:
    value: Optional[TimeReportTypeValue] = field(default=None)


@dataclass
class TimeTrackingEntityFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )


@dataclass
class ToDeletedDate:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class ToDoMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ToEffectiveDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ToInventorySiteLocationRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ToInventorySiteRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ToModifiedDate:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class ToReportDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ToReportModifiedDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class ToTxnDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class TrackLostEvents:
    value: TrackLostEventsValue = field(default=TrackLostEventsValue.NONE)


@dataclass
class TransactionClassFilter:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class TransactionDetailLevelFilter:
    value: TransactionDetailLevelFilterValue = field(
        default=TransactionDetailLevelFilterValue.SUMMARY_ONLY
    )


@dataclass
class TransactionMode:
    value: TransactionModeValue = field(
        default=TransactionModeValue.CARD_NOT_PRESENT
    )


@dataclass
class TransactionPaidStatusFilter:
    value: TransactionPaidStatusFilterValue = field(
        default=TransactionPaidStatusFilterValue.EITHER
    )


@dataclass
class TransactionPostingStatusFilter:
    value: TransactionPostingStatusFilterValue = field(
        default=TransactionPostingStatusFilterValue.EITHER
    )


@dataclass
class TransferFromAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class TransferToAccountRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class TripEndDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class TripStartDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class TxnAuthorizationTime:
    value: Union[str, DatetimetypeValue] = field(
        default="",
        metadata={
            "required": True,
            "pattern": r"([0-9]{4}\-[0-9]{1,2}\-[0-9]{1,2}(T[0-9]{1,2}(:[0-9]{1,2}(:[0-9]{1,2}([+\-]{1}[0-9]{1,2}:[0-9]{1,2})?)?)?)?)?",
        },
    )


@dataclass
class TxnDataExtType:
    value: Optional[TxnDataExtTypeValue] = field(default=None)


@dataclass
class TxnDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class TxnDelType:
    value: Optional[TxnDelTypeValue] = field(default=None)


@dataclass
class TxnDisplayAddType:
    value: Optional[TxnDisplayAddTypeValue] = field(default=None)


@dataclass
class TxnDisplayModType:
    value: Optional[TxnDisplayModTypeValue] = field(default=None)


@dataclass
class TxnEventOperation:
    value: Optional[TxnEventOperationValue] = field(default=None)


@dataclass
class TxnEventType:
    value: Optional[TxnEventTypeValue] = field(default=None)


@dataclass
class TxnLineDetail:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class TxnType:
    value: Optional[TxnTypeValue] = field(default=None)


@dataclass
class TxnTypeFilter:
    value: Optional[TxnTypeFilterValue] = field(default=None)


@dataclass
class TxnVoidType:
    value: Optional[TxnVoidTypeValue] = field(default=None)


@dataclass
class TypeType:
    class Meta:
        name = "Type"

    value: TypeValue = field(default=TypeValue.TASK)


@dataclass
class UieventSubscriptionQueryRqType:
    class Meta:
        name = "UIEventSubscriptionQueryRqType"

    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class UiextensionSubscriptionQueryRqType:
    class Meta:
        name = "UIExtensionSubscriptionQueryRqType"

    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class Uscitizen:
    class Meta:
        name = "USCitizen"

    value: Optional[UscitizenValue] = field(default=None)


@dataclass
class Usveteran:
    class Meta:
        name = "USVeteran"

    value: Optional[UsveteranValue] = field(default=None)


@dataclass
class UnitOfMeasureSetRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class UnitOfMeasureType:
    value: Optional[UnitOfMeasureTypeValue] = field(default=None)


@dataclass
class UnitUsedFor:
    value: Optional[UnitUsedForValue] = field(default=None)


@dataclass
class UseTimeDataToCreatePaychecks:
    value: Optional[UseTimeDataToCreatePaychecksValue] = field(default=None)


@dataclass
class ValueAdjustment:
    new_quantity: Optional[NewQuantity] = field(
        default=None,
        metadata={
            "name": "NewQuantity",
            "type": "Element",
        },
    )
    quantity_difference: Optional[QuantityDifference] = field(
        default=None,
        metadata={
            "name": "QuantityDifference",
            "type": "Element",
        },
    )


@dataclass
class VehicleMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class VehicleRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class VendorListObjRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class VendorRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )


@dataclass
class VendorTypeMetaData:
    max_capacity: Optional[MaxCapacity] = field(
        default=None,
        metadata={
            "name": "MaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class VendorTypeRef:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )


@dataclass
class VisibleIf:
    value: Optional[VisibleIfValue] = field(default=None)


@dataclass
class VisibleIfNot:
    value: Optional[VisibleIfNotValue] = field(default=None)


@dataclass
class WageType:
    value: Optional[WageTypeValue] = field(default=None)


@dataclass
class WarrantyExpDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class WorkAuthExpireDate:
    value: Optional[Union[XmlDate, DatetypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTrackingOnBuildAssemblyEnabled:
    class Meta:
        name = "isTrackingOnBuildAssemblyEnabled"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTrackingOnInventoryAdjustmentEnabled:
    class Meta:
        name = "isTrackingOnInventoryAdjustmentEnabled"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTrackingOnPurchaseTransactionsEnabled:
    class Meta:
        name = "isTrackingOnPurchaseTransactionsEnabled"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class IsTrackingOnSalesTransactionsEnabled:
    class Meta:
        name = "isTrackingOnSalesTransactionsEnabled"

    value: Optional[Union[bool, BooltypeValue]] = field(
        default=None,
        metadata={
            "required": True,
        },
    )


@dataclass
class AccountAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    account_type: Optional[AccountType] = field(
        default=None,
        metadata={
            "name": "AccountType",
            "type": "Element",
            "required": True,
        },
    )
    detail_account_type: Optional[DetailAccountType] = field(
        default=None,
        metadata={
            "name": "DetailAccountType",
            "type": "Element",
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 7,
        },
    )
    bank_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "BankNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 200,
        },
    )
    open_balance: Optional[OpenBalance] = field(
        default=None,
        metadata={
            "name": "OpenBalance",
            "type": "Element",
        },
    )
    open_balance_date: Optional[OpenBalanceDate] = field(
        default=None,
        metadata={
            "name": "OpenBalanceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    tax_line_id: Optional[TaxLineId] = field(
        default=None,
        metadata={
            "name": "TaxLineID",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class AccountMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    account_type: Optional[AccountType] = field(
        default=None,
        metadata={
            "name": "AccountType",
            "type": "Element",
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 7,
        },
    )
    bank_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "BankNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 200,
        },
    )
    open_balance: Optional[OpenBalance] = field(
        default=None,
        metadata={
            "name": "OpenBalance",
            "type": "Element",
        },
    )
    open_balance_date: Optional[OpenBalanceDate] = field(
        default=None,
        metadata={
            "name": "OpenBalanceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    tax_line_id: Optional[TaxLineId] = field(
        default=None,
        metadata={
            "name": "TaxLineID",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class AccountTaxLineInfoQueryRsType:
    account_tax_line_info_ret: List[AccountTaxLineInfoRet] = field(
        default_factory=list,
        metadata={
            "name": "AccountTaxLineInfoRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class AccountantCopy:
    accountant_copy_exists: Optional[AccountantCopyExists] = field(
        default=None,
        metadata={
            "name": "AccountantCopyExists",
            "type": "Element",
            "required": True,
        },
    )
    dividing_date: Optional[DividingDate] = field(
        default=None,
        metadata={
            "name": "DividingDate",
            "type": "Element",
        },
    )


@dataclass
class AccountingPreferences:
    is_using_account_numbers: Optional[IsUsingAccountNumbers] = field(
        default=None,
        metadata={
            "name": "IsUsingAccountNumbers",
            "type": "Element",
            "required": True,
        },
    )
    is_requiring_accounts: Optional[IsRequiringAccounts] = field(
        default=None,
        metadata={
            "name": "IsRequiringAccounts",
            "type": "Element",
            "required": True,
        },
    )
    is_using_class_tracking: Optional[IsUsingClassTracking] = field(
        default=None,
        metadata={
            "name": "IsUsingClassTracking",
            "type": "Element",
            "required": True,
        },
    )
    assign_classes_to: Optional[AssignClassesTo] = field(
        default=None,
        metadata={
            "name": "AssignClassesTo",
            "type": "Element",
        },
    )
    is_using_audit_trail: Optional[IsUsingAuditTrail] = field(
        default=None,
        metadata={
            "name": "IsUsingAuditTrail",
            "type": "Element",
            "required": True,
        },
    )
    is_assigning_journal_entry_numbers: Optional[
        IsAssigningJournalEntryNumbers
    ] = field(
        default=None,
        metadata={
            "name": "IsAssigningJournalEntryNumbers",
            "type": "Element",
            "required": True,
        },
    )
    closing_date: Optional[ClosingDate] = field(
        default=None,
        metadata={
            "name": "ClosingDate",
            "type": "Element",
        },
    )


@dataclass
class AdditionalNotesRet:
    note_id: Optional[NoteId] = field(
        default=None,
        metadata={
            "name": "NoteID",
            "type": "Element",
            "required": True,
        },
    )
    date: Optional[Date] = field(
        default=None,
        metadata={
            "name": "Date",
            "type": "Element",
            "required": True,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "required": True,
            "max_length": 4095,
        },
    )


@dataclass
class BarCode:
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    assign_even_if_used: Optional[AssignEvenIfUsed] = field(
        default=None,
        metadata={
            "name": "AssignEvenIfUsed",
            "type": "Element",
        },
    )
    allow_override: Optional[AllowOverride] = field(
        default=None,
        metadata={
            "name": "AllowOverride",
            "type": "Element",
        },
    )


@dataclass
class BarCodeRet:
    list_type: Optional[ListType] = field(
        default=None,
        metadata={
            "name": "ListType",
            "type": "Element",
            "required": True,
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 50,
        },
    )


@dataclass
class BillToPay:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    amount_due: Optional[AmountDue] = field(
        default=None,
        metadata={
            "name": "AmountDue",
            "type": "Element",
            "required": True,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_due_in_home_currency: Optional[AmountDueInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountDueInHomeCurrency",
            "type": "Element",
        },
    )


@dataclass
class BillToPayQueryRqType:
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BillToPayQueryRqTypeMetaData = field(
        default=BillToPayQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class BillingRatePerItem:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    custom_rate: Optional[CustomRate] = field(
        default=None,
        metadata={
            "name": "CustomRate",
            "type": "Element",
        },
    )
    custom_rate_percent: Optional[CustomRatePercent] = field(
        default=None,
        metadata={
            "name": "CustomRatePercent",
            "type": "Element",
        },
    )
    adjust_percentage: Optional[AdjustPercentage] = field(
        default=None,
        metadata={
            "name": "AdjustPercentage",
            "type": "Element",
        },
    )
    adjust_billing_rate_relative_to: Optional[AdjustBillingRateRelativeTo] = (
        field(
            default=None,
            metadata={
                "name": "AdjustBillingRateRelativeTo",
                "type": "Element",
            },
        )
    )


@dataclass
class BillingRatePerItemRet:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    custom_rate: Optional[CustomRate] = field(
        default=None,
        metadata={
            "name": "CustomRate",
            "type": "Element",
        },
    )
    custom_rate_percent: Optional[CustomRatePercent] = field(
        default=None,
        metadata={
            "name": "CustomRatePercent",
            "type": "Element",
        },
    )


@dataclass
class BuildAssemblyAdd:
    item_inventory_assembly_ref: Optional[ItemInventoryAssemblyRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRef",
            "type": "Element",
            "required": True,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity_to_build: Optional[QuantityToBuild] = field(
        default=None,
        metadata={
            "name": "QuantityToBuild",
            "type": "Element",
            "required": True,
        },
    )
    mark_pending_if_required: Optional[MarkPendingIfRequired] = field(
        default=None,
        metadata={
            "name": "MarkPendingIfRequired",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyMod:
    txn_id: Optional[BuildAssemblyModTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity_to_build: Optional[QuantityToBuild] = field(
        default=None,
        metadata={
            "name": "QuantityToBuild",
            "type": "Element",
        },
    )
    mark_pending_if_required: Optional[MarkPendingIfRequired] = field(
        default=None,
        metadata={
            "name": "MarkPendingIfRequired",
            "type": "Element",
        },
    )
    remove_pending: Optional[RemovePending] = field(
        default=None,
        metadata={
            "name": "RemovePending",
            "type": "Element",
        },
    )


@dataclass
class CashBackInfoAdd:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class CashBackInfoMod:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )


@dataclass
class CashBackInfoRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )


@dataclass
class CategoryAccountMapping:
    mapping_category: Optional[MappingCategory] = field(
        default=None,
        metadata={
            "name": "MappingCategory",
            "type": "Element",
            "required": True,
        },
    )
    account_ref: List[AccountRef] = field(
        default_factory=list,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    threshold: Optional[Threshold] = field(
        default=None,
        metadata={
            "name": "Threshold",
            "type": "Element",
        },
    )


@dataclass
class ChargeAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    billed_date: Optional[BilledDate] = field(
        default=None,
        metadata={
            "name": "BilledDate",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    billed_date: Optional[BilledDate] = field(
        default=None,
        metadata={
            "name": "BilledDate",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )


@dataclass
class ClassAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )


@dataclass
class ClassMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )


@dataclass
class ClassRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )


@dataclass
class ClearedStatusMod:
    txn_id: Optional[ClearedStatusModTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_line_id: Optional[ClearedStatusModTxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    cleared_status: Optional[ClearedStatus] = field(
        default=None,
        metadata={
            "name": "ClearedStatus",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ColDesc:
    col_title: List[ColTitle] = field(
        default_factory=list,
        metadata={
            "name": "ColTitle",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    col_type: Optional[ColType] = field(
        default=None,
        metadata={
            "name": "ColType",
            "type": "Element",
            "required": True,
        },
    )
    col_id: Optional[int] = field(
        default=None,
        metadata={
            "name": "colID",
            "type": "Attribute",
            "required": True,
        },
    )
    data_type: Optional[ColDescDataType] = field(
        default=None,
        metadata={
            "name": "dataType",
            "type": "Attribute",
            "required": True,
        },
    )


@dataclass
class CompanyActivityRet:
    last_restore_time: Optional[LastRestoreTime] = field(
        default=None,
        metadata={
            "name": "LastRestoreTime",
            "type": "Element",
        },
    )
    last_condense_time: Optional[LastCondenseTime] = field(
        default=None,
        metadata={
            "name": "LastCondenseTime",
            "type": "Element",
        },
    )


@dataclass
class CompanyFileEvent:
    company_file_event_operation: Optional[CompanyFileEventOperation] = field(
        default=None,
        metadata={
            "name": "CompanyFileEventOperation",
            "type": "Element",
            "required": True,
        },
    )
    is_new_company: Optional[IsNewCompany] = field(
        default=None,
        metadata={
            "name": "IsNewCompany",
            "type": "Element",
        },
    )
    is_automatic_login: Optional[IsAutomaticLogin] = field(
        default=None,
        metadata={
            "name": "IsAutomaticLogin",
            "type": "Element",
        },
    )


@dataclass
class CompanyFileEventSubscription:
    company_file_event_operation: List[CompanyFileEventOperation] = field(
        default_factory=list,
        metadata={
            "name": "CompanyFileEventOperation",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class ComponentItemLineRet:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
        },
    )
    quantity_needed: Optional[QuantityNeeded] = field(
        default=None,
        metadata={
            "name": "QuantityNeeded",
            "type": "Element",
        },
    )


@dataclass
class ContactsRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
            "required": True,
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 5,
        },
    )


@dataclass
class CreditCardTxnInputInfo:
    credit_card_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardNumber",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    expiration_month: Optional[ExpirationMonth] = field(
        default=None,
        metadata={
            "name": "ExpirationMonth",
            "type": "Element",
            "required": True,
        },
    )
    expiration_year: Optional[ExpirationYear] = field(
        default=None,
        metadata={
            "name": "ExpirationYear",
            "type": "Element",
            "required": True,
        },
    )
    name_on_card: Optional[str] = field(
        default=None,
        metadata={
            "name": "NameOnCard",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    credit_card_address: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardAddress",
            "type": "Element",
            "max_length": 41,
        },
    )
    credit_card_postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardPostalCode",
            "type": "Element",
            "max_length": 18,
        },
    )
    commercial_card_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CommercialCardCode",
            "type": "Element",
            "max_length": 24,
        },
    )
    transaction_mode: Optional[TransactionMode] = field(
        default=None,
        metadata={
            "name": "TransactionMode",
            "type": "Element",
        },
    )
    credit_card_txn_type: Optional[CreditCardTxnType] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnType",
            "type": "Element",
        },
    )


@dataclass
class CreditCardTxnInputInfoMod:
    credit_card_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    expiration_month: Optional[ExpirationMonth] = field(
        default=None,
        metadata={
            "name": "ExpirationMonth",
            "type": "Element",
        },
    )
    expiration_year: Optional[ExpirationYear] = field(
        default=None,
        metadata={
            "name": "ExpirationYear",
            "type": "Element",
        },
    )
    name_on_card: Optional[str] = field(
        default=None,
        metadata={
            "name": "NameOnCard",
            "type": "Element",
            "max_length": 41,
        },
    )
    credit_card_address: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardAddress",
            "type": "Element",
            "max_length": 41,
        },
    )
    credit_card_postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardPostalCode",
            "type": "Element",
            "max_length": 18,
        },
    )
    commercial_card_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CommercialCardCode",
            "type": "Element",
            "max_length": 24,
        },
    )
    transaction_mode: Optional[TransactionMode] = field(
        default=None,
        metadata={
            "name": "TransactionMode",
            "type": "Element",
        },
    )
    credit_card_txn_type: Optional[CreditCardTxnType] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnType",
            "type": "Element",
        },
    )


@dataclass
class CreditCardTxnResultInfo:
    result_code: Optional[ResultCode] = field(
        default=None,
        metadata={
            "name": "ResultCode",
            "type": "Element",
            "required": True,
        },
    )
    result_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "ResultMessage",
            "type": "Element",
            "required": True,
            "max_length": 60,
        },
    )
    credit_card_trans_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardTransID",
            "type": "Element",
            "required": True,
            "max_length": 24,
        },
    )
    merchant_account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "MerchantAccountNumber",
            "type": "Element",
            "required": True,
            "max_length": 32,
        },
    )
    authorization_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "AuthorizationCode",
            "type": "Element",
            "max_length": 12,
        },
    )
    avsstreet: Optional[Avsstreet] = field(
        default=None,
        metadata={
            "name": "AVSStreet",
            "type": "Element",
        },
    )
    avszip: Optional[Avszip] = field(
        default=None,
        metadata={
            "name": "AVSZip",
            "type": "Element",
        },
    )
    card_security_code_match: Optional[CardSecurityCodeMatch] = field(
        default=None,
        metadata={
            "name": "CardSecurityCodeMatch",
            "type": "Element",
        },
    )
    recon_batch_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "ReconBatchID",
            "type": "Element",
            "max_length": 84,
        },
    )
    payment_grouping_code: Optional[PaymentGroupingCode] = field(
        default=None,
        metadata={
            "name": "PaymentGroupingCode",
            "type": "Element",
        },
    )
    payment_status: Optional[PaymentStatus] = field(
        default=None,
        metadata={
            "name": "PaymentStatus",
            "type": "Element",
            "required": True,
        },
    )
    txn_authorization_time: Optional[TxnAuthorizationTime] = field(
        default=None,
        metadata={
            "name": "TxnAuthorizationTime",
            "type": "Element",
            "required": True,
        },
    )
    txn_authorization_stamp: Optional[TxnAuthorizationStamp] = field(
        default=None,
        metadata={
            "name": "TxnAuthorizationStamp",
            "type": "Element",
        },
    )
    client_trans_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "ClientTransID",
            "type": "Element",
            "max_length": 16,
        },
    )


@dataclass
class CreditCardTxnResultInfoMod:
    result_code: Optional[ResultCode] = field(
        default=None,
        metadata={
            "name": "ResultCode",
            "type": "Element",
        },
    )
    result_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "ResultMessage",
            "type": "Element",
            "max_length": 60,
        },
    )
    credit_card_trans_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardTransID",
            "type": "Element",
            "max_length": 24,
        },
    )
    merchant_account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "MerchantAccountNumber",
            "type": "Element",
            "max_length": 32,
        },
    )
    authorization_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "AuthorizationCode",
            "type": "Element",
            "max_length": 12,
        },
    )
    avsstreet: Optional[Avsstreet] = field(
        default=None,
        metadata={
            "name": "AVSStreet",
            "type": "Element",
        },
    )
    avszip: Optional[Avszip] = field(
        default=None,
        metadata={
            "name": "AVSZip",
            "type": "Element",
        },
    )
    card_security_code_match: Optional[CardSecurityCodeMatch] = field(
        default=None,
        metadata={
            "name": "CardSecurityCodeMatch",
            "type": "Element",
        },
    )
    recon_batch_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "ReconBatchID",
            "type": "Element",
            "max_length": 84,
        },
    )
    payment_grouping_code: Optional[PaymentGroupingCode] = field(
        default=None,
        metadata={
            "name": "PaymentGroupingCode",
            "type": "Element",
        },
    )
    payment_status: Optional[PaymentStatus] = field(
        default=None,
        metadata={
            "name": "PaymentStatus",
            "type": "Element",
        },
    )
    txn_authorization_time: Optional[TxnAuthorizationTime] = field(
        default=None,
        metadata={
            "name": "TxnAuthorizationTime",
            "type": "Element",
        },
    )
    txn_authorization_stamp: Optional[TxnAuthorizationStamp] = field(
        default=None,
        metadata={
            "name": "TxnAuthorizationStamp",
            "type": "Element",
        },
    )
    client_trans_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "ClientTransID",
            "type": "Element",
            "max_length": 16,
        },
    )


@dataclass
class CreditMemoLineGroupAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class CreditMemoLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )


@dataclass
class CreditToApply:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    credit_remaining: Optional[CreditRemaining] = field(
        default=None,
        metadata={
            "name": "CreditRemaining",
            "type": "Element",
            "required": True,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    credit_remaining_in_home_currency: Optional[
        CreditRemainingInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "CreditRemainingInHomeCurrency",
            "type": "Element",
        },
    )


@dataclass
class CurrencyFormat:
    thousand_separator: Optional[ThousandSeparator] = field(
        default=None,
        metadata={
            "name": "ThousandSeparator",
            "type": "Element",
        },
    )
    thousand_separator_grouping: Optional[ThousandSeparatorGrouping] = field(
        default=None,
        metadata={
            "name": "ThousandSeparatorGrouping",
            "type": "Element",
        },
    )
    decimal_places: Optional[DecimalPlaces] = field(
        default=None,
        metadata={
            "name": "DecimalPlaces",
            "type": "Element",
        },
    )
    decimal_separator: Optional[DecimalSeparator] = field(
        default=None,
        metadata={
            "name": "DecimalSeparator",
            "type": "Element",
        },
    )


@dataclass
class CurrentAppAccessRights:
    is_automatic_login_allowed: Optional[IsAutomaticLoginAllowed] = field(
        default=None,
        metadata={
            "name": "IsAutomaticLoginAllowed",
            "type": "Element",
            "required": True,
        },
    )
    automatic_login_user_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "AutomaticLoginUserName",
            "type": "Element",
            "max_length": 29,
        },
    )
    is_personal_data_access_allowed: Optional[IsPersonalDataAccessAllowed] = (
        field(
            default=None,
            metadata={
                "name": "IsPersonalDataAccessAllowed",
                "type": "Element",
                "required": True,
            },
        )
    )


@dataclass
class CurrentWindow:
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    list_type: Optional[ListType] = field(
        default=None,
        metadata={
            "name": "ListType",
            "type": "Element",
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )


@dataclass
class CustomerMsgAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 101,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )


@dataclass
class CustomerMsgRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 101,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )


@dataclass
class CustomerTypeAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )


@dataclass
class CustomerTypeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )


@dataclass
class DataEventRecoveryInfoRet:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    data_event_recovery_time: Optional[DataEventRecoveryTime] = field(
        default=None,
        metadata={
            "name": "DataEventRecoveryTime",
            "type": "Element",
        },
    )


@dataclass
class DataExtAdd:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    list_data_ext_type: Optional[ListDataExtType] = field(
        default=None,
        metadata={
            "name": "ListDataExtType",
            "type": "Element",
        },
    )
    list_obj_ref: Optional[ListObjRef] = field(
        default=None,
        metadata={
            "name": "ListObjRef",
            "type": "Element",
        },
    )
    txn_data_ext_type: Optional[TxnDataExtType] = field(
        default=None,
        metadata={
            "name": "TxnDataExtType",
            "type": "Element",
        },
    )
    txn_id: Optional[DataExtAddTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    other_data_ext_type: Optional[OtherDataExtType] = field(
        default=None,
        metadata={
            "name": "OtherDataExtType",
            "type": "Element",
        },
    )
    data_ext_value: Optional[DataExtValue] = field(
        default=None,
        metadata={
            "name": "DataExtValue",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class DataExtDefAdd:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    data_ext_type: Optional[DataExtType] = field(
        default=None,
        metadata={
            "name": "DataExtType",
            "type": "Element",
            "required": True,
        },
    )
    assign_to_object: List[AssignToObject] = field(
        default_factory=list,
        metadata={
            "name": "AssignToObject",
            "type": "Element",
        },
    )
    data_ext_list_require: Optional[DataExtListRequire] = field(
        default=None,
        metadata={
            "name": "DataExtListRequire",
            "type": "Element",
        },
    )
    data_ext_txn_require: Optional[DataExtTxnRequire] = field(
        default=None,
        metadata={
            "name": "DataExtTxnRequire",
            "type": "Element",
        },
    )
    data_ext_format_string: Optional[DataExtFormatString] = field(
        default=None,
        metadata={
            "name": "DataExtFormatString",
            "type": "Element",
        },
    )


@dataclass
class DataExtDefDelRet:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
        },
    )


@dataclass
class DataExtDefMod:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    data_ext_new_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtNewName",
            "type": "Element",
            "max_length": 31,
        },
    )
    assign_to_object: List[AssignToObject] = field(
        default_factory=list,
        metadata={
            "name": "AssignToObject",
            "type": "Element",
        },
    )
    remove_from_object: List[RemoveFromObject] = field(
        default_factory=list,
        metadata={
            "name": "RemoveFromObject",
            "type": "Element",
        },
    )
    data_ext_list_require: Optional[DataExtListRequire] = field(
        default=None,
        metadata={
            "name": "DataExtListRequire",
            "type": "Element",
        },
    )
    data_ext_txn_require: Optional[DataExtTxnRequire] = field(
        default=None,
        metadata={
            "name": "DataExtTxnRequire",
            "type": "Element",
        },
    )
    data_ext_format_string: Optional[DataExtFormatString] = field(
        default=None,
        metadata={
            "name": "DataExtFormatString",
            "type": "Element",
        },
    )


@dataclass
class DataExtDefQueryRqType:
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    assign_to_object: List[AssignToObject] = field(
        default_factory=list,
        metadata={
            "name": "AssignToObject",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: DataExtDefQueryRqTypeMetaData = field(
        default=DataExtDefQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefRet:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    data_ext_id: Optional[DataExtId] = field(
        default=None,
        metadata={
            "name": "DataExtID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "max_length": 31,
        },
    )
    data_ext_type: Optional[DataExtType] = field(
        default=None,
        metadata={
            "name": "DataExtType",
            "type": "Element",
        },
    )
    assign_to_object: List[AssignToObject] = field(
        default_factory=list,
        metadata={
            "name": "AssignToObject",
            "type": "Element",
        },
    )
    data_ext_list_require: Optional[DataExtListRequire] = field(
        default=None,
        metadata={
            "name": "DataExtListRequire",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_txn_require: Optional[DataExtTxnRequire] = field(
        default=None,
        metadata={
            "name": "DataExtTxnRequire",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_format_string: Optional[DataExtFormatString] = field(
        default=None,
        metadata={
            "name": "DataExtFormatString",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class DataExtDel:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    list_data_ext_type: Optional[ListDataExtType] = field(
        default=None,
        metadata={
            "name": "ListDataExtType",
            "type": "Element",
        },
    )
    list_obj_ref: Optional[ListObjRef] = field(
        default=None,
        metadata={
            "name": "ListObjRef",
            "type": "Element",
        },
    )
    txn_data_ext_type: Optional[TxnDataExtType] = field(
        default=None,
        metadata={
            "name": "TxnDataExtType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    other_data_ext_type: Optional[OtherDataExtType] = field(
        default=None,
        metadata={
            "name": "OtherDataExtType",
            "type": "Element",
        },
    )


@dataclass
class DataExtDelRet:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    list_data_ext_type: Optional[ListDataExtType] = field(
        default=None,
        metadata={
            "name": "ListDataExtType",
            "type": "Element",
        },
    )
    list_obj_ref: Optional[ListObjRef] = field(
        default=None,
        metadata={
            "name": "ListObjRef",
            "type": "Element",
        },
    )
    txn_data_ext_type: Optional[TxnDataExtType] = field(
        default=None,
        metadata={
            "name": "TxnDataExtType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    other_data_ext_type: Optional[OtherDataExtType] = field(
        default=None,
        metadata={
            "name": "OtherDataExtType",
            "type": "Element",
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
        },
    )


@dataclass
class DataExtMod:
    owner_id: Optional[OwnerId] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    list_data_ext_type: Optional[ListDataExtType] = field(
        default=None,
        metadata={
            "name": "ListDataExtType",
            "type": "Element",
        },
    )
    list_obj_ref: Optional[ListObjRef] = field(
        default=None,
        metadata={
            "name": "ListObjRef",
            "type": "Element",
        },
    )
    txn_data_ext_type: Optional[TxnDataExtType] = field(
        default=None,
        metadata={
            "name": "TxnDataExtType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    other_data_ext_type: Optional[OtherDataExtType] = field(
        default=None,
        metadata={
            "name": "OtherDataExtType",
            "type": "Element",
        },
    )
    data_ext_value: Optional[DataExtValue] = field(
        default=None,
        metadata={
            "name": "DataExtValue",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class DataExtRet:
    owner_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "OwnerID",
            "type": "Element",
            "required": True,
            "pattern": r"0|(\{[0-9a-fA-F]{8}(\-([0-9a-fA-F]{4})){3}\-[0-9a-fA-F]{12}\})",
        },
    )

    data_ext_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "DataExtName",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    data_ext_type: Optional[DataExtType] = field(
        default=None,
        metadata={
            "name": "DataExtType",
            "type": "Element",
            "required": True,
        },
    )
    data_ext_value: Optional[DataExtValue] = field(
        default=None,
        metadata={
            "name": "DataExtValue",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class DataRow:
    row_data: Optional[RowData] = field(
        default=None,
        metadata={
            "name": "RowData",
            "type": "Element",
        },
    )
    col_data: List[ColData] = field(
        default_factory=list,
        metadata={
            "name": "ColData",
            "type": "Element",
        },
    )
    row_number: Optional[int] = field(
        default=None,
        metadata={
            "name": "rowNumber",
            "type": "Attribute",
            "required": True,
        },
    )


@dataclass
class DateDrivenTermsAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    day_of_month_due: Optional[DayOfMonthDue] = field(
        default=None,
        metadata={
            "name": "DayOfMonthDue",
            "type": "Element",
            "required": True,
        },
    )
    due_next_month_days: Optional[DueNextMonthDays] = field(
        default=None,
        metadata={
            "name": "DueNextMonthDays",
            "type": "Element",
        },
    )
    discount_day_of_month: Optional[DiscountDayOfMonth] = field(
        default=None,
        metadata={
            "name": "DiscountDayOfMonth",
            "type": "Element",
        },
    )
    discount_pct: Optional[DiscountPct] = field(
        default=None,
        metadata={
            "name": "DiscountPct",
            "type": "Element",
        },
    )


@dataclass
class DateDrivenTermsRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    day_of_month_due: Optional[DayOfMonthDue] = field(
        default=None,
        metadata={
            "name": "DayOfMonthDue",
            "type": "Element",
        },
    )
    due_next_month_days: Optional[DueNextMonthDays] = field(
        default=None,
        metadata={
            "name": "DueNextMonthDays",
            "type": "Element",
        },
    )
    discount_day_of_month: Optional[DiscountDayOfMonth] = field(
        default=None,
        metadata={
            "name": "DiscountDayOfMonth",
            "type": "Element",
        },
    )
    discount_pct: Optional[DiscountPct] = field(
        default=None,
        metadata={
            "name": "DiscountPct",
            "type": "Element",
        },
    )


@dataclass
class DefaultUnit:
    unit_used_for: Optional[UnitUsedFor] = field(
        default=None,
        metadata={
            "name": "UnitUsedFor",
            "type": "Element",
            "required": True,
        },
    )
    unit: Optional[str] = field(
        default=None,
        metadata={
            "name": "Unit",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )


@dataclass
class DeletedDateRangeFilter:
    from_deleted_date: Optional[FromDeletedDate] = field(
        default=None,
        metadata={
            "name": "FromDeletedDate",
            "type": "Element",
        },
    )
    to_deleted_date: Optional[ToDeletedDate] = field(
        default=None,
        metadata={
            "name": "ToDeletedDate",
            "type": "Element",
        },
    )


@dataclass
class DepositLineAdd:
    payment_txn_id: Optional[DepositLineAddPaymentTxnId] = field(
        default=None,
        metadata={
            "name": "PaymentTxnID",
            "type": "Element",
        },
    )
    payment_txn_line_id: Optional[DepositLineAddPaymentTxnLineId] = field(
        default=None,
        metadata={
            "name": "PaymentTxnLineID",
            "type": "Element",
        },
    )
    override_memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "OverrideMemo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    override_check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "OverrideCheckNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    override_class_ref: Optional[OverrideClassRef] = field(
        default=None,
        metadata={
            "name": "OverrideClassRef",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class DepositLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    payment_txn_id: Optional[DepositLineModPaymentTxnId] = field(
        default=None,
        metadata={
            "name": "PaymentTxnID",
            "type": "Element",
        },
    )
    payment_txn_line_id: Optional[DepositLineModPaymentTxnLineId] = field(
        default=None,
        metadata={
            "name": "PaymentTxnLineID",
            "type": "Element",
        },
    )
    override_memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "OverrideMemo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    override_check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "OverrideCheckNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    override_class_ref: Optional[OverrideClassRef] = field(
        default=None,
        metadata={
            "name": "OverrideClassRef",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )


@dataclass
class DepositLineRet:
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    payment_txn_line_id: Optional[PaymentTxnLineId] = field(
        default=None,
        metadata={
            "name": "PaymentTxnLineID",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )


@dataclass
class DiscountLineAdd:
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class DiscountLineRet:
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class DisplayCondition:
    visible_if: List[VisibleIf] = field(
        default_factory=list,
        metadata={
            "name": "VisibleIf",
            "type": "Element",
        },
    )
    visible_if_not: List[VisibleIfNot] = field(
        default_factory=list,
        metadata={
            "name": "VisibleIfNot",
            "type": "Element",
        },
    )
    enabled_if: List[EnabledIf] = field(
        default_factory=list,
        metadata={
            "name": "EnabledIf",
            "type": "Element",
        },
    )
    enabled_if_not: List[EnabledIfNot] = field(
        default_factory=list,
        metadata={
            "name": "EnabledIfNot",
            "type": "Element",
        },
    )


@dataclass
class Earnings:
    payroll_item_wage_ref: Optional[PayrollItemWageRef] = field(
        default=None,
        metadata={
            "name": "PayrollItemWageRef",
            "type": "Element",
            "required": True,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )


@dataclass
class EstimateLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    markup_rate: Optional[MarkupRate] = field(
        default=None,
        metadata={
            "name": "MarkupRate",
            "type": "Element",
        },
    )
    markup_rate_percent: Optional[MarkupRatePercent] = field(
        default=None,
        metadata={
            "name": "MarkupRatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class EstimateLineGroupAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class EstimateLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    markup_rate: Optional[MarkupRate] = field(
        default=None,
        metadata={
            "name": "MarkupRate",
            "type": "Element",
        },
    )
    markup_rate_percent: Optional[MarkupRatePercent] = field(
        default=None,
        metadata={
            "name": "MarkupRatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )


@dataclass
class ExpenseLineAdd:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ExpenseLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )


@dataclass
class FinanceChargePreferences:
    annual_interest_rate: Optional[AnnualInterestRate] = field(
        default=None,
        metadata={
            "name": "AnnualInterestRate",
            "type": "Element",
        },
    )
    min_finance_charge: Optional[MinFinanceCharge] = field(
        default=None,
        metadata={
            "name": "MinFinanceCharge",
            "type": "Element",
        },
    )
    grace_period: Optional[GracePeriod] = field(
        default=None,
        metadata={
            "name": "GracePeriod",
            "type": "Element",
            "required": True,
        },
    )
    finance_charge_account_ref: Optional[FinanceChargeAccountRef] = field(
        default=None,
        metadata={
            "name": "FinanceChargeAccountRef",
            "type": "Element",
        },
    )
    is_assessing_for_overdue_charges: Optional[
        IsAssessingForOverdueCharges
    ] = field(
        default=None,
        metadata={
            "name": "IsAssessingForOverdueCharges",
            "type": "Element",
            "required": True,
        },
    )
    calculate_charges_from: Optional[CalculateChargesFrom] = field(
        default=None,
        metadata={
            "name": "CalculateChargesFrom",
            "type": "Element",
            "required": True,
        },
    )
    is_marked_to_be_printed: Optional[IsMarkedToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsMarkedToBePrinted",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class FixedAssetSalesInfo:
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    sales_date: Optional[SalesDate] = field(
        default=None,
        metadata={
            "name": "SalesDate",
            "type": "Element",
            "required": True,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    sales_expense: Optional[SalesExpense] = field(
        default=None,
        metadata={
            "name": "SalesExpense",
            "type": "Element",
        },
    )


@dataclass
class FixedAssetSalesInfoMod:
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 50,
        },
    )
    sales_date: Optional[SalesDate] = field(
        default=None,
        metadata={
            "name": "SalesDate",
            "type": "Element",
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    sales_expense: Optional[SalesExpense] = field(
        default=None,
        metadata={
            "name": "SalesExpense",
            "type": "Element",
        },
    )


@dataclass
class Form1099CategoryAccountMappingQueryRqType:
    mapping_category: List[MappingCategory] = field(
        default_factory=list,
        metadata={
            "name": "MappingCategory",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class IncludeListMetaData:
    include_max_capacity: Optional[IncludeMaxCapacity] = field(
        default=None,
        metadata={
            "name": "IncludeMaxCapacity",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class InventoryAdjustmentLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    count_adjustment: Optional[CountAdjustment] = field(
        default=None,
        metadata={
            "name": "CountAdjustment",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    quantity_difference: Optional[QuantityDifference] = field(
        default=None,
        metadata={
            "name": "QuantityDifference",
            "type": "Element",
        },
    )
    value_difference: Optional[ValueDifference] = field(
        default=None,
        metadata={
            "name": "ValueDifference",
            "type": "Element",
        },
    )


@dataclass
class InventoryAdjustmentLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    serial_number_added_or_removed: Optional[SerialNumberAddedOrRemoved] = (
        field(
            default=None,
            metadata={
                "name": "SerialNumberAddedOrRemoved",
                "type": "Element",
            },
        )
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    quantity_difference: Optional[QuantityDifference] = field(
        default=None,
        metadata={
            "name": "QuantityDifference",
            "type": "Element",
            "required": True,
        },
    )
    value_difference: Optional[ValueDifference] = field(
        default=None,
        metadata={
            "name": "ValueDifference",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class InventorySiteAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_site_ref: Optional[ParentSiteRef] = field(
        default=None,
        metadata={
            "name": "ParentSiteRef",
            "type": "Element",
        },
    )
    site_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SiteDesc",
            "type": "Element",
            "max_length": 100,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    site_address: Optional[SiteAddress] = field(
        default=None,
        metadata={
            "name": "SiteAddress",
            "type": "Element",
        },
    )


@dataclass
class InventorySiteMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_site_ref: Optional[ParentSiteRef] = field(
        default=None,
        metadata={
            "name": "ParentSiteRef",
            "type": "Element",
        },
    )
    site_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SiteDesc",
            "type": "Element",
            "max_length": 100,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    site_address: Optional[SiteAddress] = field(
        default=None,
        metadata={
            "name": "SiteAddress",
            "type": "Element",
        },
    )


@dataclass
class InventorySiteRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_site_ref: Optional[ParentSiteRef] = field(
        default=None,
        metadata={
            "name": "ParentSiteRef",
            "type": "Element",
        },
    )
    is_default_site: Optional[IsDefaultSite] = field(
        default=None,
        metadata={
            "name": "IsDefaultSite",
            "type": "Element",
        },
    )
    site_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SiteDesc",
            "type": "Element",
            "max_length": 100,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    site_address: Optional[SiteAddress] = field(
        default=None,
        metadata={
            "name": "SiteAddress",
            "type": "Element",
        },
    )
    site_address_block: Optional[SiteAddressBlock] = field(
        default=None,
        metadata={
            "name": "SiteAddressBlock",
            "type": "Element",
        },
    )


@dataclass
class InvoiceLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    link_to_txn: Optional[LinkToTxn] = field(
        default=None,
        metadata={
            "name": "LinkToTxn",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceLineGroupAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class InvoiceLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )


@dataclass
class ItemAssembliesCanBuildQueryRqType:
    item_inventory_assembly_ref: Optional[ItemInventoryAssemblyRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemAssembliesCanBuildRet:
    item_inventory_assembly_ref: Optional[ItemInventoryAssemblyRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    quantity_can_build: Optional[QuantityCanBuild] = field(
        default=None,
        metadata={
            "name": "QuantityCanBuild",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ItemGroupLine:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )


@dataclass
class ItemGroupLineAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryAssemblyLine:
    item_inventory_ref: Optional[ItemInventoryRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryRef",
            "type": "Element",
            "required": True,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )


@dataclass
class ItemLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    cost: Optional[Cost] = field(
        default=None,
        metadata={
            "name": "Cost",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    link_to_txn: Optional[LinkToTxn] = field(
        default=None,
        metadata={
            "name": "LinkToTxn",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class ItemLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    cost: Optional[Cost] = field(
        default=None,
        metadata={
            "name": "Cost",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )


@dataclass
class ItemSiteFilter:
    item_filter: Optional[ItemFilter] = field(
        default=None,
        metadata={
            "name": "ItemFilter",
            "type": "Element",
        },
    )
    site_filter: Optional[SiteFilter] = field(
        default=None,
        metadata={
            "name": "SiteFilter",
            "type": "Element",
        },
    )


@dataclass
class ItemSitesRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    item_inventory_assembly_ref: Optional[ItemInventoryAssemblyRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRef",
            "type": "Element",
        },
    )
    item_inventory_ref: Optional[ItemInventoryRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    reorder_level: Optional[ReorderLevel] = field(
        default=None,
        metadata={
            "name": "ReorderLevel",
            "type": "Element",
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
        },
    )
    quantity_on_purchase_orders: Optional[QuantityOnPurchaseOrders] = field(
        default=None,
        metadata={
            "name": "QuantityOnPurchaseOrders",
            "type": "Element",
        },
    )
    quantity_on_sales_orders: Optional[QuantityOnSalesOrders] = field(
        default=None,
        metadata={
            "name": "QuantityOnSalesOrders",
            "type": "Element",
        },
    )
    quantity_to_be_built_by_pending_build_txns: Optional[
        QuantityToBeBuiltByPendingBuildTxns
    ] = field(
        default=None,
        metadata={
            "name": "QuantityToBeBuiltByPendingBuildTxns",
            "type": "Element",
        },
    )
    quantity_required_by_pending_build_txns: Optional[
        QuantityRequiredByPendingBuildTxns
    ] = field(
        default=None,
        metadata={
            "name": "QuantityRequiredByPendingBuildTxns",
            "type": "Element",
        },
    )
    quantity_on_pending_transfers: Optional[QuantityOnPendingTransfers] = (
        field(
            default=None,
            metadata={
                "name": "QuantityOnPendingTransfers",
                "type": "Element",
            },
        )
    )
    assembly_build_point: Optional[AssemblyBuildPoint] = field(
        default=None,
        metadata={
            "name": "AssemblyBuildPoint",
            "type": "Element",
        },
    )


@dataclass
class ItemsAndInventoryPreferences:
    enhanced_inventory_receiving_enabled: Optional[
        EnhancedInventoryReceivingEnabled
    ] = field(
        default=None,
        metadata={
            "name": "EnhancedInventoryReceivingEnabled",
            "type": "Element",
        },
    )
    is_tracking_serial_or_lot_number: Optional[IsTrackingSerialOrLotNumber] = (
        field(
            default=None,
            metadata={
                "name": "IsTrackingSerialOrLotNumber",
                "type": "Element",
            },
        )
    )
    is_tracking_on_sales_transactions_enabled: Optional[
        IsTrackingOnSalesTransactionsEnabled
    ] = field(
        default=None,
        metadata={
            "name": "isTrackingOnSalesTransactionsEnabled",
            "type": "Element",
        },
    )
    is_tracking_on_purchase_transactions_enabled: Optional[
        IsTrackingOnPurchaseTransactionsEnabled
    ] = field(
        default=None,
        metadata={
            "name": "isTrackingOnPurchaseTransactionsEnabled",
            "type": "Element",
        },
    )
    is_tracking_on_inventory_adjustment_enabled: Optional[
        IsTrackingOnInventoryAdjustmentEnabled
    ] = field(
        default=None,
        metadata={
            "name": "isTrackingOnInventoryAdjustmentEnabled",
            "type": "Element",
        },
    )
    is_tracking_on_build_assembly_enabled: Optional[
        IsTrackingOnBuildAssemblyEnabled
    ] = field(
        default=None,
        metadata={
            "name": "isTrackingOnBuildAssemblyEnabled",
            "type": "Element",
        },
    )
    fifoenabled: Optional[Fifoenabled] = field(
        default=None,
        metadata={
            "name": "FIFOEnabled",
            "type": "Element",
        },
    )
    fifoeffective_date: Optional[FifoeffectiveDate] = field(
        default=None,
        metadata={
            "name": "FIFOEffectiveDate",
            "type": "Element",
        },
    )
    is_rsbenabled: Optional[IsRsbenabled] = field(
        default=None,
        metadata={
            "name": "IsRSBEnabled",
            "type": "Element",
        },
    )
    is_barcode_enabled: Optional[IsBarcodeEnabled] = field(
        default=None,
        metadata={
            "name": "IsBarcodeEnabled",
            "type": "Element",
        },
    )


@dataclass
class JobTypeAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )


@dataclass
class JobTypeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )


@dataclass
class JobsAndEstimatesPreferences:
    is_using_estimates: Optional[IsUsingEstimates] = field(
        default=None,
        metadata={
            "name": "IsUsingEstimates",
            "type": "Element",
            "required": True,
        },
    )
    is_using_progress_invoicing: Optional[IsUsingProgressInvoicing] = field(
        default=None,
        metadata={
            "name": "IsUsingProgressInvoicing",
            "type": "Element",
            "required": True,
        },
    )
    is_printing_items_with_zero_amounts: Optional[
        IsPrintingItemsWithZeroAmounts
    ] = field(
        default=None,
        metadata={
            "name": "IsPrintingItemsWithZeroAmounts",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class JournalCreditLine:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class JournalDebitLine:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class JournalLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    journal_line_type: Optional[JournalLineType] = field(
        default=None,
        metadata={
            "name": "JournalLineType",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )


@dataclass
class LeadContacts:
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 5,
        },
    )
    is_primary_contact: Optional[IsPrimaryContact] = field(
        default=None,
        metadata={
            "name": "IsPrimaryContact",
            "type": "Element",
        },
    )


@dataclass
class LeadContactsMod:
    lead_contact_id: Optional[LeadContactId] = field(
        default=None,
        metadata={
            "name": "LeadContactID",
            "type": "Element",
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 5,
        },
    )
    is_primary_contact: Optional[IsPrimaryContact] = field(
        default=None,
        metadata={
            "name": "IsPrimaryContact",
            "type": "Element",
        },
    )


@dataclass
class LeadContactsRet:
    lead_contact_id: Optional[LeadContactId] = field(
        default=None,
        metadata={
            "name": "LeadContactID",
            "type": "Element",
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "required": True,
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 5,
        },
    )
    is_primary_contact: Optional[IsPrimaryContact] = field(
        default=None,
        metadata={
            "name": "IsPrimaryContact",
            "type": "Element",
        },
    )


@dataclass
class LinkedTxn:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    link_type: Optional[LinkType] = field(
        default=None,
        metadata={
            "name": "LinkType",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )
    txn_line_detail: List[TxnLineDetail] = field(
        default_factory=list,
        metadata={
            "name": "TxnLineDetail",
            "type": "Element",
        },
    )


@dataclass
class ListDelRqType:
    list_del_type: Optional[ListDelType] = field(
        default=None,
        metadata={
            "name": "ListDelType",
            "type": "Element",
            "required": True,
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ListDelRsType:
    list_del_type: Optional[ListDelType] = field(
        default=None,
        metadata={
            "name": "ListDelType",
            "type": "Element",
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ListDeletedRet:
    list_del_type: Optional[ListDelType] = field(
        default=None,
        metadata={
            "name": "ListDelType",
            "type": "Element",
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )


@dataclass
class ListDisplayAddRqType:
    list_display_add_type: Optional[ListDisplayAddType] = field(
        default=None,
        metadata={
            "name": "ListDisplayAddType",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ListDisplayModRqType:
    list_display_mod_type: Optional[ListDisplayModType] = field(
        default=None,
        metadata={
            "name": "ListDisplayModType",
            "type": "Element",
            "required": True,
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ListEvent:
    list_event_type: Optional[ListEventType] = field(
        default=None,
        metadata={
            "name": "ListEventType",
            "type": "Element",
            "required": True,
        },
    )
    list_event_operation: Optional[ListEventOperation] = field(
        default=None,
        metadata={
            "name": "ListEventOperation",
            "type": "Element",
            "required": True,
        },
    )
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    after_merge_list_id: Optional[AfterMergeListId] = field(
        default=None,
        metadata={
            "name": "AfterMergeListID",
            "type": "Element",
        },
    )


@dataclass
class ListEventSubscription:
    list_event_type: List[ListEventType] = field(
        default_factory=list,
        metadata={
            "name": "ListEventType",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    list_event_operation: List[ListEventOperation] = field(
        default_factory=list,
        metadata={
            "name": "ListEventOperation",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class ListMergeRqType:
    list_merge_type: Optional[ListMergeType] = field(
        default=None,
        metadata={
            "name": "ListMergeType",
            "type": "Element",
            "required": True,
        },
    )
    merge_from: Optional[MergeFrom] = field(
        default=None,
        metadata={
            "name": "MergeFrom",
            "type": "Element",
            "required": True,
        },
    )
    merge_to: Optional[MergeTo] = field(
        default=None,
        metadata={
            "name": "MergeTo",
            "type": "Element",
            "required": True,
        },
    )
    same_ship_addr_ok: Optional[SameShipAddrOk] = field(
        default=None,
        metadata={
            "name": "SameShipAddrOk",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ListMetaData:
    account_meta_data: Optional[AccountMetaData] = field(
        default=None,
        metadata={
            "name": "AccountMetaData",
            "type": "Element",
            "required": True,
        },
    )
    billing_rate_meta_data: Optional[BillingRateMetaData] = field(
        default=None,
        metadata={
            "name": "BillingRateMetaData",
            "type": "Element",
            "required": True,
        },
    )
    class_meta_data: Optional[ClassMetaData] = field(
        default=None,
        metadata={
            "name": "ClassMetaData",
            "type": "Element",
            "required": True,
        },
    )
    customer_msg_meta_data: Optional[CustomerMsgMetaData] = field(
        default=None,
        metadata={
            "name": "CustomerMsgMetaData",
            "type": "Element",
            "required": True,
        },
    )
    customer_type_meta_data: Optional[CustomerTypeMetaData] = field(
        default=None,
        metadata={
            "name": "CustomerTypeMetaData",
            "type": "Element",
            "required": True,
        },
    )
    entity_meta_data: Optional[EntityMetaData] = field(
        default=None,
        metadata={
            "name": "EntityMetaData",
            "type": "Element",
            "required": True,
        },
    )
    item_meta_data: Optional[ItemMetaData] = field(
        default=None,
        metadata={
            "name": "ItemMetaData",
            "type": "Element",
            "required": True,
        },
    )
    job_type_meta_data: Optional[JobTypeMetaData] = field(
        default=None,
        metadata={
            "name": "JobTypeMetaData",
            "type": "Element",
            "required": True,
        },
    )
    payment_method_meta_data: Optional[PaymentMethodMetaData] = field(
        default=None,
        metadata={
            "name": "PaymentMethodMetaData",
            "type": "Element",
            "required": True,
        },
    )
    payroll_item_meta_data: Optional[PayrollItemMetaData] = field(
        default=None,
        metadata={
            "name": "PayrollItemMetaData",
            "type": "Element",
            "required": True,
        },
    )
    price_level_meta_data: Optional[PriceLevelMetaData] = field(
        default=None,
        metadata={
            "name": "PriceLevelMetaData",
            "type": "Element",
            "required": True,
        },
    )
    sales_rep_meta_data: Optional[SalesRepMetaData] = field(
        default=None,
        metadata={
            "name": "SalesRepMetaData",
            "type": "Element",
            "required": True,
        },
    )
    sales_tax_code_meta_data: Optional[SalesTaxCodeMetaData] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeMetaData",
            "type": "Element",
            "required": True,
        },
    )
    ship_method_meta_data: Optional[ShipMethodMetaData] = field(
        default=None,
        metadata={
            "name": "ShipMethodMetaData",
            "type": "Element",
            "required": True,
        },
    )
    template_meta_data: Optional[TemplateMetaData] = field(
        default=None,
        metadata={
            "name": "TemplateMetaData",
            "type": "Element",
            "required": True,
        },
    )
    terms_meta_data: Optional[TermsMetaData] = field(
        default=None,
        metadata={
            "name": "TermsMetaData",
            "type": "Element",
            "required": True,
        },
    )
    to_do_meta_data: Optional[ToDoMetaData] = field(
        default=None,
        metadata={
            "name": "ToDoMetaData",
            "type": "Element",
            "required": True,
        },
    )
    vehicle_meta_data: Optional[VehicleMetaData] = field(
        default=None,
        metadata={
            "name": "VehicleMetaData",
            "type": "Element",
            "required": True,
        },
    )
    vendor_type_meta_data: Optional[VendorTypeMetaData] = field(
        default=None,
        metadata={
            "name": "VendorTypeMetaData",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class LotNumberAdjustment:
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    count_adjustment: Optional[CountAdjustment] = field(
        default=None,
        metadata={
            "name": "CountAdjustment",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )


@dataclass
class MappingAccount:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    force_mapping: Optional[ForceMapping] = field(
        default=None,
        metadata={
            "name": "ForceMapping",
            "type": "Element",
        },
    )


@dataclass
class MergedFrom:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
            "required": True,
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class MergedTo:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
            "required": True,
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ModifiedDateRangeFilter:
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )


@dataclass
class MultiCurrencyPreferences:
    is_multi_currency_on: Optional[IsMultiCurrencyOn] = field(
        default=None,
        metadata={
            "name": "IsMultiCurrencyOn",
            "type": "Element",
        },
    )
    home_currency_ref: Optional[HomeCurrencyRef] = field(
        default=None,
        metadata={
            "name": "HomeCurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class MultiLocationInventoryPreferences:
    is_multi_location_inventory_available: Optional[
        IsMultiLocationInventoryAvailable
    ] = field(
        default=None,
        metadata={
            "name": "IsMultiLocationInventoryAvailable",
            "type": "Element",
        },
    )
    is_multi_location_inventory_enabled: Optional[
        IsMultiLocationInventoryEnabled
    ] = field(
        default=None,
        metadata={
            "name": "IsMultiLocationInventoryEnabled",
            "type": "Element",
        },
    )


@dataclass
class NameFilter:
    match_criterion: Optional[MatchCriterion] = field(
        default=None,
        metadata={
            "name": "MatchCriterion",
            "type": "Element",
            "required": True,
        },
    )
    name: Optional[Name] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class OtherNameAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    other_name_address: Optional[OtherNameAddress] = field(
        default=None,
        metadata={
            "name": "OtherNameAddress",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class OtherNameMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    other_name_address: Optional[OtherNameAddress] = field(
        default=None,
        metadata={
            "name": "OtherNameAddress",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )


@dataclass
class PaymentMethodAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    payment_method_type: Optional[PaymentMethodType] = field(
        default=None,
        metadata={
            "name": "PaymentMethodType",
            "type": "Element",
        },
    )


@dataclass
class PaymentMethodRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    payment_method_type: Optional[PaymentMethodType] = field(
        default=None,
        metadata={
            "name": "PaymentMethodType",
            "type": "Element",
        },
    )


@dataclass
class PayrollItemNonWageRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    non_wage_type: Optional[NonWageType] = field(
        default=None,
        metadata={
            "name": "NonWageType",
            "type": "Element",
        },
    )
    expense_account_ref: Optional[ExpenseAccountRef] = field(
        default=None,
        metadata={
            "name": "ExpenseAccountRef",
            "type": "Element",
        },
    )
    liability_account_ref: Optional[LiabilityAccountRef] = field(
        default=None,
        metadata={
            "name": "LiabilityAccountRef",
            "type": "Element",
        },
    )


@dataclass
class PayrollItemWageAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    wage_type: Optional[WageType] = field(
        default=None,
        metadata={
            "name": "WageType",
            "type": "Element",
            "required": True,
        },
    )
    expense_account_ref: Optional[ExpenseAccountRef] = field(
        default=None,
        metadata={
            "name": "ExpenseAccountRef",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class PayrollItemWageRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    wage_type: Optional[WageType] = field(
        default=None,
        metadata={
            "name": "WageType",
            "type": "Element",
        },
    )
    expense_account_ref: Optional[ExpenseAccountRef] = field(
        default=None,
        metadata={
            "name": "ExpenseAccountRef",
            "type": "Element",
        },
    )


@dataclass
class PayrollLastPeriodRet:
    period_start_date: Optional[PeriodStartDate] = field(
        default=None,
        metadata={
            "name": "PeriodStartDate",
            "type": "Element",
            "required": True,
        },
    )
    period_end_date: Optional[PeriodEndDate] = field(
        default=None,
        metadata={
            "name": "PeriodEndDate",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class PriceLevelPerItem:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    custom_price: Optional[CustomPrice] = field(
        default=None,
        metadata={
            "name": "CustomPrice",
            "type": "Element",
        },
    )
    custom_price_percent: Optional[CustomPricePercent] = field(
        default=None,
        metadata={
            "name": "CustomPricePercent",
            "type": "Element",
        },
    )
    adjust_percentage: Optional[AdjustPercentage] = field(
        default=None,
        metadata={
            "name": "AdjustPercentage",
            "type": "Element",
        },
    )
    adjust_relative_to: Optional[AdjustRelativeTo] = field(
        default=None,
        metadata={
            "name": "AdjustRelativeTo",
            "type": "Element",
        },
    )


@dataclass
class PriceLevelPerItemRet:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    custom_price: Optional[CustomPrice] = field(
        default=None,
        metadata={
            "name": "CustomPrice",
            "type": "Element",
        },
    )
    custom_price_percent: Optional[CustomPricePercent] = field(
        default=None,
        metadata={
            "name": "CustomPricePercent",
            "type": "Element",
        },
    )


@dataclass
class PriceLevels:
    is_using_price_levels: Optional[IsUsingPriceLevels] = field(
        default=None,
        metadata={
            "name": "IsUsingPriceLevels",
            "type": "Element",
            "required": True,
        },
    )
    is_rounding_sales_price_up: Optional[IsRoundingSalesPriceUp] = field(
        default=None,
        metadata={
            "name": "IsRoundingSalesPriceUp",
            "type": "Element",
        },
    )


@dataclass
class PrimaryContact:
    contact_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "ContactName",
            "type": "Element",
            "required": True,
            "max_length": 40,
        },
    )
    contact_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "ContactValue",
            "type": "Element",
            "required": True,
            "max_length": 255,
        },
    )
    relation: Optional[Relation] = field(
        default=None,
        metadata={
            "name": "Relation",
            "type": "Element",
        },
    )


@dataclass
class PurchaseOrderLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderLineGroupAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class PurchaseOrderLineMod:
    txn_line_id: Optional[PurchaseOrderLineModTxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )


@dataclass
class PurchasesAndVendorsPreferences:
    is_using_inventory: Optional[IsUsingInventory] = field(
        default=None,
        metadata={
            "name": "IsUsingInventory",
            "type": "Element",
            "required": True,
        },
    )
    days_bills_are_due: Optional[DaysBillsAreDue] = field(
        default=None,
        metadata={
            "name": "DaysBillsAreDue",
            "type": "Element",
            "required": True,
        },
    )
    is_automatically_using_discounts: Optional[
        IsAutomaticallyUsingDiscounts
    ] = field(
        default=None,
        metadata={
            "name": "IsAutomaticallyUsingDiscounts",
            "type": "Element",
            "required": True,
        },
    )
    default_discount_account_ref: Optional[DefaultDiscountAccountRef] = field(
        default=None,
        metadata={
            "name": "DefaultDiscountAccountRef",
            "type": "Element",
        },
    )


@dataclass
class QuantityAdjustment:
    new_quantity: Optional[NewQuantity] = field(
        default=None,
        metadata={
            "name": "NewQuantity",
            "type": "Element",
        },
    )
    quantity_difference: Optional[QuantityDifference] = field(
        default=None,
        metadata={
            "name": "QuantityDifference",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )


@dataclass
class RateEntry:
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
            "required": True,
        },
    )
    effective_date: Optional[EffectiveDate] = field(
        default=None,
        metadata={
            "name": "EffectiveDate",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class RateHistory:
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
            "required": True,
        },
    )
    effective_date: Optional[EffectiveDate] = field(
        default=None,
        metadata={
            "name": "EffectiveDate",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class ReceivePaymentToDepositRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )


@dataclass
class RefNumberFilter:
    match_criterion: Optional[MatchCriterion] = field(
        default=None,
        metadata={
            "name": "MatchCriterion",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class RefundAppliedToTxnRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    credit_remaining: Optional[CreditRemaining] = field(
        default=None,
        metadata={
            "name": "CreditRemaining",
            "type": "Element",
            "required": True,
        },
    )
    refund_amount: Optional[RefundAmount] = field(
        default=None,
        metadata={
            "name": "RefundAmount",
            "type": "Element",
            "required": True,
        },
    )
    credit_remaining_in_home_currency: Optional[
        CreditRemainingInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "CreditRemainingInHomeCurrency",
            "type": "Element",
        },
    )
    refund_amount_in_home_currency: Optional[RefundAmountInHomeCurrency] = (
        field(
            default=None,
            metadata={
                "name": "RefundAmountInHomeCurrency",
                "type": "Element",
            },
        )
    )


@dataclass
class ReportAccountFilter:
    account_type_filter: Optional[AccountTypeFilter] = field(
        default=None,
        metadata={
            "name": "AccountTypeFilter",
            "type": "Element",
        },
    )
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class ReportEntityFilter:
    entity_type_filter: Optional[EntityTypeFilter] = field(
        default=None,
        metadata={
            "name": "EntityTypeFilter",
            "type": "Element",
        },
    )
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class ReportItemFilter:
    item_type_filter: Optional[ItemTypeFilter] = field(
        default=None,
        metadata={
            "name": "ItemTypeFilter",
            "type": "Element",
        },
    )
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class ReportModifiedDateRangeFilter:
    from_report_modified_date: Optional[FromReportModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromReportModifiedDate",
            "type": "Element",
        },
    )
    to_report_modified_date: Optional[ToReportModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToReportModifiedDate",
            "type": "Element",
        },
    )


@dataclass
class ReportPeriod:
    from_report_date: Optional[FromReportDate] = field(
        default=None,
        metadata={
            "name": "FromReportDate",
            "type": "Element",
        },
    )
    to_report_date: Optional[ToReportDate] = field(
        default=None,
        metadata={
            "name": "ToReportDate",
            "type": "Element",
        },
    )


@dataclass
class ReportTxnTypeFilter:
    txn_type_filter: List[TxnTypeFilter] = field(
        default_factory=list,
        metadata={
            "name": "TxnTypeFilter",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class ReportsPreferences:
    aging_report_basis: Optional[AgingReportBasis] = field(
        default=None,
        metadata={
            "name": "AgingReportBasis",
            "type": "Element",
            "required": True,
        },
    )
    summary_report_basis: Optional[SummaryReportBasis] = field(
        default=None,
        metadata={
            "name": "SummaryReportBasis",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SalesAndPurchase:
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    expense_account_ref: Optional[ExpenseAccountRef] = field(
        default=None,
        metadata={
            "name": "ExpenseAccountRef",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )


@dataclass
class SalesAndPurchaseMod:
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    apply_income_account_ref_to_existing_txns: Optional[
        ApplyIncomeAccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyIncomeAccountRefToExistingTxns",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    expense_account_ref: Optional[ExpenseAccountRef] = field(
        default=None,
        metadata={
            "name": "ExpenseAccountRef",
            "type": "Element",
        },
    )
    apply_expense_account_ref_to_existing_txns: Optional[
        ApplyExpenseAccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyExpenseAccountRefToExistingTxns",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )


@dataclass
class SalesOrPurchase:
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    price: Optional[Price] = field(
        default=None,
        metadata={
            "name": "Price",
            "type": "Element",
        },
    )
    price_percent: Optional[PricePercent] = field(
        default=None,
        metadata={
            "name": "PricePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class SalesOrPurchaseMod:
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    price: Optional[Price] = field(
        default=None,
        metadata={
            "name": "Price",
            "type": "Element",
        },
    )
    price_percent: Optional[PricePercent] = field(
        default=None,
        metadata={
            "name": "PricePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    apply_account_ref_to_existing_txns: Optional[
        ApplyAccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyAccountRefToExistingTxns",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderLineGroupAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )


@dataclass
class SalesReceiptLineGroupAdd:
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[Desc] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class SalesReceiptLineMod:
    txn_line_id: Optional[SalesReceiptLineModTxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )


@dataclass
class SalesRepAdd:
    initial: Optional[str] = field(
        default=None,
        metadata={
            "name": "Initial",
            "type": "Element",
            "required": True,
            "max_length": 5,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    sales_rep_entity_ref: Optional[SalesRepEntityRef] = field(
        default=None,
        metadata={
            "name": "SalesRepEntityRef",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SalesRepMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    initial: Optional[str] = field(
        default=None,
        metadata={
            "name": "Initial",
            "type": "Element",
            "max_length": 5,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    sales_rep_entity_ref: Optional[SalesRepEntityRef] = field(
        default=None,
        metadata={
            "name": "SalesRepEntityRef",
            "type": "Element",
        },
    )


@dataclass
class SalesRepRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    initial: Optional[str] = field(
        default=None,
        metadata={
            "name": "Initial",
            "type": "Element",
            "max_length": 5,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    sales_rep_entity_ref: Optional[SalesRepEntityRef] = field(
        default=None,
        metadata={
            "name": "SalesRepEntityRef",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxCodeAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 3,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 31,
        },
    )
    item_purchase_tax_ref: Optional[ItemPurchaseTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemPurchaseTaxRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxCodeMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 3,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 31,
        },
    )
    item_purchase_tax_ref: Optional[ItemPurchaseTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemPurchaseTaxRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxCodeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 3,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 31,
        },
    )
    item_purchase_tax_ref: Optional[ItemPurchaseTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemPurchaseTaxRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxLineAdd:
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxLineRet:
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxPayableLineRet:
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SalesTaxPayableQueryRqType:
    as_of_date: Optional[AsOfDate] = field(
        default=None,
        metadata={
            "name": "AsOfDate",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesTaxPayableQueryRqTypeMetaData = field(
        default=SalesTaxPayableQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckLineAdd:
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SalesTaxPaymentCheckLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxPaymentCheckMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    bank_account_ref: Optional[BankAccountRef] = field(
        default=None,
        metadata={
            "name": "BankAccountRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxPreferences:
    default_item_sales_tax_ref: Optional[DefaultItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "DefaultItemSalesTaxRef",
            "type": "Element",
            "required": True,
        },
    )
    pay_sales_tax: Optional[PaySalesTax] = field(
        default=None,
        metadata={
            "name": "PaySalesTax",
            "type": "Element",
            "required": True,
        },
    )
    default_taxable_sales_tax_code_ref: Optional[
        DefaultTaxableSalesTaxCodeRef
    ] = field(
        default=None,
        metadata={
            "name": "DefaultTaxableSalesTaxCodeRef",
            "type": "Element",
            "required": True,
        },
    )
    default_non_taxable_sales_tax_code_ref: Optional[
        DefaultNonTaxableSalesTaxCodeRef
    ] = field(
        default=None,
        metadata={
            "name": "DefaultNonTaxableSalesTaxCodeRef",
            "type": "Element",
            "required": True,
        },
    )
    is_using_vendor_tax_code: Optional[IsUsingVendorTaxCode] = field(
        default=None,
        metadata={
            "name": "IsUsingVendorTaxCode",
            "type": "Element",
        },
    )
    is_using_customer_tax_code: Optional[IsUsingCustomerTaxCode] = field(
        default=None,
        metadata={
            "name": "IsUsingCustomerTaxCode",
            "type": "Element",
        },
    )
    is_using_amounts_include_tax: Optional[IsUsingAmountsIncludeTax] = field(
        default=None,
        metadata={
            "name": "IsUsingAmountsIncludeTax",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxReturnLineQueryRqType:
    tax_agency_vendor_ref: List[TaxAgencyVendorRef] = field(
        default_factory=list,
        metadata={
            "name": "TaxAgencyVendorRef",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesTaxReturnLineQueryRqTypeMetaData = field(
        default=SalesTaxReturnLineQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxReturnLineRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    full_name: Optional[FullName] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    line_type: Optional[LineType] = field(
        default=None,
        metadata={
            "name": "LineType",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxReturnQueryRsType:
    sales_tax_return_ret: List[SalesTaxReturnRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxReturnRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class SecondaryContact:
    contact_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "ContactName",
            "type": "Element",
            "required": True,
            "max_length": 40,
        },
    )
    contact_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "ContactValue",
            "type": "Element",
            "required": True,
            "max_length": 255,
        },
    )
    relation: Optional[Relation] = field(
        default=None,
        metadata={
            "name": "Relation",
            "type": "Element",
        },
    )


@dataclass
class SerialNumberAdjustment:
    add_serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AddSerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    remove_serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RemoveSerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )


@dataclass
class Service:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    domain: Optional[str] = field(
        default=None,
        metadata={
            "name": "Domain",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    service_status: Optional[ServiceStatus] = field(
        default=None,
        metadata={
            "name": "ServiceStatus",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class SetCredit:
    credit_txn_id: Optional[SetCreditCreditTxnId] = field(
        default=None,
        metadata={
            "name": "CreditTxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    applied_amount: Optional[AppliedAmount] = field(
        default=None,
        metadata={
            "name": "AppliedAmount",
            "type": "Element",
            "required": True,
        },
    )
    override: Optional[Override] = field(
        default=None,
        metadata={
            "name": "Override",
            "type": "Element",
        },
    )


@dataclass
class ShipMethodAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 15,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )


@dataclass
class ShipMethodRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 15,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )


@dataclass
class ShipToAddress:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    addr1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr1",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr2",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr3: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr3",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr4: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr4",
            "type": "Element",
            "max_length": 41,
        },
    )
    addr5: Optional[str] = field(
        default=None,
        metadata={
            "name": "Addr5",
            "type": "Element",
            "max_length": 41,
        },
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "max_length": 31,
        },
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "max_length": 21,
        },
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "max_length": 13,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 31,
        },
    )
    note: Optional[str] = field(
        default=None,
        metadata={
            "name": "Note",
            "type": "Element",
            "max_length": 41,
        },
    )
    default_ship_to: Optional[DefaultShipTo] = field(
        default=None,
        metadata={
            "name": "DefaultShipTo",
            "type": "Element",
        },
    )


@dataclass
class ShippingLineAdd:
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class ShippingLineRet:
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )


@dataclass
class SickHours:
    hours_available: Optional[HoursAvailable] = field(
        default=None,
        metadata={
            "name": "HoursAvailable",
            "type": "Element",
        },
    )
    accrual_period: Optional[AccrualPeriod] = field(
        default=None,
        metadata={
            "name": "AccrualPeriod",
            "type": "Element",
        },
    )
    hours_accrued: Optional[HoursAccrued] = field(
        default=None,
        metadata={
            "name": "HoursAccrued",
            "type": "Element",
        },
    )
    maximum_hours: Optional[MaximumHours] = field(
        default=None,
        metadata={
            "name": "MaximumHours",
            "type": "Element",
        },
    )
    is_resetting_hours_each_new_year: Optional[IsResettingHoursEachNewYear] = (
        field(
            default=None,
            metadata={
                "name": "IsResettingHoursEachNewYear",
                "type": "Element",
            },
        )
    )
    hours_used: Optional[HoursUsed] = field(
        default=None,
        metadata={
            "name": "HoursUsed",
            "type": "Element",
        },
    )
    accrual_start_date: Optional[AccrualStartDate] = field(
        default=None,
        metadata={
            "name": "AccrualStartDate",
            "type": "Element",
        },
    )


@dataclass
class SignonAppCertRqType:
    client_date_time: Optional[ClientDateTime] = field(
        default=None,
        metadata={
            "name": "ClientDateTime",
            "type": "Element",
            "required": True,
        },
    )
    application_login: Optional[ApplicationLogin] = field(
        default=None,
        metadata={
            "name": "ApplicationLogin",
            "type": "Element",
            "required": True,
        },
    )
    connection_ticket: Optional[ConnectionTicket] = field(
        default=None,
        metadata={
            "name": "ConnectionTicket",
            "type": "Element",
            "required": True,
        },
    )
    installation_id: Optional[InstallationId] = field(
        default=None,
        metadata={
            "name": "InstallationID",
            "type": "Element",
        },
    )
    language: Optional[Language] = field(
        default=None,
        metadata={
            "name": "Language",
            "type": "Element",
            "required": True,
        },
    )
    app_id: Optional[AppId] = field(
        default=None,
        metadata={
            "name": "AppID",
            "type": "Element",
            "required": True,
        },
    )
    app_ver: Optional[AppVer] = field(
        default=None,
        metadata={
            "name": "AppVer",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SignonAppCertRsType:
    server_date_time: Optional[ServerDateTime] = field(
        default=None,
        metadata={
            "name": "ServerDateTime",
            "type": "Element",
            "required": True,
        },
    )
    session_ticket: Optional[SessionTicket] = field(
        default=None,
        metadata={
            "name": "SessionTicket",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SignonDesktopRqType:
    client_date_time: Optional[ClientDateTime] = field(
        default=None,
        metadata={
            "name": "ClientDateTime",
            "type": "Element",
            "required": True,
        },
    )
    application_login: Optional[ApplicationLogin] = field(
        default=None,
        metadata={
            "name": "ApplicationLogin",
            "type": "Element",
            "required": True,
        },
    )
    connection_ticket: Optional[ConnectionTicket] = field(
        default=None,
        metadata={
            "name": "ConnectionTicket",
            "type": "Element",
            "required": True,
        },
    )
    installation_id: Optional[InstallationId] = field(
        default=None,
        metadata={
            "name": "InstallationID",
            "type": "Element",
        },
    )
    language: Optional[Language] = field(
        default=None,
        metadata={
            "name": "Language",
            "type": "Element",
            "required": True,
        },
    )
    app_id: Optional[AppId] = field(
        default=None,
        metadata={
            "name": "AppID",
            "type": "Element",
            "required": True,
        },
    )
    app_ver: Optional[AppVer] = field(
        default=None,
        metadata={
            "name": "AppVer",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SignonDesktopRsType:
    server_date_time: Optional[ServerDateTime] = field(
        default=None,
        metadata={
            "name": "ServerDateTime",
            "type": "Element",
            "required": True,
        },
    )
    session_ticket: Optional[SessionTicket] = field(
        default=None,
        metadata={
            "name": "SessionTicket",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SignonTicketRqType:
    client_date_time: Optional[ClientDateTime] = field(
        default=None,
        metadata={
            "name": "ClientDateTime",
            "type": "Element",
            "required": True,
        },
    )
    session_ticket: Optional[SessionTicket] = field(
        default=None,
        metadata={
            "name": "SessionTicket",
            "type": "Element",
            "required": True,
        },
    )
    auth_id: Optional[AuthId] = field(
        default=None,
        metadata={
            "name": "AuthID",
            "type": "Element",
        },
    )
    installation_id: Optional[InstallationId] = field(
        default=None,
        metadata={
            "name": "InstallationID",
            "type": "Element",
        },
    )
    language: Optional[Language] = field(
        default=None,
        metadata={
            "name": "Language",
            "type": "Element",
            "required": True,
        },
    )
    app_id: Optional[AppId] = field(
        default=None,
        metadata={
            "name": "AppID",
            "type": "Element",
            "required": True,
        },
    )
    app_ver: Optional[AppVer] = field(
        default=None,
        metadata={
            "name": "AppVer",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SignonTicketRsType:
    server_date_time: Optional[ServerDateTime] = field(
        default=None,
        metadata={
            "name": "ServerDateTime",
            "type": "Element",
            "required": True,
        },
    )
    session_ticket: Optional[SessionTicket] = field(
        default=None,
        metadata={
            "name": "SessionTicket",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SpecialAccountAdd:
    special_account_type: Optional[SpecialAccountType] = field(
        default=None,
        metadata={
            "name": "SpecialAccountType",
            "type": "Element",
            "required": True,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class StandardTermsAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    std_due_days: Optional[StdDueDays] = field(
        default=None,
        metadata={
            "name": "StdDueDays",
            "type": "Element",
        },
    )
    std_discount_days: Optional[StdDiscountDays] = field(
        default=None,
        metadata={
            "name": "StdDiscountDays",
            "type": "Element",
        },
    )
    discount_pct: Optional[DiscountPct] = field(
        default=None,
        metadata={
            "name": "DiscountPct",
            "type": "Element",
        },
    )


@dataclass
class StandardTermsRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    std_due_days: Optional[StdDueDays] = field(
        default=None,
        metadata={
            "name": "StdDueDays",
            "type": "Element",
        },
    )
    std_discount_days: Optional[StdDiscountDays] = field(
        default=None,
        metadata={
            "name": "StdDiscountDays",
            "type": "Element",
        },
    )
    discount_pct: Optional[DiscountPct] = field(
        default=None,
        metadata={
            "name": "DiscountPct",
            "type": "Element",
        },
    )


@dataclass
class SubscriptionDelRqType:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    subscription_type: Optional[SubscriptionType] = field(
        default=None,
        metadata={
            "name": "SubscriptionType",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SubtotalRow:
    row_data: Optional[RowData] = field(
        default=None,
        metadata={
            "name": "RowData",
            "type": "Element",
        },
    )
    col_data: List[ColData] = field(
        default_factory=list,
        metadata={
            "name": "ColData",
            "type": "Element",
        },
    )
    row_number: Optional[int] = field(
        default=None,
        metadata={
            "name": "rowNumber",
            "type": "Attribute",
            "required": True,
        },
    )


@dataclass
class TemplateRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    template_type: Optional[TemplateType] = field(
        default=None,
        metadata={
            "name": "TemplateType",
            "type": "Element",
        },
    )


@dataclass
class TimeTrackingAdd:
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
            "required": True,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    item_service_ref: Optional[ItemServiceRef] = field(
        default=None,
        metadata={
            "name": "ItemServiceRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    duration: Optional[Duration] = field(
        default=None,
        metadata={
            "name": "Duration",
            "type": "Element",
            "required": True,
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    payroll_item_wage_ref: Optional[PayrollItemWageRef] = field(
        default=None,
        metadata={
            "name": "PayrollItemWageRef",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
            "required": True,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    item_service_ref: Optional[ItemServiceRef] = field(
        default=None,
        metadata={
            "name": "ItemServiceRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    duration: Optional[Duration] = field(
        default=None,
        metadata={
            "name": "Duration",
            "type": "Element",
            "required": True,
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    payroll_item_wage_ref: Optional[PayrollItemWageRef] = field(
        default=None,
        metadata={
            "name": "PayrollItemWageRef",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )


@dataclass
class TimeTrackingPreferences:
    first_day_of_week: Optional[FirstDayOfWeek] = field(
        default=None,
        metadata={
            "name": "FirstDayOfWeek",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class TimeTrackingRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    item_service_ref: Optional[ItemServiceRef] = field(
        default=None,
        metadata={
            "name": "ItemServiceRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    duration: Optional[Duration] = field(
        default=None,
        metadata={
            "name": "Duration",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    payroll_item_wage_ref: Optional[PayrollItemWageRef] = field(
        default=None,
        metadata={
            "name": "PayrollItemWageRef",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ToDoAdd:
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "required": True,
            "max_length": 4095,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    type_value: Optional[TypeType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Element",
        },
    )
    priority: Optional[Priority] = field(
        default=None,
        metadata={
            "name": "Priority",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    employee_ref: Optional[EmployeeRef] = field(
        default=None,
        metadata={
            "name": "EmployeeRef",
            "type": "Element",
        },
    )
    lead_ref: Optional[LeadRef] = field(
        default=None,
        metadata={
            "name": "LeadRef",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    is_done: Optional[IsDone] = field(
        default=None,
        metadata={
            "name": "IsDone",
            "type": "Element",
        },
    )
    reminder_date: Optional[ReminderDate] = field(
        default=None,
        metadata={
            "name": "ReminderDate",
            "type": "Element",
        },
    )
    reminder_time: Optional[ReminderTime] = field(
        default=None,
        metadata={
            "name": "ReminderTime",
            "type": "Element",
        },
    )


@dataclass
class ToDoMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    type_value: Optional[TypeType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Element",
        },
    )
    priority: Optional[Priority] = field(
        default=None,
        metadata={
            "name": "Priority",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    employee_ref: Optional[EmployeeRef] = field(
        default=None,
        metadata={
            "name": "EmployeeRef",
            "type": "Element",
        },
    )
    lead_ref: Optional[LeadRef] = field(
        default=None,
        metadata={
            "name": "LeadRef",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    is_done: Optional[IsDone] = field(
        default=None,
        metadata={
            "name": "IsDone",
            "type": "Element",
        },
    )
    reminder_date: Optional[ReminderDate] = field(
        default=None,
        metadata={
            "name": "ReminderDate",
            "type": "Element",
        },
    )
    reminder_time: Optional[ReminderTime] = field(
        default=None,
        metadata={
            "name": "ReminderTime",
            "type": "Element",
        },
    )


@dataclass
class ToDoRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    type_value: Optional[TypeType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Element",
        },
    )
    priority: Optional[Priority] = field(
        default=None,
        metadata={
            "name": "Priority",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    employee_ref: Optional[EmployeeRef] = field(
        default=None,
        metadata={
            "name": "EmployeeRef",
            "type": "Element",
        },
    )
    lead_ref: Optional[LeadRef] = field(
        default=None,
        metadata={
            "name": "LeadRef",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    is_done: Optional[IsDone] = field(
        default=None,
        metadata={
            "name": "IsDone",
            "type": "Element",
        },
    )
    reminder_date: Optional[ReminderDate] = field(
        default=None,
        metadata={
            "name": "ReminderDate",
            "type": "Element",
        },
    )
    reminder_time: Optional[ReminderTime] = field(
        default=None,
        metadata={
            "name": "ReminderTime",
            "type": "Element",
        },
    )


@dataclass
class TotalBalanceFilter:
    operator: Optional[Operator] = field(
        default=None,
        metadata={
            "name": "Operator",
            "type": "Element",
            "required": True,
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class TotalRow:
    row_data: Optional[RowData] = field(
        default=None,
        metadata={
            "name": "RowData",
            "type": "Element",
        },
    )
    col_data: List[ColData] = field(
        default_factory=list,
        metadata={
            "name": "ColData",
            "type": "Element",
        },
    )
    row_number: Optional[int] = field(
        default=None,
        metadata={
            "name": "rowNumber",
            "type": "Attribute",
            "required": True,
        },
    )


@dataclass
class TransactionAccountFilter:
    account_type_filter: Optional[AccountTypeFilter] = field(
        default=None,
        metadata={
            "name": "AccountTypeFilter",
            "type": "Element",
        },
    )
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class TransactionDateRangeFilter:
    from_txn_date: Optional[FromTxnDate] = field(
        default=None,
        metadata={
            "name": "FromTxnDate",
            "type": "Element",
        },
    )
    to_txn_date: Optional[ToTxnDate] = field(
        default=None,
        metadata={
            "name": "ToTxnDate",
            "type": "Element",
        },
    )
    date_macro: Optional[DateMacro] = field(
        default=None,
        metadata={
            "name": "DateMacro",
            "type": "Element",
        },
    )


@dataclass
class TransactionEntityFilter:
    entity_type_filter: Optional[EntityTypeFilter] = field(
        default=None,
        metadata={
            "name": "EntityTypeFilter",
            "type": "Element",
        },
    )
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class TransactionItemFilter:
    item_type_filter: Optional[ItemTypeFilter] = field(
        default=None,
        metadata={
            "name": "ItemTypeFilter",
            "type": "Element",
        },
    )
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    list_idwith_children: Optional[ListIdwithChildren] = field(
        default=None,
        metadata={
            "name": "ListIDWithChildren",
            "type": "Element",
        },
    )
    full_name_with_children: Optional[FullNameWithChildren] = field(
        default=None,
        metadata={
            "name": "FullNameWithChildren",
            "type": "Element",
        },
    )


@dataclass
class TransactionModifiedDateRangeFilter:
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    date_macro: Optional[DateMacro] = field(
        default=None,
        metadata={
            "name": "DateMacro",
            "type": "Element",
        },
    )


@dataclass
class TransactionRet:
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )


@dataclass
class TransactionTypeFilter:
    txn_type_filter: List[TxnTypeFilter] = field(
        default_factory=list,
        metadata={
            "name": "TxnTypeFilter",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class TransferAdd:
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    transfer_from_account_ref: Optional[TransferFromAccountRef] = field(
        default=None,
        metadata={
            "name": "TransferFromAccountRef",
            "type": "Element",
        },
    )
    transfer_to_account_ref: Optional[TransferToAccountRef] = field(
        default=None,
        metadata={
            "name": "TransferToAccountRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    from_inventory_site_location_ref: Optional[
        FromInventorySiteLocationRef
    ] = field(
        default=None,
        metadata={
            "name": "FromInventorySiteLocationRef",
            "type": "Element",
        },
    )
    to_inventory_site_location_ref: Optional[ToInventorySiteLocationRef] = (
        field(
            default=None,
            metadata={
                "name": "ToInventorySiteLocationRef",
                "type": "Element",
            },
        )
    )
    quantity_to_transfer: Optional[QuantityToTransfer] = field(
        default=None,
        metadata={
            "name": "QuantityToTransfer",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    from_inventory_site_location_ref: Optional[
        FromInventorySiteLocationRef
    ] = field(
        default=None,
        metadata={
            "name": "FromInventorySiteLocationRef",
            "type": "Element",
        },
    )
    to_inventory_site_location_ref: Optional[ToInventorySiteLocationRef] = (
        field(
            default=None,
            metadata={
                "name": "ToInventorySiteLocationRef",
                "type": "Element",
            },
        )
    )
    quantity_to_transfer: Optional[QuantityToTransfer] = field(
        default=None,
        metadata={
            "name": "QuantityToTransfer",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )


@dataclass
class TransferInventoryLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    from_inventory_site_location_ref: Optional[
        FromInventorySiteLocationRef
    ] = field(
        default=None,
        metadata={
            "name": "FromInventorySiteLocationRef",
            "type": "Element",
        },
    )
    to_inventory_site_location_ref: Optional[ToInventorySiteLocationRef] = (
        field(
            default=None,
            metadata={
                "name": "ToInventorySiteLocationRef",
                "type": "Element",
            },
        )
    )
    quantity_transferred: Optional[QuantityTransferred] = field(
        default=None,
        metadata={
            "name": "QuantityTransferred",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )


@dataclass
class TransferMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    transfer_from_account_ref: Optional[TransferFromAccountRef] = field(
        default=None,
        metadata={
            "name": "TransferFromAccountRef",
            "type": "Element",
        },
    )
    transfer_to_account_ref: Optional[TransferToAccountRef] = field(
        default=None,
        metadata={
            "name": "TransferToAccountRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )


@dataclass
class TransferRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    transfer_from_account_ref: Optional[TransferFromAccountRef] = field(
        default=None,
        metadata={
            "name": "TransferFromAccountRef",
            "type": "Element",
        },
    )
    from_account_balance: Optional[FromAccountBalance] = field(
        default=None,
        metadata={
            "name": "FromAccountBalance",
            "type": "Element",
        },
    )
    transfer_to_account_ref: Optional[TransferToAccountRef] = field(
        default=None,
        metadata={
            "name": "TransferToAccountRef",
            "type": "Element",
        },
    )
    to_account_balance: Optional[ToAccountBalance] = field(
        default=None,
        metadata={
            "name": "ToAccountBalance",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )


@dataclass
class TxnDateRangeFilter:
    from_txn_date: Optional[FromTxnDate] = field(
        default=None,
        metadata={
            "name": "FromTxnDate",
            "type": "Element",
        },
    )
    to_txn_date: Optional[ToTxnDate] = field(
        default=None,
        metadata={
            "name": "ToTxnDate",
            "type": "Element",
        },
    )
    date_macro: Optional[DateMacro] = field(
        default=None,
        metadata={
            "name": "DateMacro",
            "type": "Element",
        },
    )


@dataclass
class TxnDelRqType:
    txn_del_type: Optional[TxnDelType] = field(
        default=None,
        metadata={
            "name": "TxnDelType",
            "type": "Element",
            "required": True,
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TxnDelRsType:
    txn_del_type: Optional[TxnDelType] = field(
        default=None,
        metadata={
            "name": "TxnDelType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TxnDeletedRet:
    txn_del_type: Optional[TxnDelType] = field(
        default=None,
        metadata={
            "name": "TxnDelType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_deleted: Optional[TimeDeleted] = field(
        default=None,
        metadata={
            "name": "TimeDeleted",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )


@dataclass
class TxnDisplayAddRqType:
    txn_display_add_type: Optional[TxnDisplayAddType] = field(
        default=None,
        metadata={
            "name": "TxnDisplayAddType",
            "type": "Element",
            "required": True,
        },
    )
    entity_ref: Optional[EntityRef] = field(
        default=None,
        metadata={
            "name": "EntityRef",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TxnDisplayModRqType:
    txn_display_mod_type: Optional[TxnDisplayModType] = field(
        default=None,
        metadata={
            "name": "TxnDisplayModType",
            "type": "Element",
            "required": True,
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TxnEvent:
    txn_event_type: Optional[TxnEventType] = field(
        default=None,
        metadata={
            "name": "TxnEventType",
            "type": "Element",
            "required": True,
        },
    )
    txn_event_operation: Optional[TxnEventOperation] = field(
        default=None,
        metadata={
            "name": "TxnEventOperation",
            "type": "Element",
            "required": True,
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )


@dataclass
class TxnEventSubscription:
    txn_event_type: List[TxnEventType] = field(
        default_factory=list,
        metadata={
            "name": "TxnEventType",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    txn_event_operation: List[TxnEventOperation] = field(
        default_factory=list,
        metadata={
            "name": "TxnEventOperation",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class TxnVoidRqType:
    txn_void_type: Optional[TxnVoidType] = field(
        default=None,
        metadata={
            "name": "TxnVoidType",
            "type": "Element",
            "required": True,
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TxnVoidRsType:
    txn_void_type: Optional[TxnVoidType] = field(
        default=None,
        metadata={
            "name": "TxnVoidType",
            "type": "Element",
        },
    )
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VacationHours:
    hours_available: Optional[HoursAvailable] = field(
        default=None,
        metadata={
            "name": "HoursAvailable",
            "type": "Element",
        },
    )
    accrual_period: Optional[AccrualPeriod] = field(
        default=None,
        metadata={
            "name": "AccrualPeriod",
            "type": "Element",
        },
    )
    hours_accrued: Optional[HoursAccrued] = field(
        default=None,
        metadata={
            "name": "HoursAccrued",
            "type": "Element",
        },
    )
    maximum_hours: Optional[MaximumHours] = field(
        default=None,
        metadata={
            "name": "MaximumHours",
            "type": "Element",
        },
    )
    is_resetting_hours_each_new_year: Optional[IsResettingHoursEachNewYear] = (
        field(
            default=None,
            metadata={
                "name": "IsResettingHoursEachNewYear",
                "type": "Element",
            },
        )
    )
    hours_used: Optional[HoursUsed] = field(
        default=None,
        metadata={
            "name": "HoursUsed",
            "type": "Element",
        },
    )
    accrual_start_date: Optional[AccrualStartDate] = field(
        default=None,
        metadata={
            "name": "AccrualStartDate",
            "type": "Element",
        },
    )


@dataclass
class VehicleAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 256,
        },
    )


@dataclass
class VehicleMileageAdd:
    vehicle_ref: Optional[VehicleRef] = field(
        default=None,
        metadata={
            "name": "VehicleRef",
            "type": "Element",
            "required": True,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    trip_start_date: Optional[TripStartDate] = field(
        default=None,
        metadata={
            "name": "TripStartDate",
            "type": "Element",
        },
    )
    trip_end_date: Optional[TripEndDate] = field(
        default=None,
        metadata={
            "name": "TripEndDate",
            "type": "Element",
        },
    )
    odometer_start: Optional[OdometerStart] = field(
        default=None,
        metadata={
            "name": "OdometerStart",
            "type": "Element",
        },
    )
    odometer_end: Optional[OdometerEnd] = field(
        default=None,
        metadata={
            "name": "OdometerEnd",
            "type": "Element",
        },
    )
    total_miles: Optional[TotalMiles] = field(
        default=None,
        metadata={
            "name": "TotalMiles",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleMileageRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    vehicle_ref: Optional[VehicleRef] = field(
        default=None,
        metadata={
            "name": "VehicleRef",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    trip_start_date: Optional[TripStartDate] = field(
        default=None,
        metadata={
            "name": "TripStartDate",
            "type": "Element",
        },
    )
    trip_end_date: Optional[TripEndDate] = field(
        default=None,
        metadata={
            "name": "TripEndDate",
            "type": "Element",
        },
    )
    odometer_start: Optional[OdometerStart] = field(
        default=None,
        metadata={
            "name": "OdometerStart",
            "type": "Element",
        },
    )
    odometer_end: Optional[OdometerEnd] = field(
        default=None,
        metadata={
            "name": "OdometerEnd",
            "type": "Element",
        },
    )
    total_miles: Optional[TotalMiles] = field(
        default=None,
        metadata={
            "name": "TotalMiles",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    standard_mileage_rate: Optional[StandardMileageRate] = field(
        default=None,
        metadata={
            "name": "StandardMileageRate",
            "type": "Element",
        },
    )
    standard_mileage_total_amount: Optional[StandardMileageTotalAmount] = (
        field(
            default=None,
            metadata={
                "name": "StandardMileageTotalAmount",
                "type": "Element",
            },
        )
    )
    billable_rate: Optional[BillableRate] = field(
        default=None,
        metadata={
            "name": "BillableRate",
            "type": "Element",
        },
    )
    billable_amount: Optional[BillableAmount] = field(
        default=None,
        metadata={
            "name": "BillableAmount",
            "type": "Element",
        },
    )


@dataclass
class VehicleMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 256,
        },
    )


@dataclass
class VehicleRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 256,
        },
    )


@dataclass
class VendorAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    cc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Cc",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    contacts: List[Contacts] = field(
        default_factory=list,
        metadata={
            "name": "Contacts",
            "type": "Element",
        },
    )
    name_on_check: Optional[str] = field(
        default=None,
        metadata={
            "name": "NameOnCheck",
            "type": "Element",
            "max_length": 41,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes: List[AdditionalNotes] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotes",
            "type": "Element",
        },
    )
    vendor_type_ref: Optional[VendorTypeRef] = field(
        default=None,
        metadata={
            "name": "VendorTypeRef",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    credit_limit: Optional[CreditLimit] = field(
        default=None,
        metadata={
            "name": "CreditLimit",
            "type": "Element",
        },
    )
    vendor_tax_ident: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorTaxIdent",
            "type": "Element",
            "max_length": 15,
        },
    )
    is_vendor_eligible_for1099: Optional[IsVendorEligibleFor1099] = field(
        default=None,
        metadata={
            "name": "IsVendorEligibleFor1099",
            "type": "Element",
        },
    )
    open_balance: Optional[OpenBalance] = field(
        default=None,
        metadata={
            "name": "OpenBalance",
            "type": "Element",
        },
    )
    open_balance_date: Optional[OpenBalanceDate] = field(
        default=None,
        metadata={
            "name": "OpenBalanceDate",
            "type": "Element",
        },
    )
    billing_rate_ref: Optional[BillingRateRef] = field(
        default=None,
        metadata={
            "name": "BillingRateRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_tax_country: Optional[SalesTaxCountry] = field(
        default=None,
        metadata={
            "name": "SalesTaxCountry",
            "type": "Element",
        },
    )
    is_sales_tax_agency: Optional[IsSalesTaxAgency] = field(
        default=None,
        metadata={
            "name": "IsSalesTaxAgency",
            "type": "Element",
        },
    )
    sales_tax_return_ref: Optional[SalesTaxReturnRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxReturnRef",
            "type": "Element",
        },
    )
    tax_registration_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxRegistrationNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    reporting_period: Optional[ReportingPeriod] = field(
        default=None,
        metadata={
            "name": "ReportingPeriod",
            "type": "Element",
        },
    )
    is_tax_tracked_on_purchases: Optional[IsTaxTrackedOnPurchases] = field(
        default=None,
        metadata={
            "name": "IsTaxTrackedOnPurchases",
            "type": "Element",
        },
    )
    tax_on_purchases_account_ref: Optional[TaxOnPurchasesAccountRef] = field(
        default=None,
        metadata={
            "name": "TaxOnPurchasesAccountRef",
            "type": "Element",
        },
    )
    is_tax_tracked_on_sales: Optional[IsTaxTrackedOnSales] = field(
        default=None,
        metadata={
            "name": "IsTaxTrackedOnSales",
            "type": "Element",
        },
    )
    tax_on_sales_account_ref: Optional[TaxOnSalesAccountRef] = field(
        default=None,
        metadata={
            "name": "TaxOnSalesAccountRef",
            "type": "Element",
        },
    )
    is_tax_on_tax: Optional[IsTaxOnTax] = field(
        default=None,
        metadata={
            "name": "IsTaxOnTax",
            "type": "Element",
        },
    )
    prefill_account_ref: List[PrefillAccountRef] = field(
        default_factory=list,
        metadata={
            "name": "PrefillAccountRef",
            "type": "Element",
            "max_occurs": 3,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class VendorMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    cc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Cc",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    contacts_mod: List[ContactsMod] = field(
        default_factory=list,
        metadata={
            "name": "ContactsMod",
            "type": "Element",
        },
    )
    name_on_check: Optional[str] = field(
        default=None,
        metadata={
            "name": "NameOnCheck",
            "type": "Element",
            "max_length": 41,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes_mod: List[AdditionalNotesMod] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotesMod",
            "type": "Element",
        },
    )
    vendor_type_ref: Optional[VendorTypeRef] = field(
        default=None,
        metadata={
            "name": "VendorTypeRef",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    credit_limit: Optional[CreditLimit] = field(
        default=None,
        metadata={
            "name": "CreditLimit",
            "type": "Element",
        },
    )
    vendor_tax_ident: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorTaxIdent",
            "type": "Element",
            "max_length": 15,
        },
    )
    is_vendor_eligible_for1099: Optional[IsVendorEligibleFor1099] = field(
        default=None,
        metadata={
            "name": "IsVendorEligibleFor1099",
            "type": "Element",
        },
    )
    billing_rate_ref: Optional[BillingRateRef] = field(
        default=None,
        metadata={
            "name": "BillingRateRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_tax_country: Optional[SalesTaxCountry] = field(
        default=None,
        metadata={
            "name": "SalesTaxCountry",
            "type": "Element",
        },
    )
    is_sales_tax_agency: Optional[IsSalesTaxAgency] = field(
        default=None,
        metadata={
            "name": "IsSalesTaxAgency",
            "type": "Element",
        },
    )
    sales_tax_return_ref: Optional[SalesTaxReturnRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxReturnRef",
            "type": "Element",
        },
    )
    tax_registration_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxRegistrationNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    reporting_period: Optional[ReportingPeriod] = field(
        default=None,
        metadata={
            "name": "ReportingPeriod",
            "type": "Element",
        },
    )
    is_tax_tracked_on_purchases: Optional[IsTaxTrackedOnPurchases] = field(
        default=None,
        metadata={
            "name": "IsTaxTrackedOnPurchases",
            "type": "Element",
        },
    )
    tax_on_purchases_account_ref: Optional[TaxOnPurchasesAccountRef] = field(
        default=None,
        metadata={
            "name": "TaxOnPurchasesAccountRef",
            "type": "Element",
        },
    )
    is_tax_tracked_on_sales: Optional[IsTaxTrackedOnSales] = field(
        default=None,
        metadata={
            "name": "IsTaxTrackedOnSales",
            "type": "Element",
        },
    )
    tax_on_sales_account_ref: Optional[TaxOnSalesAccountRef] = field(
        default=None,
        metadata={
            "name": "TaxOnSalesAccountRef",
            "type": "Element",
        },
    )
    is_tax_on_tax: Optional[IsTaxOnTax] = field(
        default=None,
        metadata={
            "name": "IsTaxOnTax",
            "type": "Element",
        },
    )
    prefill_account_ref: List[PrefillAccountRef] = field(
        default_factory=list,
        metadata={
            "name": "PrefillAccountRef",
            "type": "Element",
            "max_occurs": 3,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class VendorTypeAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )


@dataclass
class VendorTypeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )


@dataclass
class ArrefundCreditCardQueryRqType:
    class Meta:
        name = "ARRefundCreditCardQueryRqType"

    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ArrefundCreditCardQueryRqTypeMetaData = field(
        default=ArrefundCreditCardQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ArrefundCreditCardQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class AccountAddRqType:
    account_add: Optional[AccountAdd] = field(
        default=None,
        metadata={
            "name": "AccountAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class AccountModRqType:
    account_mod: Optional[AccountMod] = field(
        default=None,
        metadata={
            "name": "AccountMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class AccountQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    account_type: List[AccountType] = field(
        default_factory=list,
        metadata={
            "name": "AccountType",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: AccountQueryRqTypeMetaData = field(
        default=AccountQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class AccountRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    account_type: Optional[AccountType] = field(
        default=None,
        metadata={
            "name": "AccountType",
            "type": "Element",
        },
    )
    detail_account_type: Optional[DetailAccountType] = field(
        default=None,
        metadata={
            "name": "DetailAccountType",
            "type": "Element",
        },
    )
    special_account_type: Optional[SpecialAccountType] = field(
        default=None,
        metadata={
            "name": "SpecialAccountType",
            "type": "Element",
        },
    )
    is_tax_account: Optional[IsTaxAccount] = field(
        default=None,
        metadata={
            "name": "IsTaxAccount",
            "type": "Element",
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 7,
        },
    )
    bank_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "BankNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    last_check_number: Optional[LastCheckNumber] = field(
        default=None,
        metadata={
            "name": "LastCheckNumber",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 200,
        },
    )
    balance: Optional[Balance] = field(
        default=None,
        metadata={
            "name": "Balance",
            "type": "Element",
        },
    )
    total_balance: Optional[TotalBalance] = field(
        default=None,
        metadata={
            "name": "TotalBalance",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    tax_line_info_ret: Optional[TaxLineInfoRet] = field(
        default=None,
        metadata={
            "name": "TaxLineInfoRet",
            "type": "Element",
        },
    )
    cash_flow_classification: Optional[CashFlowClassification] = field(
        default=None,
        metadata={
            "name": "CashFlowClassification",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class AgingReportQueryRqType:
    aging_report_type: Optional[AgingReportType] = field(
        default=None,
        metadata={
            "name": "AgingReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_txn_type_filter: Optional[ReportTxnTypeFilter] = field(
        default=None,
        metadata={
            "name": "ReportTxnTypeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    include_column: List[IncludeColumn] = field(
        default_factory=list,
        metadata={
            "name": "IncludeColumn",
            "type": "Element",
        },
    )
    include_accounts: Optional[IncludeAccounts] = field(
        default=None,
        metadata={
            "name": "IncludeAccounts",
            "type": "Element",
        },
    )
    report_aging_as_of: Optional[ReportAgingAsOf] = field(
        default=None,
        metadata={
            "name": "ReportAgingAsOf",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class AppliedToTxnAdd:
    txn_id: Optional[AppliedToTxnAddTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    payment_amount: Optional[PaymentAmount] = field(
        default=None,
        metadata={
            "name": "PaymentAmount",
            "type": "Element",
        },
    )
    txn_line_detail: List[TxnLineDetail] = field(
        default_factory=list,
        metadata={
            "name": "TxnLineDetail",
            "type": "Element",
        },
    )
    set_credit: List[SetCredit] = field(
        default_factory=list,
        metadata={
            "name": "SetCredit",
            "type": "Element",
        },
    )
    discount_amount: Optional[DiscountAmount] = field(
        default=None,
        metadata={
            "name": "DiscountAmount",
            "type": "Element",
        },
    )
    discount_account_ref: Optional[DiscountAccountRef] = field(
        default=None,
        metadata={
            "name": "DiscountAccountRef",
            "type": "Element",
        },
    )
    discount_class_ref: Optional[DiscountClassRef] = field(
        default=None,
        metadata={
            "name": "DiscountClassRef",
            "type": "Element",
        },
    )


@dataclass
class AppliedToTxnMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    payment_amount: Optional[PaymentAmount] = field(
        default=None,
        metadata={
            "name": "PaymentAmount",
            "type": "Element",
        },
    )
    set_credit: List[SetCredit] = field(
        default_factory=list,
        metadata={
            "name": "SetCredit",
            "type": "Element",
        },
    )
    discount_amount: Optional[DiscountAmount] = field(
        default=None,
        metadata={
            "name": "DiscountAmount",
            "type": "Element",
        },
    )
    discount_account_ref: Optional[DiscountAccountRef] = field(
        default=None,
        metadata={
            "name": "DiscountAccountRef",
            "type": "Element",
        },
    )
    discount_class_ref: Optional[DiscountClassRef] = field(
        default=None,
        metadata={
            "name": "DiscountClassRef",
            "type": "Element",
        },
    )


@dataclass
class AppliedToTxnRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    txn_type: Optional[TxnType] = field(
        default=None,
        metadata={
            "name": "TxnType",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    balance_remaining: Optional[BalanceRemaining] = field(
        default=None,
        metadata={
            "name": "BalanceRemaining",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    txn_line_detail: List[TxnLineDetail] = field(
        default_factory=list,
        metadata={
            "name": "TxnLineDetail",
            "type": "Element",
        },
    )
    discount_amount: Optional[DiscountAmount] = field(
        default=None,
        metadata={
            "name": "DiscountAmount",
            "type": "Element",
        },
    )
    discount_account_ref: Optional[DiscountAccountRef] = field(
        default=None,
        metadata={
            "name": "DiscountAccountRef",
            "type": "Element",
        },
    )
    discount_class_ref: Optional[DiscountClassRef] = field(
        default=None,
        metadata={
            "name": "DiscountClassRef",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )


@dataclass
class BarCodeQueryRsType:
    bar_code_ret: List[BarCodeRet] = field(
        default_factory=list,
        metadata={
            "name": "BarCodeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillAdd:
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
            "required": True,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    link_to_txn_id: List[LinkToTxnId] = field(
        default_factory=list,
        metadata={
            "name": "LinkToTxnID",
            "type": "Element",
        },
    )
    expense_line_add: List[ExpenseLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineAdd",
            "type": "Element",
        },
    )
    item_line_add: List[ItemLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineAdd",
            "type": "Element",
        },
    )
    item_group_line_add: List[ItemGroupLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BillPaymentCheckQueryRqTypeMetaData = field(
        default=BillPaymentCheckQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[BillPaymentCheckQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCreditCardQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BillPaymentCreditCardQueryRqTypeMetaData = field(
        default=BillPaymentCreditCardQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[BillPaymentCreditCardQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    paid_status: Optional[PaidStatus] = field(
        default=None,
        metadata={
            "name": "PaidStatus",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BillQueryRqTypeMetaData = field(
        default=BillQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[BillQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillToPayRet:
    bill_to_pay: Optional[BillToPay] = field(
        default=None,
        metadata={
            "name": "BillToPay",
            "type": "Element",
        },
    )
    credit_to_apply: Optional[CreditToApply] = field(
        default=None,
        metadata={
            "name": "CreditToApply",
            "type": "Element",
        },
    )


@dataclass
class BillingRateAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    fixed_billing_rate: Optional[FixedBillingRate] = field(
        default=None,
        metadata={
            "name": "FixedBillingRate",
            "type": "Element",
        },
    )
    billing_rate_per_item: List[BillingRatePerItem] = field(
        default_factory=list,
        metadata={
            "name": "BillingRatePerItem",
            "type": "Element",
        },
    )


@dataclass
class BillingRateQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BillingRateQueryRqTypeMetaData = field(
        default=BillingRateQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class BillingRateRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    billing_rate_type: Optional[BillingRateType] = field(
        default=None,
        metadata={
            "name": "BillingRateType",
            "type": "Element",
        },
    )
    fixed_billing_rate: Optional[FixedBillingRate] = field(
        default=None,
        metadata={
            "name": "FixedBillingRate",
            "type": "Element",
        },
    )
    billing_rate_per_item_ret: List[BillingRatePerItemRet] = field(
        default_factory=list,
        metadata={
            "name": "BillingRatePerItemRet",
            "type": "Element",
        },
    )


@dataclass
class BudgetSummaryReportQueryRqType:
    budget_summary_report_type: Optional[BudgetSummaryReportType] = field(
        default=None,
        metadata={
            "name": "BudgetSummaryReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    fiscal_year: Optional[FiscalYear] = field(
        default=None,
        metadata={
            "name": "FiscalYear",
            "type": "Element",
            "required": True,
        },
    )
    budget_criterion: Optional[BudgetCriterion] = field(
        default=None,
        metadata={
            "name": "BudgetCriterion",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    summarize_budget_columns_by: Optional[SummarizeBudgetColumnsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeBudgetColumnsBy",
            "type": "Element",
        },
    )
    summarize_budget_rows_by: Optional[SummarizeBudgetRowsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeBudgetRowsBy",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyAddRqType:
    build_assembly_add: Optional[BuildAssemblyAdd] = field(
        default=None,
        metadata={
            "name": "BuildAssemblyAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyModRqType:
    build_assembly_mod: Optional[BuildAssemblyMod] = field(
        default=None,
        metadata={
            "name": "BuildAssemblyMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    item_filter: Optional[ItemFilter] = field(
        default=None,
        metadata={
            "name": "ItemFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    pending_status: Optional[PendingStatus] = field(
        default=None,
        metadata={
            "name": "PendingStatus",
            "type": "Element",
        },
    )
    include_component_line_items: Optional[IncludeComponentLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeComponentLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: BuildAssemblyQueryRqTypeMetaData = field(
        default=BuildAssemblyQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[BuildAssemblyQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    item_inventory_assembly_ref: Optional[ItemInventoryAssemblyRef] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRef",
            "type": "Element",
            "required": True,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    quantity_to_build: Optional[QuantityToBuild] = field(
        default=None,
        metadata={
            "name": "QuantityToBuild",
            "type": "Element",
            "required": True,
        },
    )
    quantity_can_build: Optional[QuantityCanBuild] = field(
        default=None,
        metadata={
            "name": "QuantityCanBuild",
            "type": "Element",
            "required": True,
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
            "required": True,
        },
    )
    quantity_on_sales_order: Optional[QuantityOnSalesOrder] = field(
        default=None,
        metadata={
            "name": "QuantityOnSalesOrder",
            "type": "Element",
            "required": True,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    component_item_line_ret: List[ComponentItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ComponentItemLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CategoryAccountMappingMod:
    mapping_category: Optional[MappingCategory] = field(
        default=None,
        metadata={
            "name": "MappingCategory",
            "type": "Element",
            "required": True,
        },
    )
    mapping_account: List[MappingAccount] = field(
        default_factory=list,
        metadata={
            "name": "MappingAccount",
            "type": "Element",
        },
    )
    threshold: Optional[Threshold] = field(
        default=None,
        metadata={
            "name": "Threshold",
            "type": "Element",
        },
    )


@dataclass
class ChargeAddRqType:
    charge_add: Optional[ChargeAdd] = field(
        default=None,
        metadata={
            "name": "ChargeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeModRqType:
    charge_mod: Optional[ChargeMod] = field(
        default=None,
        metadata={
            "name": "ChargeMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    paid_status: Optional[PaidStatus] = field(
        default=None,
        metadata={
            "name": "PaidStatus",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ChargeQueryRqTypeMetaData = field(
        default=ChargeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ChargeQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    balance_remaining: Optional[BalanceRemaining] = field(
        default=None,
        metadata={
            "name": "BalanceRemaining",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    billed_date: Optional[BilledDate] = field(
        default=None,
        metadata={
            "name": "BilledDate",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    is_paid: Optional[IsPaid] = field(
        default=None,
        metadata={
            "name": "IsPaid",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CheckAdd:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    apply_check_to_txn_add: List[ApplyCheckToTxnAdd] = field(
        default_factory=list,
        metadata={
            "name": "ApplyCheckToTxnAdd",
            "type": "Element",
        },
    )
    expense_line_add: List[ExpenseLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineAdd",
            "type": "Element",
        },
    )
    item_line_add: List[ItemLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineAdd",
            "type": "Element",
        },
    )
    item_group_line_add: List[ItemGroupLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class CheckQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CheckQueryRqTypeMetaData = field(
        default=CheckQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[CheckQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ClassAddRqType:
    class_add: Optional[ClassAdd] = field(
        default=None,
        metadata={
            "name": "ClassAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ClassAddRsType:
    class_ret: Optional[ClassRet] = field(
        default=None,
        metadata={
            "name": "ClassRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ClassModRqType:
    class_mod: Optional[ClassMod] = field(
        default=None,
        metadata={
            "name": "ClassMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ClassModRsType:
    class_ret: Optional[ClassRet] = field(
        default=None,
        metadata={
            "name": "ClassRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ClassQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ClassQueryRqTypeMetaData = field(
        default=ClassQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class ClassQueryRsType:
    class_ret: List[ClassRet] = field(
        default_factory=list,
        metadata={
            "name": "ClassRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class ClearedStatusModRqType:
    cleared_status_mod: Optional[ClearedStatusMod] = field(
        default=None,
        metadata={
            "name": "ClearedStatusMod",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CompanyActivityQueryRsType:
    company_activity_ret: Optional[CompanyActivityRet] = field(
        default=None,
        metadata={
            "name": "CompanyActivityRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeAdd:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    expense_line_add: List[ExpenseLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineAdd",
            "type": "Element",
        },
    )
    item_line_add: List[ItemLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineAdd",
            "type": "Element",
        },
    )
    item_group_line_add: List[ItemGroupLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CreditCardChargeQueryRqTypeMetaData = field(
        default=CreditCardChargeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[CreditCardChargeQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditAdd:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    expense_line_add: List[ExpenseLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineAdd",
            "type": "Element",
        },
    )
    item_line_add: List[ItemLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineAdd",
            "type": "Element",
        },
    )
    item_group_line_add: List[ItemGroupLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CreditCardCreditQueryRqTypeMetaData = field(
        default=CreditCardCreditQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[CreditCardCreditQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardTxnInfo:
    credit_card_txn_input_info: Optional[CreditCardTxnInputInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInputInfo",
            "type": "Element",
            "required": True,
        },
    )
    credit_card_txn_result_info: Optional[CreditCardTxnResultInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnResultInfo",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class CreditCardTxnInfoMod:
    credit_card_txn_input_info_mod: Optional[CreditCardTxnInputInfoMod] = (
        field(
            default=None,
            metadata={
                "name": "CreditCardTxnInputInfoMod",
                "type": "Element",
            },
        )
    )
    credit_card_txn_result_info_mod: Optional[CreditCardTxnResultInfoMod] = (
        field(
            default=None,
            metadata={
                "name": "CreditCardTxnResultInfoMod",
                "type": "Element",
            },
        )
    )


@dataclass
class CreditMemoLineGroupMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    credit_memo_line_mod: List[CreditMemoLineMod] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineMod",
            "type": "Element",
        },
    )


@dataclass
class CreditMemoQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CreditMemoQueryRqTypeMetaData = field(
        default=CreditMemoQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[CreditMemoQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CurrencyAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 64,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    currency_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CurrencyCode",
            "type": "Element",
            "required": True,
            "max_length": 3,
        },
    )
    currency_format: Optional[CurrencyFormat] = field(
        default=None,
        metadata={
            "name": "CurrencyFormat",
            "type": "Element",
        },
    )


@dataclass
class CurrencyMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 64,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    currency_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CurrencyCode",
            "type": "Element",
            "max_length": 3,
        },
    )
    currency_format: Optional[CurrencyFormat] = field(
        default=None,
        metadata={
            "name": "CurrencyFormat",
            "type": "Element",
        },
    )


@dataclass
class CurrencyQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CurrencyQueryRqTypeMetaData = field(
        default=CurrencyQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class CurrencyRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 64,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    currency_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CurrencyCode",
            "type": "Element",
            "max_length": 3,
        },
    )
    currency_format: Optional[CurrencyFormat] = field(
        default=None,
        metadata={
            "name": "CurrencyFormat",
            "type": "Element",
        },
    )
    is_user_defined_currency: Optional[IsUserDefinedCurrency] = field(
        default=None,
        metadata={
            "name": "IsUserDefinedCurrency",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    as_of_date: Optional[AsOfDate] = field(
        default=None,
        metadata={
            "name": "AsOfDate",
            "type": "Element",
        },
    )


@dataclass
class CustomDetailReportQueryRqType:
    custom_detail_report_type: Optional[CustomDetailReportType] = field(
        default=None,
        metadata={
            "name": "CustomDetailReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_txn_type_filter: Optional[ReportTxnTypeFilter] = field(
        default=None,
        metadata={
            "name": "ReportTxnTypeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_rows_by: Optional[SummarizeRowsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeRowsBy",
            "type": "Element",
            "required": True,
        },
    )
    include_column: List[IncludeColumn] = field(
        default_factory=list,
        metadata={
            "name": "IncludeColumn",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    include_accounts: Optional[IncludeAccounts] = field(
        default=None,
        metadata={
            "name": "IncludeAccounts",
            "type": "Element",
        },
    )
    report_open_balance_as_of: Optional[ReportOpenBalanceAsOf] = field(
        default=None,
        metadata={
            "name": "ReportOpenBalanceAsOf",
            "type": "Element",
        },
    )
    report_basis: Optional[ReportBasis] = field(
        default=None,
        metadata={
            "name": "ReportBasis",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomSummaryReportQueryRqType:
    custom_summary_report_type: Optional[CustomSummaryReportType] = field(
        default=None,
        metadata={
            "name": "CustomSummaryReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_txn_type_filter: Optional[ReportTxnTypeFilter] = field(
        default=None,
        metadata={
            "name": "ReportTxnTypeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_columns_by: Optional[SummarizeColumnsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeColumnsBy",
            "type": "Element",
            "required": True,
        },
    )
    summarize_rows_by: Optional[SummarizeRowsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeRowsBy",
            "type": "Element",
            "required": True,
        },
    )
    include_subcolumns: Optional[IncludeSubcolumns] = field(
        default=None,
        metadata={
            "name": "IncludeSubcolumns",
            "type": "Element",
        },
    )
    report_calendar: Optional[ReportCalendar] = field(
        default=None,
        metadata={
            "name": "ReportCalendar",
            "type": "Element",
        },
    )
    return_rows: Optional[ReturnRows] = field(
        default=None,
        metadata={
            "name": "ReturnRows",
            "type": "Element",
        },
    )
    return_columns: Optional[ReturnColumns] = field(
        default=None,
        metadata={
            "name": "ReturnColumns",
            "type": "Element",
        },
    )
    report_basis: Optional[ReportBasis] = field(
        default=None,
        metadata={
            "name": "ReportBasis",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_to_address: List[ShipToAddress] = field(
        default_factory=list,
        metadata={
            "name": "ShipToAddress",
            "type": "Element",
            "max_occurs": 50,
        },
    )
    print_as: Optional[str] = field(
        default=None,
        metadata={
            "name": "PrintAs",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    cc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Cc",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    contacts: List[Contacts] = field(
        default_factory=list,
        metadata={
            "name": "Contacts",
            "type": "Element",
        },
    )
    customer_type_ref: Optional[CustomerTypeRef] = field(
        default=None,
        metadata={
            "name": "CustomerTypeRef",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    open_balance: Optional[OpenBalance] = field(
        default=None,
        metadata={
            "name": "OpenBalance",
            "type": "Element",
        },
    )
    open_balance_date: Optional[OpenBalanceDate] = field(
        default=None,
        metadata={
            "name": "OpenBalanceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_country: Optional[SalesTaxCountry] = field(
        default=None,
        metadata={
            "name": "SalesTaxCountry",
            "type": "Element",
        },
    )
    resale_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ResaleNumber",
            "type": "Element",
            "max_length": 15,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    credit_limit: Optional[CreditLimit] = field(
        default=None,
        metadata={
            "name": "CreditLimit",
            "type": "Element",
        },
    )
    preferred_payment_method_ref: Optional[PreferredPaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PreferredPaymentMethodRef",
            "type": "Element",
        },
    )
    credit_card_info: Optional[CreditCardInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardInfo",
            "type": "Element",
        },
    )
    job_status: Optional[JobStatus] = field(
        default=None,
        metadata={
            "name": "JobStatus",
            "type": "Element",
        },
    )
    job_start_date: Optional[JobStartDate] = field(
        default=None,
        metadata={
            "name": "JobStartDate",
            "type": "Element",
        },
    )
    job_projected_end_date: Optional[JobProjectedEndDate] = field(
        default=None,
        metadata={
            "name": "JobProjectedEndDate",
            "type": "Element",
        },
    )
    job_end_date: Optional[JobEndDate] = field(
        default=None,
        metadata={
            "name": "JobEndDate",
            "type": "Element",
        },
    )
    job_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobDesc",
            "type": "Element",
            "max_length": 99,
        },
    )
    job_type_ref: Optional[JobTypeRef] = field(
        default=None,
        metadata={
            "name": "JobTypeRef",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes: List[AdditionalNotes] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotes",
            "type": "Element",
        },
    )
    is_statement_with_parent: Optional[IsStatementWithParent] = field(
        default=None,
        metadata={
            "name": "IsStatementWithParent",
            "type": "Element",
        },
    )
    delivery_method: Optional[DeliveryMethod] = field(
        default=None,
        metadata={
            "name": "DeliveryMethod",
            "type": "Element",
        },
    )
    preferred_delivery_method: Optional[PreferredDeliveryMethod] = field(
        default=None,
        metadata={
            "name": "PreferredDeliveryMethod",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    tax_registration_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxRegistrationNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class CustomerMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_to_address: List[ShipToAddress] = field(
        default_factory=list,
        metadata={
            "name": "ShipToAddress",
            "type": "Element",
            "max_occurs": 50,
        },
    )
    print_as: Optional[str] = field(
        default=None,
        metadata={
            "name": "PrintAs",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    cc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Cc",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    contacts_mod: List[ContactsMod] = field(
        default_factory=list,
        metadata={
            "name": "ContactsMod",
            "type": "Element",
        },
    )
    customer_type_ref: Optional[CustomerTypeRef] = field(
        default=None,
        metadata={
            "name": "CustomerTypeRef",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_country: Optional[SalesTaxCountry] = field(
        default=None,
        metadata={
            "name": "SalesTaxCountry",
            "type": "Element",
        },
    )
    resale_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ResaleNumber",
            "type": "Element",
            "max_length": 15,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    credit_limit: Optional[CreditLimit] = field(
        default=None,
        metadata={
            "name": "CreditLimit",
            "type": "Element",
        },
    )
    preferred_payment_method_ref: Optional[PreferredPaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PreferredPaymentMethodRef",
            "type": "Element",
        },
    )
    credit_card_info: Optional[CreditCardInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardInfo",
            "type": "Element",
        },
    )
    job_status: Optional[JobStatus] = field(
        default=None,
        metadata={
            "name": "JobStatus",
            "type": "Element",
        },
    )
    job_start_date: Optional[JobStartDate] = field(
        default=None,
        metadata={
            "name": "JobStartDate",
            "type": "Element",
        },
    )
    job_projected_end_date: Optional[JobProjectedEndDate] = field(
        default=None,
        metadata={
            "name": "JobProjectedEndDate",
            "type": "Element",
        },
    )
    job_end_date: Optional[JobEndDate] = field(
        default=None,
        metadata={
            "name": "JobEndDate",
            "type": "Element",
        },
    )
    job_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobDesc",
            "type": "Element",
            "max_length": 99,
        },
    )
    job_type_ref: Optional[JobTypeRef] = field(
        default=None,
        metadata={
            "name": "JobTypeRef",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes_mod: List[AdditionalNotesMod] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotesMod",
            "type": "Element",
        },
    )
    is_statement_with_parent: Optional[IsStatementWithParent] = field(
        default=None,
        metadata={
            "name": "IsStatementWithParent",
            "type": "Element",
        },
    )
    delivery_method: Optional[DeliveryMethod] = field(
        default=None,
        metadata={
            "name": "DeliveryMethod",
            "type": "Element",
        },
    )
    preferred_delivery_method: Optional[PreferredDeliveryMethod] = field(
        default=None,
        metadata={
            "name": "PreferredDeliveryMethod",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    tax_registration_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxRegistrationNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class CustomerMsgAddRqType:
    customer_msg_add: Optional[CustomerMsgAdd] = field(
        default=None,
        metadata={
            "name": "CustomerMsgAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerMsgAddRsType:
    customer_msg_ret: Optional[CustomerMsgRet] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerMsgQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CustomerMsgQueryRqTypeMetaData = field(
        default=CustomerMsgQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerMsgQueryRsType:
    customer_msg_ret: List[CustomerMsgRet] = field(
        default_factory=list,
        metadata={
            "name": "CustomerMsgRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    total_balance_filter: Optional[TotalBalanceFilter] = field(
        default=None,
        metadata={
            "name": "TotalBalanceFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CustomerQueryRqTypeMetaData = field(
        default=CustomerQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[CustomerQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 209,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    bill_address_block: Optional[BillAddressBlock] = field(
        default=None,
        metadata={
            "name": "BillAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    ship_to_address: List[ShipToAddress] = field(
        default_factory=list,
        metadata={
            "name": "ShipToAddress",
            "type": "Element",
            "max_occurs": 50,
        },
    )
    print_as: Optional[str] = field(
        default=None,
        metadata={
            "name": "PrintAs",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    cc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Cc",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    contacts_ret: List[ContactsRet] = field(
        default_factory=list,
        metadata={
            "name": "ContactsRet",
            "type": "Element",
        },
    )
    customer_type_ref: Optional[CustomerTypeRef] = field(
        default=None,
        metadata={
            "name": "CustomerTypeRef",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    balance: Optional[Balance] = field(
        default=None,
        metadata={
            "name": "Balance",
            "type": "Element",
        },
    )
    total_balance: Optional[TotalBalance] = field(
        default=None,
        metadata={
            "name": "TotalBalance",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_country: Optional[SalesTaxCountry] = field(
        default=None,
        metadata={
            "name": "SalesTaxCountry",
            "type": "Element",
        },
    )
    resale_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ResaleNumber",
            "type": "Element",
            "max_length": 15,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    credit_limit: Optional[CreditLimit] = field(
        default=None,
        metadata={
            "name": "CreditLimit",
            "type": "Element",
        },
    )
    preferred_payment_method_ref: Optional[PreferredPaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PreferredPaymentMethodRef",
            "type": "Element",
        },
    )
    credit_card_info: Optional[CreditCardInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardInfo",
            "type": "Element",
        },
    )
    job_status: Optional[JobStatus] = field(
        default=None,
        metadata={
            "name": "JobStatus",
            "type": "Element",
        },
    )
    job_start_date: Optional[JobStartDate] = field(
        default=None,
        metadata={
            "name": "JobStartDate",
            "type": "Element",
        },
    )
    job_projected_end_date: Optional[JobProjectedEndDate] = field(
        default=None,
        metadata={
            "name": "JobProjectedEndDate",
            "type": "Element",
        },
    )
    job_end_date: Optional[JobEndDate] = field(
        default=None,
        metadata={
            "name": "JobEndDate",
            "type": "Element",
        },
    )
    job_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobDesc",
            "type": "Element",
            "max_length": 99,
        },
    )
    job_type_ref: Optional[JobTypeRef] = field(
        default=None,
        metadata={
            "name": "JobTypeRef",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes_ret: List[AdditionalNotesRet] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotesRet",
            "type": "Element",
        },
    )
    is_statement_with_parent: Optional[IsStatementWithParent] = field(
        default=None,
        metadata={
            "name": "IsStatementWithParent",
            "type": "Element",
        },
    )
    delivery_method: Optional[DeliveryMethod] = field(
        default=None,
        metadata={
            "name": "DeliveryMethod",
            "type": "Element",
        },
    )
    preferred_delivery_method: Optional[PreferredDeliveryMethod] = field(
        default=None,
        metadata={
            "name": "PreferredDeliveryMethod",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    tax_registration_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxRegistrationNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CustomerTypeAddRqType:
    customer_type_add: Optional[CustomerTypeAdd] = field(
        default=None,
        metadata={
            "name": "CustomerTypeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerTypeAddRsType:
    customer_type_ret: Optional[CustomerTypeRet] = field(
        default=None,
        metadata={
            "name": "CustomerTypeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerTypeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: CustomerTypeQueryRqTypeMetaData = field(
        default=CustomerTypeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerTypeQueryRsType:
    customer_type_ret: List[CustomerTypeRet] = field(
        default_factory=list,
        metadata={
            "name": "CustomerTypeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class DataEvent:
    company_file_path: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyFilePath",
            "type": "Element",
            "required": True,
            "max_length": 260,
        },
    )
    host_info: Optional[HostInfo] = field(
        default=None,
        metadata={
            "name": "HostInfo",
            "type": "Element",
            "required": True,
        },
    )
    list_event: Optional[ListEvent] = field(
        default=None,
        metadata={
            "name": "ListEvent",
            "type": "Element",
        },
    )
    txn_event: Optional[TxnEvent] = field(
        default=None,
        metadata={
            "name": "TxnEvent",
            "type": "Element",
        },
    )
    last_restore_time: Optional[LastRestoreTime] = field(
        default=None,
        metadata={
            "name": "LastRestoreTime",
            "type": "Element",
        },
    )
    last_condense_time: Optional[LastCondenseTime] = field(
        default=None,
        metadata={
            "name": "LastCondenseTime",
            "type": "Element",
        },
    )
    data_event_recovery_time: Optional[DataEventRecoveryTime] = field(
        default=None,
        metadata={
            "name": "DataEventRecoveryTime",
            "type": "Element",
        },
    )


@dataclass
class DataEventRecoveryInfoQueryRsType:
    data_event_recovery_info_ret: Optional[DataEventRecoveryInfoRet] = field(
        default=None,
        metadata={
            "name": "DataEventRecoveryInfoRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataEventSubscriptionAdd:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    comcallback_info: Optional[ComcallbackInfo] = field(
        default=None,
        metadata={
            "name": "COMCallbackInfo",
            "type": "Element",
            "required": True,
        },
    )
    delivery_policy: Optional[DeliveryPolicy] = field(
        default=None,
        metadata={
            "name": "DeliveryPolicy",
            "type": "Element",
            "required": True,
        },
    )
    track_lost_events: Optional[TrackLostEvents] = field(
        default=None,
        metadata={
            "name": "TrackLostEvents",
            "type": "Element",
        },
    )
    deliver_own_events: Optional[DeliverOwnEvents] = field(
        default=None,
        metadata={
            "name": "DeliverOwnEvents",
            "type": "Element",
        },
    )
    list_event_subscription: List[ListEventSubscription] = field(
        default_factory=list,
        metadata={
            "name": "ListEventSubscription",
            "type": "Element",
        },
    )
    txn_event_subscription: List[TxnEventSubscription] = field(
        default_factory=list,
        metadata={
            "name": "TxnEventSubscription",
            "type": "Element",
        },
    )


@dataclass
class DataEventSubscriptionRet:
    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
            "required": True,
        },
    )
    time_last_processed: Optional[TimeLastProcessed] = field(
        default=None,
        metadata={
            "name": "TimeLastProcessed",
            "type": "Element",
        },
    )
    comcallback_info: Optional[ComcallbackInfo] = field(
        default=None,
        metadata={
            "name": "COMCallbackInfo",
            "type": "Element",
            "required": True,
        },
    )
    delivery_policy: Optional[DeliveryPolicy] = field(
        default=None,
        metadata={
            "name": "DeliveryPolicy",
            "type": "Element",
            "required": True,
        },
    )
    track_lost_events: Optional[TrackLostEvents] = field(
        default=None,
        metadata={
            "name": "TrackLostEvents",
            "type": "Element",
            "required": True,
        },
    )
    deliver_own_events: Optional[DeliverOwnEvents] = field(
        default=None,
        metadata={
            "name": "DeliverOwnEvents",
            "type": "Element",
        },
    )
    list_event_subscription: List[ListEventSubscription] = field(
        default_factory=list,
        metadata={
            "name": "ListEventSubscription",
            "type": "Element",
        },
    )
    txn_event_subscription: List[TxnEventSubscription] = field(
        default_factory=list,
        metadata={
            "name": "TxnEventSubscription",
            "type": "Element",
        },
    )


@dataclass
class DataExtAddRqType:
    data_ext_add: Optional[DataExtAdd] = field(
        default=None,
        metadata={
            "name": "DataExtAdd",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtAddRsType:
    data_ext_ret: Optional[DataExtRet] = field(
        default=None,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefAddRqType:
    data_ext_def_add: Optional[DataExtDefAdd] = field(
        default=None,
        metadata={
            "name": "DataExtDefAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefAddRsType:
    data_ext_def_ret: Optional[DataExtDefRet] = field(
        default=None,
        metadata={
            "name": "DataExtDefRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefDelRsType:
    data_ext_def_del_ret: Optional[DataExtDefDelRet] = field(
        default=None,
        metadata={
            "name": "DataExtDefDelRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefModRqType:
    data_ext_def_mod: Optional[DataExtDefMod] = field(
        default=None,
        metadata={
            "name": "DataExtDefMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefModRsType:
    data_ext_def_ret: Optional[DataExtDefRet] = field(
        default=None,
        metadata={
            "name": "DataExtDefRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDefQueryRsType:
    data_ext_def_ret: List[DataExtDefRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDelRqType:
    data_ext_del: Optional[DataExtDel] = field(
        default=None,
        metadata={
            "name": "DataExtDel",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtDelRsType:
    data_ext_del_ret: Optional[DataExtDelRet] = field(
        default=None,
        metadata={
            "name": "DataExtDelRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtModRqType:
    data_ext_mod: Optional[DataExtMod] = field(
        default=None,
        metadata={
            "name": "DataExtMod",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataExtModRsType:
    data_ext_ret: Optional[DataExtRet] = field(
        default=None,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DateDrivenTermsAddRqType:
    date_driven_terms_add: Optional[DateDrivenTermsAdd] = field(
        default=None,
        metadata={
            "name": "DateDrivenTermsAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DateDrivenTermsAddRsType:
    date_driven_terms_ret: Optional[DateDrivenTermsRet] = field(
        default=None,
        metadata={
            "name": "DateDrivenTermsRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DateDrivenTermsQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: DateDrivenTermsQueryRqTypeMetaData = field(
        default=DateDrivenTermsQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class DateDrivenTermsQueryRsType:
    date_driven_terms_ret: List[DateDrivenTermsRet] = field(
        default_factory=list,
        metadata={
            "name": "DateDrivenTermsRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class DepositAdd:
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
            "required": True,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    cash_back_info_add: Optional[CashBackInfoAdd] = field(
        default=None,
        metadata={
            "name": "CashBackInfoAdd",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    deposit_line_add: List[DepositLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "DepositLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class DepositMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    cash_back_info_mod: Optional[CashBackInfoMod] = field(
        default=None,
        metadata={
            "name": "CashBackInfoMod",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    deposit_line_mod: List[DepositLineMod] = field(
        default_factory=list,
        metadata={
            "name": "DepositLineMod",
            "type": "Element",
        },
    )


@dataclass
class DepositQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: DepositQueryRqTypeMetaData = field(
        default=DepositQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[DepositQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class DepositRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_total: Optional[DepositTotal] = field(
        default=None,
        metadata={
            "name": "DepositTotal",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    deposit_total_in_home_currency: Optional[DepositTotalInHomeCurrency] = (
        field(
            default=None,
            metadata={
                "name": "DepositTotalInHomeCurrency",
                "type": "Element",
            },
        )
    )
    cash_back_info_ret: Optional[CashBackInfoRet] = field(
        default=None,
        metadata={
            "name": "CashBackInfoRet",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    deposit_line_ret: List[DepositLineRet] = field(
        default_factory=list,
        metadata={
            "name": "DepositLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class EmergencyContacts:
    primary_contact: Optional[PrimaryContact] = field(
        default=None,
        metadata={
            "name": "PrimaryContact",
            "type": "Element",
        },
    )
    secondary_contact: Optional[SecondaryContact] = field(
        default=None,
        metadata={
            "name": "SecondaryContact",
            "type": "Element",
        },
    )


@dataclass
class EmployeePayrollInfo:
    pay_period: Optional[PayPeriod] = field(
        default=None,
        metadata={
            "name": "PayPeriod",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    clear_earnings: Optional[ClearEarnings] = field(
        default=None,
        metadata={
            "name": "ClearEarnings",
            "type": "Element",
        },
    )
    earnings: List[Earnings] = field(
        default_factory=list,
        metadata={
            "name": "Earnings",
            "type": "Element",
        },
    )
    use_time_data_to_create_paychecks: Optional[
        UseTimeDataToCreatePaychecks
    ] = field(
        default=None,
        metadata={
            "name": "UseTimeDataToCreatePaychecks",
            "type": "Element",
        },
    )
    sick_hours: Optional[SickHours] = field(
        default=None,
        metadata={
            "name": "SickHours",
            "type": "Element",
        },
    )
    vacation_hours: Optional[VacationHours] = field(
        default=None,
        metadata={
            "name": "VacationHours",
            "type": "Element",
        },
    )


@dataclass
class EmployeePayrollInfoMod:
    pay_period: Optional[PayPeriod] = field(
        default=None,
        metadata={
            "name": "PayPeriod",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    clear_earnings: Optional[ClearEarnings] = field(
        default=None,
        metadata={
            "name": "ClearEarnings",
            "type": "Element",
        },
    )
    earnings: List[Earnings] = field(
        default_factory=list,
        metadata={
            "name": "Earnings",
            "type": "Element",
        },
    )
    use_time_data_to_create_paychecks: Optional[
        UseTimeDataToCreatePaychecks
    ] = field(
        default=None,
        metadata={
            "name": "UseTimeDataToCreatePaychecks",
            "type": "Element",
        },
    )
    sick_hours: Optional[SickHours] = field(
        default=None,
        metadata={
            "name": "SickHours",
            "type": "Element",
        },
    )
    vacation_hours: Optional[VacationHours] = field(
        default=None,
        metadata={
            "name": "VacationHours",
            "type": "Element",
        },
    )


@dataclass
class EmployeeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: EmployeeQueryRqTypeMetaData = field(
        default=EmployeeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class EntityQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: EntityQueryRqTypeMetaData = field(
        default=EntityQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[EntityQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    estimate_line_add: List[EstimateLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineAdd",
            "type": "Element",
        },
    )
    estimate_line_group_add: List[EstimateLineGroupAdd] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineGroupAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateLineGroupMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    estimate_line_mod: List[EstimateLineMod] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineMod",
            "type": "Element",
        },
    )


@dataclass
class EstimateLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    markup_rate: Optional[MarkupRate] = field(
        default=None,
        metadata={
            "name": "MarkupRate",
            "type": "Element",
        },
    )
    markup_rate_percent: Optional[MarkupRatePercent] = field(
        default=None,
        metadata={
            "name": "MarkupRatePercent",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class EstimateQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: EstimateQueryRqTypeMetaData = field(
        default=EstimateQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[EstimateQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ExpenseLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class Form1099CategoryAccountMappingRet:
    is_filing1099_misc: Optional[IsFiling1099Misc] = field(
        default=None,
        metadata={
            "name": "IsFiling1099Misc",
            "type": "Element",
            "required": True,
        },
    )
    category_account_mapping: List[CategoryAccountMapping] = field(
        default_factory=list,
        metadata={
            "name": "CategoryAccountMapping",
            "type": "Element",
        },
    )


@dataclass
class GeneralDetailReportQueryRqType:
    general_detail_report_type: Optional[GeneralDetailReportType] = field(
        default=None,
        metadata={
            "name": "GeneralDetailReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_txn_type_filter: Optional[ReportTxnTypeFilter] = field(
        default=None,
        metadata={
            "name": "ReportTxnTypeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_rows_by: Optional[SummarizeRowsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeRowsBy",
            "type": "Element",
        },
    )
    include_column: List[IncludeColumn] = field(
        default_factory=list,
        metadata={
            "name": "IncludeColumn",
            "type": "Element",
        },
    )
    include_accounts: Optional[IncludeAccounts] = field(
        default=None,
        metadata={
            "name": "IncludeAccounts",
            "type": "Element",
        },
    )
    report_open_balance_as_of: Optional[ReportOpenBalanceAsOf] = field(
        default=None,
        metadata={
            "name": "ReportOpenBalanceAsOf",
            "type": "Element",
        },
    )
    report_basis: Optional[ReportBasis] = field(
        default=None,
        metadata={
            "name": "ReportBasis",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class GeneralSummaryReportQueryRqType:
    general_summary_report_type: Optional[GeneralSummaryReportType] = field(
        default=None,
        metadata={
            "name": "GeneralSummaryReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_txn_type_filter: Optional[ReportTxnTypeFilter] = field(
        default=None,
        metadata={
            "name": "ReportTxnTypeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_columns_by: Optional[SummarizeColumnsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeColumnsBy",
            "type": "Element",
        },
    )
    include_subcolumns: Optional[IncludeSubcolumns] = field(
        default=None,
        metadata={
            "name": "IncludeSubcolumns",
            "type": "Element",
        },
    )
    report_calendar: Optional[ReportCalendar] = field(
        default=None,
        metadata={
            "name": "ReportCalendar",
            "type": "Element",
        },
    )
    return_rows: Optional[ReturnRows] = field(
        default=None,
        metadata={
            "name": "ReturnRows",
            "type": "Element",
        },
    )
    return_columns: Optional[ReturnColumns] = field(
        default=None,
        metadata={
            "name": "ReturnColumns",
            "type": "Element",
        },
    )
    report_basis: Optional[ReportBasis] = field(
        default=None,
        metadata={
            "name": "ReportBasis",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class HostQueryRqType:
    include_list_meta_data: Optional[IncludeListMetaData] = field(
        default=None,
        metadata={
            "name": "IncludeListMetaData",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class HostRet:
    product_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProductName",
            "type": "Element",
            "max_length": 255,
        },
    )
    major_version: Optional[str] = field(
        default=None,
        metadata={
            "name": "MajorVersion",
            "type": "Element",
            "max_length": 5,
        },
    )
    minor_version: Optional[str] = field(
        default=None,
        metadata={
            "name": "MinorVersion",
            "type": "Element",
            "max_length": 5,
        },
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "max_length": 2,
        },
    )
    supported_qbxmlversion: List[str] = field(
        default_factory=list,
        metadata={
            "name": "SupportedQBXMLVersion",
            "type": "Element",
            "max_length": 10,
        },
    )
    is_automatic_login: Optional[IsAutomaticLogin] = field(
        default=None,
        metadata={
            "name": "IsAutomaticLogin",
            "type": "Element",
        },
    )
    qbfile_mode: Optional[QbfileMode] = field(
        default=None,
        metadata={
            "name": "QBFileMode",
            "type": "Element",
        },
    )
    list_meta_data: Optional[ListMetaData] = field(
        default=None,
        metadata={
            "name": "ListMetaData",
            "type": "Element",
        },
    )


@dataclass
class InventoryAdjustmentLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
            "required": True,
        },
    )
    quantity_adjustment: Optional[QuantityAdjustment] = field(
        default=None,
        metadata={
            "name": "QuantityAdjustment",
            "type": "Element",
        },
    )
    value_adjustment: Optional[ValueAdjustment] = field(
        default=None,
        metadata={
            "name": "ValueAdjustment",
            "type": "Element",
        },
    )
    serial_number_adjustment: Optional[SerialNumberAdjustment] = field(
        default=None,
        metadata={
            "name": "SerialNumberAdjustment",
            "type": "Element",
        },
    )
    lot_number_adjustment: Optional[LotNumberAdjustment] = field(
        default=None,
        metadata={
            "name": "LotNumberAdjustment",
            "type": "Element",
        },
    )


@dataclass
class InventoryAdjustmentMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    inventory_adjustment_line_mod: List[InventoryAdjustmentLineMod] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentLineMod",
            "type": "Element",
        },
    )


@dataclass
class InventoryAdjustmentQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    item_filter: Optional[ItemFilter] = field(
        default=None,
        metadata={
            "name": "ItemFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: InventoryAdjustmentQueryRqTypeMetaData = field(
        default=InventoryAdjustmentQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[InventoryAdjustmentQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    inventory_adjustment_line_ret: List[InventoryAdjustmentLineRet] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class InventorySiteAddRqType:
    inventory_site_add: Optional[InventorySiteAdd] = field(
        default=None,
        metadata={
            "name": "InventorySiteAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class InventorySiteAddRsType:
    inventory_site_ret: Optional[InventorySiteRet] = field(
        default=None,
        metadata={
            "name": "InventorySiteRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InventorySiteModRqType:
    inventory_site_mod: Optional[InventorySiteMod] = field(
        default=None,
        metadata={
            "name": "InventorySiteMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class InventorySiteModRsType:
    inventory_site_ret: Optional[InventorySiteRet] = field(
        default=None,
        metadata={
            "name": "InventorySiteRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InventorySiteQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: InventorySiteQueryRqTypeMetaData = field(
        default=InventorySiteQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class InventorySiteQueryRsType:
    inventory_site_ret: List[InventorySiteRet] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    is_finance_charge: Optional[IsFinanceCharge] = field(
        default=None,
        metadata={
            "name": "IsFinanceCharge",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    link_to_txn_id: List[LinkToTxnId] = field(
        default_factory=list,
        metadata={
            "name": "LinkToTxnID",
            "type": "Element",
        },
    )
    set_credit: List[SetCredit] = field(
        default_factory=list,
        metadata={
            "name": "SetCredit",
            "type": "Element",
        },
    )
    invoice_line_add: List[InvoiceLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineAdd",
            "type": "Element",
        },
    )
    invoice_line_group_add: List[InvoiceLineGroupAdd] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineGroupAdd",
            "type": "Element",
        },
    )
    discount_line_add: Optional[DiscountLineAdd] = field(
        default=None,
        metadata={
            "name": "DiscountLineAdd",
            "type": "Element",
        },
    )
    sales_tax_line_add: Optional[SalesTaxLineAdd] = field(
        default=None,
        metadata={
            "name": "SalesTaxLineAdd",
            "type": "Element",
        },
    )
    shipping_line_add: Optional[ShippingLineAdd] = field(
        default=None,
        metadata={
            "name": "ShippingLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceLineGroupMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    invoice_line_mod: List[InvoiceLineMod] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineMod",
            "type": "Element",
        },
    )


@dataclass
class InvoiceLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class InvoiceQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    paid_status: Optional[PaidStatus] = field(
        default=None,
        metadata={
            "name": "PaidStatus",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: InvoiceQueryRqTypeMetaData = field(
        default=InvoiceQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[InvoiceQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemAssembliesCanBuildQueryRsType:
    item_assemblies_can_build_ret: Optional[ItemAssembliesCanBuildRet] = field(
        default=None,
        metadata={
            "name": "ItemAssembliesCanBuildRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemDiscountAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    discount_rate: Optional[DiscountRate] = field(
        default=None,
        metadata={
            "name": "DiscountRate",
            "type": "Element",
        },
    )
    discount_rate_percent: Optional[DiscountRatePercent] = field(
        default=None,
        metadata={
            "name": "DiscountRatePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemDiscountMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    discount_rate: Optional[DiscountRate] = field(
        default=None,
        metadata={
            "name": "DiscountRate",
            "type": "Element",
        },
    )
    discount_rate_percent: Optional[DiscountRatePercent] = field(
        default=None,
        metadata={
            "name": "DiscountRatePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    apply_account_ref_to_existing_txns: Optional[
        ApplyAccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyAccountRefToExistingTxns",
            "type": "Element",
        },
    )


@dataclass
class ItemDiscountQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemDiscountQueryRqTypeMetaData = field(
        default=ItemDiscountQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemDiscountQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemDiscountRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    discount_rate: Optional[DiscountRate] = field(
        default=None,
        metadata={
            "name": "DiscountRate",
            "type": "Element",
        },
    )
    discount_rate_percent: Optional[DiscountRatePercent] = field(
        default=None,
        metadata={
            "name": "DiscountRatePercent",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemFixedAssetAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    acquired_as: Optional[AcquiredAs] = field(
        default=None,
        metadata={
            "name": "AcquiredAs",
            "type": "Element",
            "required": True,
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    purchase_date: Optional[PurchaseDate] = field(
        default=None,
        metadata={
            "name": "PurchaseDate",
            "type": "Element",
            "required": True,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    vendor_or_payee_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorOrPayeeName",
            "type": "Element",
            "max_length": 50,
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    fixed_asset_sales_info: Optional[FixedAssetSalesInfo] = field(
        default=None,
        metadata={
            "name": "FixedAssetSalesInfo",
            "type": "Element",
        },
    )
    asset_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "AssetDesc",
            "type": "Element",
            "max_length": 50,
        },
    )
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Element",
            "max_length": 50,
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    warranty_exp_date: Optional[WarrantyExpDate] = field(
        default=None,
        metadata={
            "name": "WarrantyExpDate",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    asset_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AssetNumber",
            "type": "Element",
            "max_length": 10,
        },
    )
    cost_basis: Optional[CostBasis] = field(
        default=None,
        metadata={
            "name": "CostBasis",
            "type": "Element",
        },
    )
    year_end_accumulated_depreciation: Optional[
        YearEndAccumulatedDepreciation
    ] = field(
        default=None,
        metadata={
            "name": "YearEndAccumulatedDepreciation",
            "type": "Element",
        },
    )
    year_end_book_value: Optional[YearEndBookValue] = field(
        default=None,
        metadata={
            "name": "YearEndBookValue",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemFixedAssetMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    acquired_as: Optional[AcquiredAs] = field(
        default=None,
        metadata={
            "name": "AcquiredAs",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 50,
        },
    )
    purchase_date: Optional[PurchaseDate] = field(
        default=None,
        metadata={
            "name": "PurchaseDate",
            "type": "Element",
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    vendor_or_payee_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorOrPayeeName",
            "type": "Element",
            "max_length": 50,
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    fixed_asset_sales_info_mod: Optional[FixedAssetSalesInfoMod] = field(
        default=None,
        metadata={
            "name": "FixedAssetSalesInfoMod",
            "type": "Element",
        },
    )
    asset_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "AssetDesc",
            "type": "Element",
            "max_length": 50,
        },
    )
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Element",
            "max_length": 50,
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    warranty_exp_date: Optional[WarrantyExpDate] = field(
        default=None,
        metadata={
            "name": "WarrantyExpDate",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    asset_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AssetNumber",
            "type": "Element",
            "max_length": 10,
        },
    )
    cost_basis: Optional[CostBasis] = field(
        default=None,
        metadata={
            "name": "CostBasis",
            "type": "Element",
        },
    )
    year_end_accumulated_depreciation: Optional[
        YearEndAccumulatedDepreciation
    ] = field(
        default=None,
        metadata={
            "name": "YearEndAccumulatedDepreciation",
            "type": "Element",
        },
    )
    year_end_book_value: Optional[YearEndBookValue] = field(
        default=None,
        metadata={
            "name": "YearEndBookValue",
            "type": "Element",
        },
    )


@dataclass
class ItemFixedAssetQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemFixedAssetQueryRqTypeMetaData = field(
        default=ItemFixedAssetQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemFixedAssetQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemFixedAssetRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    acquired_as: Optional[AcquiredAs] = field(
        default=None,
        metadata={
            "name": "AcquiredAs",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 50,
        },
    )
    purchase_date: Optional[PurchaseDate] = field(
        default=None,
        metadata={
            "name": "PurchaseDate",
            "type": "Element",
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    vendor_or_payee_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorOrPayeeName",
            "type": "Element",
            "max_length": 50,
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    fixed_asset_sales_info: Optional[FixedAssetSalesInfo] = field(
        default=None,
        metadata={
            "name": "FixedAssetSalesInfo",
            "type": "Element",
        },
    )
    asset_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "AssetDesc",
            "type": "Element",
            "max_length": 50,
        },
    )
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Element",
            "max_length": 50,
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    warranty_exp_date: Optional[WarrantyExpDate] = field(
        default=None,
        metadata={
            "name": "WarrantyExpDate",
            "type": "Element",
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    asset_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AssetNumber",
            "type": "Element",
            "max_length": 10,
        },
    )
    cost_basis: Optional[CostBasis] = field(
        default=None,
        metadata={
            "name": "CostBasis",
            "type": "Element",
        },
    )
    year_end_accumulated_depreciation: Optional[
        YearEndAccumulatedDepreciation
    ] = field(
        default=None,
        metadata={
            "name": "YearEndAccumulatedDepreciation",
            "type": "Element",
        },
    )
    year_end_book_value: Optional[YearEndBookValue] = field(
        default=None,
        metadata={
            "name": "YearEndBookValue",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemGroupAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    item_group_line: List[ItemGroupLine] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLine",
            "type": "Element",
        },
    )


@dataclass
class ItemGroupLineMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )


@dataclass
class ItemGroupMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    force_uomchange: Optional[ForceUomchange] = field(
        default=None,
        metadata={
            "name": "ForceUOMChange",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
        },
    )
    clear_items_in_group: Optional[ClearItemsInGroup] = field(
        default=None,
        metadata={
            "name": "ClearItemsInGroup",
            "type": "Element",
        },
    )
    item_group_line: List[ItemGroupLine] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLine",
            "type": "Element",
        },
    )


@dataclass
class ItemGroupQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemGroupQueryRqTypeMetaData = field(
        default=ItemGroupQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemGroupQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemGroupRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
        },
    )
    special_item_type: Optional[SpecialItemType] = field(
        default=None,
        metadata={
            "name": "SpecialItemType",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    item_group_line: List[ItemGroupLine] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLine",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    cogsaccount_ref: Optional[CogsaccountRef] = field(
        default=None,
        metadata={
            "name": "COGSAccountRef",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    reorder_point: Optional[ReorderPoint] = field(
        default=None,
        metadata={
            "name": "ReorderPoint",
            "type": "Element",
        },
    )
    max: Optional[Max] = field(
        default=None,
        metadata={
            "name": "Max",
            "type": "Element",
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
        },
    )
    total_value: Optional[TotalValue] = field(
        default=None,
        metadata={
            "name": "TotalValue",
            "type": "Element",
        },
    )
    inventory_date: Optional[InventoryDate] = field(
        default=None,
        metadata={
            "name": "InventoryDate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryAssemblyAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    cogsaccount_ref: Optional[CogsaccountRef] = field(
        default=None,
        metadata={
            "name": "COGSAccountRef",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    build_point: Optional[BuildPoint] = field(
        default=None,
        metadata={
            "name": "BuildPoint",
            "type": "Element",
        },
    )
    max: Optional[Max] = field(
        default=None,
        metadata={
            "name": "Max",
            "type": "Element",
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
        },
    )
    total_value: Optional[TotalValue] = field(
        default=None,
        metadata={
            "name": "TotalValue",
            "type": "Element",
        },
    )
    inventory_date: Optional[InventoryDate] = field(
        default=None,
        metadata={
            "name": "InventoryDate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    item_inventory_assembly_line: List[ItemInventoryAssemblyLine] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyLine",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryAssemblyMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    force_uomchange: Optional[ForceUomchange] = field(
        default=None,
        metadata={
            "name": "ForceUOMChange",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    apply_income_account_ref_to_existing_txns: Optional[
        ApplyIncomeAccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyIncomeAccountRefToExistingTxns",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    cogsaccount_ref: Optional[CogsaccountRef] = field(
        default=None,
        metadata={
            "name": "COGSAccountRef",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    build_point: Optional[BuildPoint] = field(
        default=None,
        metadata={
            "name": "BuildPoint",
            "type": "Element",
        },
    )
    max: Optional[Max] = field(
        default=None,
        metadata={
            "name": "Max",
            "type": "Element",
        },
    )
    clear_items_in_group: Optional[ClearItemsInGroup] = field(
        default=None,
        metadata={
            "name": "ClearItemsInGroup",
            "type": "Element",
        },
    )
    item_inventory_assembly_line: List[ItemInventoryAssemblyLine] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyLine",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryAssemblyQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemInventoryAssemblyQueryRqTypeMetaData = field(
        default=ItemInventoryAssemblyQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemInventoryAssemblyQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAssemblyRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    cogsaccount_ref: Optional[CogsaccountRef] = field(
        default=None,
        metadata={
            "name": "COGSAccountRef",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    build_point: Optional[BuildPoint] = field(
        default=None,
        metadata={
            "name": "BuildPoint",
            "type": "Element",
        },
    )
    max: Optional[Max] = field(
        default=None,
        metadata={
            "name": "Max",
            "type": "Element",
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
        },
    )
    average_cost: Optional[AverageCost] = field(
        default=None,
        metadata={
            "name": "AverageCost",
            "type": "Element",
        },
    )
    quantity_on_order: Optional[QuantityOnOrder] = field(
        default=None,
        metadata={
            "name": "QuantityOnOrder",
            "type": "Element",
        },
    )
    quantity_on_sales_order: Optional[QuantityOnSalesOrder] = field(
        default=None,
        metadata={
            "name": "QuantityOnSalesOrder",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    item_inventory_assembly_line: List[ItemInventoryAssemblyLine] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyLine",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    force_uomchange: Optional[ForceUomchange] = field(
        default=None,
        metadata={
            "name": "ForceUOMChange",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    apply_income_account_ref_to_existing_txns: Optional[
        ApplyIncomeAccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyIncomeAccountRefToExistingTxns",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    cogsaccount_ref: Optional[CogsaccountRef] = field(
        default=None,
        metadata={
            "name": "COGSAccountRef",
            "type": "Element",
        },
    )
    apply_cogsaccount_ref_to_existing_txns: Optional[
        ApplyCogsaccountRefToExistingTxns
    ] = field(
        default=None,
        metadata={
            "name": "ApplyCOGSAccountRefToExistingTxns",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    reorder_point: Optional[ReorderPoint] = field(
        default=None,
        metadata={
            "name": "ReorderPoint",
            "type": "Element",
        },
    )
    max: Optional[Max] = field(
        default=None,
        metadata={
            "name": "Max",
            "type": "Element",
        },
    )


@dataclass
class ItemInventoryQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemInventoryQueryRqTypeMetaData = field(
        default=ItemInventoryQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemInventoryQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "SalesDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    sales_price: Optional[SalesPrice] = field(
        default=None,
        metadata={
            "name": "SalesPrice",
            "type": "Element",
        },
    )
    income_account_ref: Optional[IncomeAccountRef] = field(
        default=None,
        metadata={
            "name": "IncomeAccountRef",
            "type": "Element",
        },
    )
    purchase_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "PurchaseDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    purchase_cost: Optional[PurchaseCost] = field(
        default=None,
        metadata={
            "name": "PurchaseCost",
            "type": "Element",
        },
    )
    purchase_tax_code_ref: Optional[PurchaseTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "PurchaseTaxCodeRef",
            "type": "Element",
        },
    )
    cogsaccount_ref: Optional[CogsaccountRef] = field(
        default=None,
        metadata={
            "name": "COGSAccountRef",
            "type": "Element",
        },
    )
    pref_vendor_ref: Optional[PrefVendorRef] = field(
        default=None,
        metadata={
            "name": "PrefVendorRef",
            "type": "Element",
        },
    )
    asset_account_ref: Optional[AssetAccountRef] = field(
        default=None,
        metadata={
            "name": "AssetAccountRef",
            "type": "Element",
        },
    )
    reorder_point: Optional[ReorderPoint] = field(
        default=None,
        metadata={
            "name": "ReorderPoint",
            "type": "Element",
        },
    )
    max: Optional[Max] = field(
        default=None,
        metadata={
            "name": "Max",
            "type": "Element",
        },
    )
    quantity_on_hand: Optional[QuantityOnHand] = field(
        default=None,
        metadata={
            "name": "QuantityOnHand",
            "type": "Element",
        },
    )
    average_cost: Optional[AverageCost] = field(
        default=None,
        metadata={
            "name": "AverageCost",
            "type": "Element",
        },
    )
    quantity_on_order: Optional[QuantityOnOrder] = field(
        default=None,
        metadata={
            "name": "QuantityOnOrder",
            "type": "Element",
        },
    )
    quantity_on_sales_order: Optional[QuantityOnSalesOrder] = field(
        default=None,
        metadata={
            "name": "QuantityOnSalesOrder",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    cost: Optional[Cost] = field(
        default=None,
        metadata={
            "name": "Cost",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    billable_status: Optional[BillableStatus] = field(
        default=None,
        metadata={
            "name": "BillableStatus",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemNonInventoryAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase: Optional[SalesOrPurchase] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchase",
            "type": "Element",
        },
    )
    sales_and_purchase: Optional[SalesAndPurchase] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchase",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemNonInventoryMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    force_uomchange: Optional[ForceUomchange] = field(
        default=None,
        metadata={
            "name": "ForceUOMChange",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase_mod: Optional[SalesOrPurchaseMod] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchaseMod",
            "type": "Element",
        },
    )
    sales_and_purchase_mod: Optional[SalesAndPurchaseMod] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchaseMod",
            "type": "Element",
        },
    )


@dataclass
class ItemNonInventoryQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemNonInventoryQueryRqTypeMetaData = field(
        default=ItemNonInventoryQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemNonInventoryQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemNonInventoryRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase: Optional[SalesOrPurchase] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchase",
            "type": "Element",
        },
    )
    sales_and_purchase: Optional[SalesAndPurchase] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchase",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemOtherChargeAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase: Optional[SalesOrPurchase] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchase",
            "type": "Element",
        },
    )
    sales_and_purchase: Optional[SalesAndPurchase] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchase",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemOtherChargeMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase_mod: Optional[SalesOrPurchaseMod] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchaseMod",
            "type": "Element",
        },
    )
    sales_and_purchase_mod: Optional[SalesAndPurchaseMod] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchaseMod",
            "type": "Element",
        },
    )


@dataclass
class ItemOtherChargeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemOtherChargeQueryRqTypeMetaData = field(
        default=ItemOtherChargeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemOtherChargeQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemOtherChargeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase: Optional[SalesOrPurchase] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchase",
            "type": "Element",
        },
    )
    sales_and_purchase: Optional[SalesAndPurchase] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchase",
            "type": "Element",
        },
    )
    special_item_type: Optional[SpecialItemType] = field(
        default=None,
        metadata={
            "name": "SpecialItemType",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemPaymentAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemPaymentMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )


@dataclass
class ItemPaymentQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemPaymentQueryRqTypeMetaData = field(
        default=ItemPaymentQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemPaymentQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemPaymentRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemQueryRqTypeMetaData = field(
        default=ItemQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptAdd:
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    link_to_txn_id: List[LinkToTxnId] = field(
        default_factory=list,
        metadata={
            "name": "LinkToTxnID",
            "type": "Element",
        },
    )
    expense_line_add: List[ExpenseLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineAdd",
            "type": "Element",
        },
    )
    item_line_add: List[ItemLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineAdd",
            "type": "Element",
        },
    )
    item_group_line_add: List[ItemGroupLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemReceiptQueryRqTypeMetaData = field(
        default=ItemReceiptQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemReceiptQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    tax_rate: Optional[TaxRate] = field(
        default=None,
        metadata={
            "name": "TaxRate",
            "type": "Element",
        },
    )
    tax_vendor_ref: Optional[TaxVendorRef] = field(
        default=None,
        metadata={
            "name": "TaxVendorRef",
            "type": "Element",
        },
    )
    sales_tax_return_line_ref: Optional[SalesTaxReturnLineRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxReturnLineRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemSalesTaxGroupAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    item_sales_tax_ref: List[ItemSalesTaxRef] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class ItemSalesTaxGroupMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    item_sales_tax_ref: List[ItemSalesTaxRef] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )


@dataclass
class ItemSalesTaxGroupQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemSalesTaxGroupQueryRqTypeMetaData = field(
        default=ItemSalesTaxGroupQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemSalesTaxGroupQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxGroupRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    item_sales_tax_ref: List[ItemSalesTaxRef] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemSalesTaxMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    tax_rate: Optional[TaxRate] = field(
        default=None,
        metadata={
            "name": "TaxRate",
            "type": "Element",
        },
    )
    tax_vendor_ref: Optional[TaxVendorRef] = field(
        default=None,
        metadata={
            "name": "TaxVendorRef",
            "type": "Element",
        },
    )
    sales_tax_return_line_ref: Optional[SalesTaxReturnLineRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxReturnLineRef",
            "type": "Element",
        },
    )


@dataclass
class ItemSalesTaxQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemSalesTaxQueryRqTypeMetaData = field(
        default=ItemSalesTaxQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemSalesTaxQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    tax_rate: Optional[TaxRate] = field(
        default=None,
        metadata={
            "name": "TaxRate",
            "type": "Element",
        },
    )
    tax_vendor_ref: Optional[TaxVendorRef] = field(
        default=None,
        metadata={
            "name": "TaxVendorRef",
            "type": "Element",
        },
    )
    sales_tax_return_line_ref: Optional[SalesTaxReturnLineRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxReturnLineRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemServiceAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase: Optional[SalesOrPurchase] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchase",
            "type": "Element",
        },
    )
    sales_and_purchase: Optional[SalesAndPurchase] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchase",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemServiceMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    force_uomchange: Optional[ForceUomchange] = field(
        default=None,
        metadata={
            "name": "ForceUOMChange",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase_mod: Optional[SalesOrPurchaseMod] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchaseMod",
            "type": "Element",
        },
    )
    sales_and_purchase_mod: Optional[SalesAndPurchaseMod] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchaseMod",
            "type": "Element",
        },
    )


@dataclass
class ItemServiceQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemServiceQueryRqTypeMetaData = field(
        default=ItemServiceQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemServiceQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemServiceRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 159,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    parent_ref: Optional[ParentRef] = field(
        default=None,
        metadata={
            "name": "ParentRef",
            "type": "Element",
        },
    )
    sublevel: Optional[Sublevel] = field(
        default=None,
        metadata={
            "name": "Sublevel",
            "type": "Element",
        },
    )
    unit_of_measure_set_ref: Optional[UnitOfMeasureSetRef] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRef",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_or_purchase: Optional[SalesOrPurchase] = field(
        default=None,
        metadata={
            "name": "SalesOrPurchase",
            "type": "Element",
        },
    )
    sales_and_purchase: Optional[SalesAndPurchase] = field(
        default=None,
        metadata={
            "name": "SalesAndPurchase",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemSitesQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    item_type_filter: Optional[ItemTypeFilter] = field(
        default=None,
        metadata={
            "name": "ItemTypeFilter",
            "type": "Element",
        },
    )
    item_site_filter: Optional[ItemSiteFilter] = field(
        default=None,
        metadata={
            "name": "ItemSiteFilter",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    include_ret_element: List[IncludeRetElement] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemSitesQueryRqTypeMetaData = field(
        default=ItemSitesQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemSitesQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSitesQueryRsType:
    item_sites_ret: List[ItemSitesRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSitesRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class ItemSubtotalMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
            "max_length": 4095,
        },
    )


@dataclass
class ItemSubtotalQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ItemSubtotalQueryRqTypeMetaData = field(
        default=ItemSubtotalQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ItemSubtotalQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    bar_code_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "BarCodeValue",
            "type": "Element",
            "max_length": 50,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    item_desc: Optional[ItemDesc] = field(
        default=None,
        metadata={
            "name": "ItemDesc",
            "type": "Element",
        },
    )
    special_item_type: Optional[SpecialItemType] = field(
        default=None,
        metadata={
            "name": "SpecialItemType",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class JobReportQueryRqType:
    job_report_type: Optional[JobReportType] = field(
        default=None,
        metadata={
            "name": "JobReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_txn_type_filter: Optional[ReportTxnTypeFilter] = field(
        default=None,
        metadata={
            "name": "ReportTxnTypeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_columns_by: Optional[SummarizeColumnsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeColumnsBy",
            "type": "Element",
        },
    )
    include_subcolumns: Optional[IncludeSubcolumns] = field(
        default=None,
        metadata={
            "name": "IncludeSubcolumns",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class JobTypeAddRqType:
    job_type_add: Optional[JobTypeAdd] = field(
        default=None,
        metadata={
            "name": "JobTypeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class JobTypeAddRsType:
    job_type_ret: Optional[JobTypeRet] = field(
        default=None,
        metadata={
            "name": "JobTypeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class JobTypeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: JobTypeQueryRqTypeMetaData = field(
        default=JobTypeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class JobTypeQueryRsType:
    job_type_ret: List[JobTypeRet] = field(
        default_factory=list,
        metadata={
            "name": "JobTypeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryAdd:
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[Memo] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
        },
    )
    is_adjustment: Optional[IsAdjustment] = field(
        default=None,
        metadata={
            "name": "IsAdjustment",
            "type": "Element",
        },
    )
    is_home_currency_adjustment: Optional[IsHomeCurrencyAdjustment] = field(
        default=None,
        metadata={
            "name": "IsHomeCurrencyAdjustment",
            "type": "Element",
        },
    )
    is_amounts_entered_in_home_currency: Optional[
        IsAmountsEnteredInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "IsAmountsEnteredInHomeCurrency",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    journal_debit_line: List[JournalDebitLine] = field(
        default_factory=list,
        metadata={
            "name": "JournalDebitLine",
            "type": "Element",
        },
    )
    journal_credit_line: List[JournalCreditLine] = field(
        default_factory=list,
        metadata={
            "name": "JournalCreditLine",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    is_adjustment: Optional[IsAdjustment] = field(
        default=None,
        metadata={
            "name": "IsAdjustment",
            "type": "Element",
        },
    )
    is_amounts_entered_in_home_currency: Optional[
        IsAmountsEnteredInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "IsAmountsEnteredInHomeCurrency",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    journal_line_mod: List[JournalLineMod] = field(
        default_factory=list,
        metadata={
            "name": "JournalLineMod",
            "type": "Element",
        },
    )


@dataclass
class JournalEntryQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: JournalEntryQueryRqTypeMetaData = field(
        default=JournalEntryQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[JournalEntryQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[Memo] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
        },
    )
    is_adjustment: Optional[IsAdjustment] = field(
        default=None,
        metadata={
            "name": "IsAdjustment",
            "type": "Element",
        },
    )
    is_home_currency_adjustment: Optional[IsHomeCurrencyAdjustment] = field(
        default=None,
        metadata={
            "name": "IsHomeCurrencyAdjustment",
            "type": "Element",
        },
    )
    is_amounts_entered_in_home_currency: Optional[
        IsAmountsEnteredInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "IsAmountsEnteredInHomeCurrency",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    journal_debit_line: List[JournalDebitLine] = field(
        default_factory=list,
        metadata={
            "name": "JournalDebitLine",
            "type": "Element",
        },
    )
    journal_credit_line: List[JournalCreditLine] = field(
        default_factory=list,
        metadata={
            "name": "JournalCreditLine",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class LeadAdd:
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    status: Optional[Status] = field(
        default=None,
        metadata={
            "name": "Status",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    main_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "MainPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 3,
        },
    )
    locations: List[Locations] = field(
        default_factory=list,
        metadata={
            "name": "Locations",
            "type": "Element",
        },
    )
    lead_contacts: List[LeadContacts] = field(
        default_factory=list,
        metadata={
            "name": "LeadContacts",
            "type": "Element",
        },
    )


@dataclass
class LeadMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "required": True,
            "max_length": 41,
        },
    )
    status: Optional[Status] = field(
        default=None,
        metadata={
            "name": "Status",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    main_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "MainPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 3,
        },
    )
    locations_mod: List[LocationsMod] = field(
        default_factory=list,
        metadata={
            "name": "LocationsMod",
            "type": "Element",
        },
    )
    lead_contacts_mod: List[LeadContactsMod] = field(
        default_factory=list,
        metadata={
            "name": "LeadContactsMod",
            "type": "Element",
        },
    )


@dataclass
class LeadQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    name: List[Name] = field(
        default_factory=list,
        metadata={
            "name": "Name",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: LeadQueryRqTypeMetaData = field(
        default=LeadQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[LeadQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class LeadRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    full_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FullName",
            "type": "Element",
            "max_length": 41,
        },
    )
    status: Optional[Status] = field(
        default=None,
        metadata={
            "name": "Status",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    main_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "MainPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 3,
        },
    )
    locations_ret: List[LocationsRet] = field(
        default_factory=list,
        metadata={
            "name": "LocationsRet",
            "type": "Element",
        },
    )
    lead_contacts_ret: List[LeadContactsRet] = field(
        default_factory=list,
        metadata={
            "name": "LeadContactsRet",
            "type": "Element",
        },
    )


@dataclass
class ListDeletedQueryRqType:
    list_del_type: List[ListDelType] = field(
        default_factory=list,
        metadata={
            "name": "ListDelType",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    deleted_date_range_filter: Optional[DeletedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "DeletedDateRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ListDeletedQueryRqTypeMetaData = field(
        default=ListDeletedQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class ListDeletedQueryRsType:
    list_deleted_ret: List[ListDeletedRet] = field(
        default_factory=list,
        metadata={
            "name": "ListDeletedRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class ListMergeRsType:
    list_merge_type: Optional[ListMergeType] = field(
        default=None,
        metadata={
            "name": "ListMergeType",
            "type": "Element",
        },
    )
    merged_from: Optional[MergedFrom] = field(
        default=None,
        metadata={
            "name": "MergedFrom",
            "type": "Element",
        },
    )
    merged_to: Optional[MergedTo] = field(
        default=None,
        metadata={
            "name": "MergedTo",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class MenuItem:
    menu_text: Optional[str] = field(
        default=None,
        metadata={
            "name": "MenuText",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    event_tag: Optional[str] = field(
        default=None,
        metadata={
            "name": "EventTag",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    display_condition: Optional[DisplayCondition] = field(
        default=None,
        metadata={
            "name": "DisplayCondition",
            "type": "Element",
        },
    )


@dataclass
class OtherNameAddRqType:
    other_name_add: Optional[OtherNameAdd] = field(
        default=None,
        metadata={
            "name": "OtherNameAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class OtherNameModRqType:
    other_name_mod: Optional[OtherNameMod] = field(
        default=None,
        metadata={
            "name": "OtherNameMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class OtherNameQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: OtherNameQueryRqTypeMetaData = field(
        default=OtherNameQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class OtherNameRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    other_name_address: Optional[OtherNameAddress] = field(
        default=None,
        metadata={
            "name": "OtherNameAddress",
            "type": "Element",
        },
    )
    other_name_address_block: Optional[OtherNameAddressBlock] = field(
        default=None,
        metadata={
            "name": "OtherNameAddressBlock",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class PaymentMethodAddRqType:
    payment_method_add: Optional[PaymentMethodAdd] = field(
        default=None,
        metadata={
            "name": "PaymentMethodAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PaymentMethodAddRsType:
    payment_method_ret: Optional[PaymentMethodRet] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PaymentMethodQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    payment_method_type: List[PaymentMethodType] = field(
        default_factory=list,
        metadata={
            "name": "PaymentMethodType",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: PaymentMethodQueryRqTypeMetaData = field(
        default=PaymentMethodQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class PaymentMethodQueryRsType:
    payment_method_ret: List[PaymentMethodRet] = field(
        default_factory=list,
        metadata={
            "name": "PaymentMethodRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollDetailReportQueryRqType:
    payroll_detail_report_type: Optional[PayrollDetailReportType] = field(
        default=None,
        metadata={
            "name": "PayrollDetailReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_rows_by: Optional[SummarizeRowsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeRowsBy",
            "type": "Element",
        },
    )
    include_column: List[IncludeColumn] = field(
        default_factory=list,
        metadata={
            "name": "IncludeColumn",
            "type": "Element",
        },
    )
    include_accounts: Optional[IncludeAccounts] = field(
        default=None,
        metadata={
            "name": "IncludeAccounts",
            "type": "Element",
        },
    )
    report_open_balance_as_of: Optional[ReportOpenBalanceAsOf] = field(
        default=None,
        metadata={
            "name": "ReportOpenBalanceAsOf",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollItemNonWageQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: PayrollItemNonWageQueryRqTypeMetaData = field(
        default=PayrollItemNonWageQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollItemNonWageQueryRsType:
    payroll_item_non_wage_ret: List[PayrollItemNonWageRet] = field(
        default_factory=list,
        metadata={
            "name": "PayrollItemNonWageRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollItemWageAddRqType:
    payroll_item_wage_add: Optional[PayrollItemWageAdd] = field(
        default=None,
        metadata={
            "name": "PayrollItemWageAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollItemWageAddRsType:
    payroll_item_wage_ret: Optional[PayrollItemWageRet] = field(
        default=None,
        metadata={
            "name": "PayrollItemWageRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollItemWageQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: PayrollItemWageQueryRqTypeMetaData = field(
        default=PayrollItemWageQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollItemWageQueryRsType:
    payroll_item_wage_ret: List[PayrollItemWageRet] = field(
        default_factory=list,
        metadata={
            "name": "PayrollItemWageRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollLastPeriodQueryRsType:
    payroll_last_period_ret: Optional[PayrollLastPeriodRet] = field(
        default=None,
        metadata={
            "name": "PayrollLastPeriodRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollSummaryReportQueryRqType:
    payroll_summary_report_type: Optional[PayrollSummaryReportType] = field(
        default=None,
        metadata={
            "name": "PayrollSummaryReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_account_filter: Optional[ReportAccountFilter] = field(
        default=None,
        metadata={
            "name": "ReportAccountFilter",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_filter: Optional[
        ReportModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    report_modified_date_range_macro: Optional[
        ReportModifiedDateRangeMacro
    ] = field(
        default=None,
        metadata={
            "name": "ReportModifiedDateRangeMacro",
            "type": "Element",
        },
    )
    report_detail_level_filter: Optional[ReportDetailLevelFilter] = field(
        default=None,
        metadata={
            "name": "ReportDetailLevelFilter",
            "type": "Element",
        },
    )
    report_posting_status_filter: Optional[ReportPostingStatusFilter] = field(
        default=None,
        metadata={
            "name": "ReportPostingStatusFilter",
            "type": "Element",
        },
    )
    summarize_columns_by: Optional[SummarizeColumnsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeColumnsBy",
            "type": "Element",
        },
    )
    include_subcolumns: Optional[IncludeSubcolumns] = field(
        default=None,
        metadata={
            "name": "IncludeSubcolumns",
            "type": "Element",
        },
    )
    report_calendar: Optional[ReportCalendar] = field(
        default=None,
        metadata={
            "name": "ReportCalendar",
            "type": "Element",
        },
    )
    return_rows: Optional[ReturnRows] = field(
        default=None,
        metadata={
            "name": "ReturnRows",
            "type": "Element",
        },
    )
    return_columns: Optional[ReturnColumns] = field(
        default=None,
        metadata={
            "name": "ReturnColumns",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PriceLevelAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    price_level_fixed_percentage: Optional[PriceLevelFixedPercentage] = field(
        default=None,
        metadata={
            "name": "PriceLevelFixedPercentage",
            "type": "Element",
        },
    )
    price_level_per_item: List[PriceLevelPerItem] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelPerItem",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class PriceLevelMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    price_level_fixed_percentage: Optional[PriceLevelFixedPercentage] = field(
        default=None,
        metadata={
            "name": "PriceLevelFixedPercentage",
            "type": "Element",
        },
    )
    price_level_per_item: List[PriceLevelPerItem] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelPerItem",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class PriceLevelQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: PriceLevelQueryRqTypeMetaData = field(
        default=PriceLevelQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class PriceLevelRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    price_level_type: Optional[PriceLevelType] = field(
        default=None,
        metadata={
            "name": "PriceLevelType",
            "type": "Element",
        },
    )
    price_level_fixed_percentage: Optional[PriceLevelFixedPercentage] = field(
        default=None,
        metadata={
            "name": "PriceLevelFixedPercentage",
            "type": "Element",
        },
    )
    price_level_per_item_ret: List[PriceLevelPerItemRet] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelPerItemRet",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )


@dataclass
class PurchaseOrderAdd:
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    ship_to_entity_ref: Optional[ShipToEntityRef] = field(
        default=None,
        metadata={
            "name": "ShipToEntityRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    expected_date: Optional[ExpectedDate] = field(
        default=None,
        metadata={
            "name": "ExpectedDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    vendor_msg: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorMsg",
            "type": "Element",
            "max_length": 99,
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 25,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    purchase_order_line_add: List[PurchaseOrderLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineAdd",
            "type": "Element",
        },
    )
    purchase_order_line_group_add: List[PurchaseOrderLineGroupAdd] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineGroupAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderLineGroupMod:
    txn_line_id: Optional[PurchaseOrderLineGroupModTxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    purchase_order_line_mod: List[PurchaseOrderLineMod] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineMod",
            "type": "Element",
        },
    )


@dataclass
class PurchaseOrderLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    manufacturer_part_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ManufacturerPartNumber",
            "type": "Element",
            "max_length": 31,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    received_quantity: Optional[ReceivedQuantity] = field(
        default=None,
        metadata={
            "name": "ReceivedQuantity",
            "type": "Element",
        },
    )
    unbilled_quantity: Optional[UnbilledQuantity] = field(
        default=None,
        metadata={
            "name": "UnbilledQuantity",
            "type": "Element",
        },
    )
    is_billed: Optional[IsBilled] = field(
        default=None,
        metadata={
            "name": "IsBilled",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class PurchaseOrderQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: PurchaseOrderQueryRqTypeMetaData = field(
        default=PurchaseOrderQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[PurchaseOrderQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ReceivePaymentQueryRqTypeMetaData = field(
        default=ReceivePaymentQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[ReceivePaymentQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentToDepositQueryRsType:
    receive_payment_to_deposit_ret: List[ReceivePaymentToDepositRet] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentToDepositRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class ReportData:
    data_row: List[DataRow] = field(
        default_factory=list,
        metadata={
            "name": "DataRow",
            "type": "Element",
        },
    )
    text_row: List[TextRow] = field(
        default_factory=list,
        metadata={
            "name": "TextRow",
            "type": "Element",
        },
    )
    subtotal_row: List[SubtotalRow] = field(
        default_factory=list,
        metadata={
            "name": "SubtotalRow",
            "type": "Element",
        },
    )
    total_row: List[TotalRow] = field(
        default_factory=list,
        metadata={
            "name": "TotalRow",
            "type": "Element",
        },
    )


@dataclass
class SalesAndCustomersPreferences:
    default_ship_method_ref: Optional[DefaultShipMethodRef] = field(
        default=None,
        metadata={
            "name": "DefaultShipMethodRef",
            "type": "Element",
        },
    )
    default_fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "DefaultFOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    default_markup: Optional[DefaultMarkup] = field(
        default=None,
        metadata={
            "name": "DefaultMarkup",
            "type": "Element",
        },
    )
    is_tracking_reimbursed_expenses_as_income: Optional[
        IsTrackingReimbursedExpensesAsIncome
    ] = field(
        default=None,
        metadata={
            "name": "IsTrackingReimbursedExpensesAsIncome",
            "type": "Element",
            "required": True,
        },
    )
    is_auto_applying_payments: Optional[IsAutoApplyingPayments] = field(
        default=None,
        metadata={
            "name": "IsAutoApplyingPayments",
            "type": "Element",
            "required": True,
        },
    )
    price_levels: Optional[PriceLevels] = field(
        default=None,
        metadata={
            "name": "PriceLevels",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_order_line_add: List[SalesOrderLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineAdd",
            "type": "Element",
        },
    )
    sales_order_line_group_add: List[SalesOrderLineGroupAdd] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineGroupAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderLineGroupMod:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    sales_order_line_mod: List[SalesOrderLineMod] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineMod",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    invoiced: Optional[Invoiced] = field(
        default=None,
        metadata={
            "name": "Invoiced",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesOrderQueryRqTypeMetaData = field(
        default=SalesOrderQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[SalesOrderQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptLineGroupMod:
    txn_line_id: Optional[SalesReceiptLineGroupModTxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    sales_receipt_line_mod: List[SalesReceiptLineMod] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineMod",
            "type": "Element",
        },
    )


@dataclass
class SalesReceiptQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesReceiptQueryRqTypeMetaData = field(
        default=SalesReceiptQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[SalesReceiptQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesRepAddRqType:
    sales_rep_add: Optional[SalesRepAdd] = field(
        default=None,
        metadata={
            "name": "SalesRepAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesRepAddRsType:
    sales_rep_ret: Optional[SalesRepRet] = field(
        default=None,
        metadata={
            "name": "SalesRepRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesRepModRqType:
    sales_rep_mod: Optional[SalesRepMod] = field(
        default=None,
        metadata={
            "name": "SalesRepMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesRepModRsType:
    sales_rep_ret: Optional[SalesRepRet] = field(
        default=None,
        metadata={
            "name": "SalesRepRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesRepQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesRepQueryRqTypeMetaData = field(
        default=SalesRepQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class SalesRepQueryRsType:
    sales_rep_ret: List[SalesRepRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxCodeAddRqType:
    sales_tax_code_add: Optional[SalesTaxCodeAdd] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxCodeAddRsType:
    sales_tax_code_ret: Optional[SalesTaxCodeRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxCodeModRqType:
    sales_tax_code_mod: Optional[SalesTaxCodeMod] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxCodeModRsType:
    sales_tax_code_ret: Optional[SalesTaxCodeRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxCodeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesTaxCodeQueryRqTypeMetaData = field(
        default=SalesTaxCodeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxCodeQueryRsType:
    sales_tax_code_ret: List[SalesTaxCodeRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPayableRet:
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    sales_tax_payable_line_ret: List[SalesTaxPayableLineRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxPayableLineRet",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxPaymentCheckAdd:
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
            "required": True,
        },
    )
    bank_account_ref: Optional[BankAccountRef] = field(
        default=None,
        metadata={
            "name": "BankAccountRef",
            "type": "Element",
            "required": True,
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    ref_number: Optional[RefNumber] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_tax_payment_check_line_add: List[SalesTaxPaymentCheckLineAdd] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckLineAdd",
                "type": "Element",
                "min_occurs": 1,
            },
        )
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckModRqType:
    sales_tax_payment_check_mod: Optional[SalesTaxPaymentCheckMod] = field(
        default=None,
        metadata={
            "name": "SalesTaxPaymentCheckMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    item_filter: Optional[ItemFilter] = field(
        default=None,
        metadata={
            "name": "ItemFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: SalesTaxPaymentCheckQueryRqTypeMetaData = field(
        default=SalesTaxPaymentCheckQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[SalesTaxPaymentCheckQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    bank_account_ref: Optional[BankAccountRef] = field(
        default=None,
        metadata={
            "name": "BankAccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    address_block: Optional[AddressBlock] = field(
        default=None,
        metadata={
            "name": "AddressBlock",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_tax_payment_check_line_ret: List[SalesTaxPaymentCheckLineRet] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckLineRet",
                "type": "Element",
            },
        )
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxReturnLineQueryRsType:
    sales_tax_return_line_ret: List[SalesTaxReturnLineRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxReturnLineRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class ShipMethodAddRqType:
    ship_method_add: Optional[ShipMethodAdd] = field(
        default=None,
        metadata={
            "name": "ShipMethodAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ShipMethodAddRsType:
    ship_method_ret: Optional[ShipMethodRet] = field(
        default=None,
        metadata={
            "name": "ShipMethodRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ShipMethodQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ShipMethodQueryRqTypeMetaData = field(
        default=ShipMethodQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class ShipMethodQueryRsType:
    ship_method_ret: List[ShipMethodRet] = field(
        default_factory=list,
        metadata={
            "name": "ShipMethodRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class SignonMsgsRq:
    signon_app_cert_rq: List[SignonAppCertRqType] = field(
        default_factory=list,
        metadata={
            "name": "SignonAppCertRq",
            "type": "Element",
        },
    )
    signon_desktop_rq: List[SignonDesktopRqType] = field(
        default_factory=list,
        metadata={
            "name": "SignonDesktopRq",
            "type": "Element",
        },
    )
    signon_ticket_rq: List[SignonTicketRqType] = field(
        default_factory=list,
        metadata={
            "name": "SignonTicketRq",
            "type": "Element",
        },
    )


@dataclass
class SignonMsgsRs:
    signon_app_cert_rs: List[SignonAppCertRsType] = field(
        default_factory=list,
        metadata={
            "name": "SignonAppCertRs",
            "type": "Element",
        },
    )
    signon_desktop_rs: List[SignonDesktopRsType] = field(
        default_factory=list,
        metadata={
            "name": "SignonDesktopRs",
            "type": "Element",
        },
    )
    signon_ticket_rs: List[SignonTicketRsType] = field(
        default_factory=list,
        metadata={
            "name": "SignonTicketRs",
            "type": "Element",
        },
    )


@dataclass
class SpecialAccountAddRqType:
    special_account_add: Optional[SpecialAccountAdd] = field(
        default=None,
        metadata={
            "name": "SpecialAccountAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SpecialItemAdd:
    special_item_type: Optional[SpecialItemType] = field(
        default=None,
        metadata={
            "name": "SpecialItemType",
            "type": "Element",
            "required": True,
        },
    )
    bar_code: Optional[BarCode] = field(
        default=None,
        metadata={
            "name": "BarCode",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class StandardTermsAddRqType:
    standard_terms_add: Optional[StandardTermsAdd] = field(
        default=None,
        metadata={
            "name": "StandardTermsAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class StandardTermsAddRsType:
    standard_terms_ret: Optional[StandardTermsRet] = field(
        default=None,
        metadata={
            "name": "StandardTermsRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class StandardTermsQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: StandardTermsQueryRqTypeMetaData = field(
        default=StandardTermsQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class StandardTermsQueryRsType:
    standard_terms_ret: List[StandardTermsRet] = field(
        default_factory=list,
        metadata={
            "name": "StandardTermsRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class SubscribedServices:
    service: List[Service] = field(
        default_factory=list,
        metadata={
            "name": "Service",
            "type": "Element",
        },
    )


@dataclass
class TemplateQueryRsType:
    template_ret: List[TemplateRet] = field(
        default_factory=list,
        metadata={
            "name": "TemplateRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class TermsQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TermsQueryRqTypeMetaData = field(
        default=TermsQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class TermsQueryRsType:
    standard_terms_ret: List[StandardTermsRet] = field(
        default_factory=list,
        metadata={
            "name": "StandardTermsRet",
            "type": "Element",
        },
    )
    date_driven_terms_ret: List[DateDrivenTermsRet] = field(
        default_factory=list,
        metadata={
            "name": "DateDrivenTermsRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class TimeReportQueryRqType:
    time_report_type: Optional[TimeReportType] = field(
        default=None,
        metadata={
            "name": "TimeReportType",
            "type": "Element",
            "required": True,
        },
    )
    display_report: Optional[DisplayReport] = field(
        default=None,
        metadata={
            "name": "DisplayReport",
            "type": "Element",
        },
    )
    report_period: Optional[ReportPeriod] = field(
        default=None,
        metadata={
            "name": "ReportPeriod",
            "type": "Element",
        },
    )
    report_date_macro: Optional[ReportDateMacro] = field(
        default=None,
        metadata={
            "name": "ReportDateMacro",
            "type": "Element",
        },
    )
    report_entity_filter: Optional[ReportEntityFilter] = field(
        default=None,
        metadata={
            "name": "ReportEntityFilter",
            "type": "Element",
        },
    )
    report_item_filter: Optional[ReportItemFilter] = field(
        default=None,
        metadata={
            "name": "ReportItemFilter",
            "type": "Element",
        },
    )
    report_class_filter: Optional[ReportClassFilter] = field(
        default=None,
        metadata={
            "name": "ReportClassFilter",
            "type": "Element",
        },
    )
    summarize_columns_by: Optional[SummarizeColumnsBy] = field(
        default=None,
        metadata={
            "name": "SummarizeColumnsBy",
            "type": "Element",
        },
    )
    include_column: List[IncludeColumn] = field(
        default_factory=list,
        metadata={
            "name": "IncludeColumn",
            "type": "Element",
        },
    )
    include_subcolumns: Optional[IncludeSubcolumns] = field(
        default=None,
        metadata={
            "name": "IncludeSubcolumns",
            "type": "Element",
        },
    )
    report_calendar: Optional[ReportCalendar] = field(
        default=None,
        metadata={
            "name": "ReportCalendar",
            "type": "Element",
        },
    )
    return_rows: Optional[ReturnRows] = field(
        default=None,
        metadata={
            "name": "ReturnRows",
            "type": "Element",
        },
    )
    return_columns: Optional[ReturnColumns] = field(
        default=None,
        metadata={
            "name": "ReturnColumns",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingAddRqType:
    time_tracking_add: Optional[TimeTrackingAdd] = field(
        default=None,
        metadata={
            "name": "TimeTrackingAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingAddRsType:
    time_tracking_ret: Optional[TimeTrackingRet] = field(
        default=None,
        metadata={
            "name": "TimeTrackingRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingModRqType:
    time_tracking_mod: Optional[TimeTrackingMod] = field(
        default=None,
        metadata={
            "name": "TimeTrackingMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingModRsType:
    time_tracking_ret: Optional[TimeTrackingRet] = field(
        default=None,
        metadata={
            "name": "TimeTrackingRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    time_tracking_entity_filter: Optional[TimeTrackingEntityFilter] = field(
        default=None,
        metadata={
            "name": "TimeTrackingEntityFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TimeTrackingQueryRqTypeMetaData = field(
        default=TimeTrackingQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[TimeTrackingQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class TimeTrackingQueryRsType:
    time_tracking_ret: List[TimeTrackingRet] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ToDoAddRqType:
    to_do_add: Optional[ToDoAdd] = field(
        default=None,
        metadata={
            "name": "ToDoAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ToDoAddRsType:
    to_do_ret: Optional[ToDoRet] = field(
        default=None,
        metadata={
            "name": "ToDoRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ToDoModRqType:
    to_do_mod: Optional[ToDoMod] = field(
        default=None,
        metadata={
            "name": "ToDoMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ToDoModRsType:
    to_do_ret: Optional[ToDoRet] = field(
        default=None,
        metadata={
            "name": "ToDoRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ToDoQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    done_status: Optional[DoneStatus] = field(
        default=None,
        metadata={
            "name": "DoneStatus",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: ToDoQueryRqTypeMetaData = field(
        default=ToDoQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class ToDoQueryRsType:
    to_do_ret: List[ToDoRet] = field(
        default_factory=list,
        metadata={
            "name": "ToDoRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class TransactionQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    transaction_modified_date_range_filter: Optional[
        TransactionModifiedDateRangeFilter
    ] = field(
        default=None,
        metadata={
            "name": "TransactionModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    transaction_date_range_filter: Optional[TransactionDateRangeFilter] = (
        field(
            default=None,
            metadata={
                "name": "TransactionDateRangeFilter",
                "type": "Element",
            },
        )
    )
    transaction_entity_filter: Optional[TransactionEntityFilter] = field(
        default=None,
        metadata={
            "name": "TransactionEntityFilter",
            "type": "Element",
        },
    )
    transaction_account_filter: Optional[TransactionAccountFilter] = field(
        default=None,
        metadata={
            "name": "TransactionAccountFilter",
            "type": "Element",
        },
    )
    transaction_item_filter: Optional[TransactionItemFilter] = field(
        default=None,
        metadata={
            "name": "TransactionItemFilter",
            "type": "Element",
        },
    )
    transaction_class_filter: Optional[TransactionClassFilter] = field(
        default=None,
        metadata={
            "name": "TransactionClassFilter",
            "type": "Element",
        },
    )
    transaction_type_filter: Optional[TransactionTypeFilter] = field(
        default=None,
        metadata={
            "name": "TransactionTypeFilter",
            "type": "Element",
        },
    )
    transaction_detail_level_filter: Optional[TransactionDetailLevelFilter] = (
        field(
            default=None,
            metadata={
                "name": "TransactionDetailLevelFilter",
                "type": "Element",
            },
        )
    )
    transaction_posting_status_filter: Optional[
        TransactionPostingStatusFilter
    ] = field(
        default=None,
        metadata={
            "name": "TransactionPostingStatusFilter",
            "type": "Element",
        },
    )
    transaction_paid_status_filter: Optional[TransactionPaidStatusFilter] = (
        field(
            default=None,
            metadata={
                "name": "TransactionPaidStatusFilter",
                "type": "Element",
            },
        )
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TransactionQueryRqTypeMetaData = field(
        default=TransactionQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[TransactionQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class TransactionQueryRsType:
    transaction_ret: List[TransactionRet] = field(
        default_factory=list,
        metadata={
            "name": "TransactionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferAddRqType:
    transfer_add: Optional[TransferAdd] = field(
        default=None,
        metadata={
            "name": "TransferAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferAddRsType:
    transfer_ret: Optional[TransferRet] = field(
        default=None,
        metadata={
            "name": "TransferRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryAdd:
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    from_inventory_site_ref: Optional[FromInventorySiteRef] = field(
        default=None,
        metadata={
            "name": "FromInventorySiteRef",
            "type": "Element",
            "required": True,
        },
    )
    to_inventory_site_ref: Optional[ToInventorySiteRef] = field(
        default=None,
        metadata={
            "name": "ToInventorySiteRef",
            "type": "Element",
            "required": True,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    transfer_inventory_line_add: List[TransferInventoryLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    from_inventory_site_ref: Optional[FromInventorySiteRef] = field(
        default=None,
        metadata={
            "name": "FromInventorySiteRef",
            "type": "Element",
        },
    )
    to_inventory_site_ref: Optional[ToInventorySiteRef] = field(
        default=None,
        metadata={
            "name": "ToInventorySiteRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    transfer_inventory_line_mod: List[TransferInventoryLineMod] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryLineMod",
            "type": "Element",
        },
    )


@dataclass
class TransferInventoryQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    site_filter: Optional[SiteFilter] = field(
        default=None,
        metadata={
            "name": "SiteFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_ret_element: List[IncludeRetElement] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TransferInventoryQueryRqTypeMetaData = field(
        default=TransferInventoryQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[TransferInventoryQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    from_inventory_site_ref: Optional[FromInventorySiteRef] = field(
        default=None,
        metadata={
            "name": "FromInventorySiteRef",
            "type": "Element",
        },
    )
    to_inventory_site_ref: Optional[ToInventorySiteRef] = field(
        default=None,
        metadata={
            "name": "ToInventorySiteRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    transfer_inventory_line_ret: List[TransferInventoryLineRet] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryLineRet",
            "type": "Element",
        },
    )


@dataclass
class TransferModRqType:
    transfer_mod: Optional[TransferMod] = field(
        default=None,
        metadata={
            "name": "TransferMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferModRsType:
    transfer_ret: Optional[TransferRet] = field(
        default=None,
        metadata={
            "name": "TransferRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TransferQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TransferQueryRqTypeMetaData = field(
        default=TransferQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[TransferQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferQueryRsType:
    transfer_ret: List[TransferRet] = field(
        default_factory=list,
        metadata={
            "name": "TransferRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class TxnDeletedQueryRqType:
    txn_del_type: List[TxnDelType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDelType",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    deleted_date_range_filter: Optional[DeletedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "DeletedDateRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: TxnDeletedQueryRqTypeMetaData = field(
        default=TxnDeletedQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class TxnDeletedQueryRsType:
    txn_deleted_ret: List[TxnDeletedRet] = field(
        default_factory=list,
        metadata={
            "name": "TxnDeletedRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class Uievent:
    class Meta:
        name = "UIEvent"

    company_file_path: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyFilePath",
            "type": "Element",
            "required": True,
            "max_length": 260,
        },
    )
    host_info: Optional[HostInfo] = field(
        default=None,
        metadata={
            "name": "HostInfo",
            "type": "Element",
            "required": True,
        },
    )
    company_file_event: Optional[CompanyFileEvent] = field(
        default=None,
        metadata={
            "name": "CompanyFileEvent",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class UieventSubscriptionAdd:
    class Meta:
        name = "UIEventSubscriptionAdd"

    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    comcallback_info: Optional[ComcallbackInfo] = field(
        default=None,
        metadata={
            "name": "COMCallbackInfo",
            "type": "Element",
            "required": True,
        },
    )
    delivery_policy: Optional[DeliveryPolicy] = field(
        default=None,
        metadata={
            "name": "DeliveryPolicy",
            "type": "Element",
            "required": True,
        },
    )
    company_file_event_subscription: Optional[CompanyFileEventSubscription] = (
        field(
            default=None,
            metadata={
                "name": "CompanyFileEventSubscription",
                "type": "Element",
                "required": True,
            },
        )
    )


@dataclass
class UieventSubscriptionRet:
    class Meta:
        name = "UIEventSubscriptionRet"

    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
            "required": True,
        },
    )
    time_last_processed: Optional[TimeLastProcessed] = field(
        default=None,
        metadata={
            "name": "TimeLastProcessed",
            "type": "Element",
        },
    )
    comcallback_info: Optional[ComcallbackInfo] = field(
        default=None,
        metadata={
            "name": "COMCallbackInfo",
            "type": "Element",
            "required": True,
        },
    )
    delivery_policy: Optional[DeliveryPolicy] = field(
        default=None,
        metadata={
            "name": "DeliveryPolicy",
            "type": "Element",
            "required": True,
        },
    )
    company_file_event_subscription: Optional[CompanyFileEventSubscription] = (
        field(
            default=None,
            metadata={
                "name": "CompanyFileEventSubscription",
                "type": "Element",
                "required": True,
            },
        )
    )


@dataclass
class UiextensionEvent:
    class Meta:
        name = "UIExtensionEvent"

    company_file_path: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyFilePath",
            "type": "Element",
            "required": True,
            "max_length": 260,
        },
    )
    host_info: Optional[HostInfo] = field(
        default=None,
        metadata={
            "name": "HostInfo",
            "type": "Element",
            "required": True,
        },
    )
    event_tag: Optional[str] = field(
        default=None,
        metadata={
            "name": "EventTag",
            "type": "Element",
            "required": True,
            "max_length": 50,
        },
    )
    current_window: Optional[CurrentWindow] = field(
        default=None,
        metadata={
            "name": "CurrentWindow",
            "type": "Element",
        },
    )


@dataclass
class UnitOfMeasureSetAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    unit_of_measure_type: Optional[UnitOfMeasureType] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureType",
            "type": "Element",
            "required": True,
        },
    )
    base_unit: Optional[BaseUnit] = field(
        default=None,
        metadata={
            "name": "BaseUnit",
            "type": "Element",
            "required": True,
        },
    )
    related_unit: List[RelatedUnit] = field(
        default_factory=list,
        metadata={
            "name": "RelatedUnit",
            "type": "Element",
        },
    )
    default_unit: List[DefaultUnit] = field(
        default_factory=list,
        metadata={
            "name": "DefaultUnit",
            "type": "Element",
        },
    )


@dataclass
class UnitOfMeasureSetQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: UnitOfMeasureSetQueryRqTypeMetaData = field(
        default=UnitOfMeasureSetQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class UnitOfMeasureSetRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 31,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    unit_of_measure_type: Optional[UnitOfMeasureType] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureType",
            "type": "Element",
        },
    )
    base_unit: Optional[BaseUnit] = field(
        default=None,
        metadata={
            "name": "BaseUnit",
            "type": "Element",
        },
    )
    related_unit: List[RelatedUnit] = field(
        default_factory=list,
        metadata={
            "name": "RelatedUnit",
            "type": "Element",
        },
    )
    default_unit: List[DefaultUnit] = field(
        default_factory=list,
        metadata={
            "name": "DefaultUnit",
            "type": "Element",
        },
    )


@dataclass
class VehicleAddRqType:
    vehicle_add: Optional[VehicleAdd] = field(
        default=None,
        metadata={
            "name": "VehicleAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleAddRsType:
    vehicle_ret: Optional[VehicleRet] = field(
        default=None,
        metadata={
            "name": "VehicleRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleMileageAddRqType:
    vehicle_mileage_add: Optional[VehicleMileageAdd] = field(
        default=None,
        metadata={
            "name": "VehicleMileageAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleMileageAddRsType:
    vehicle_mileage_ret: Optional[VehicleMileageRet] = field(
        default=None,
        metadata={
            "name": "VehicleMileageRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleMileageQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: VehicleMileageQueryRqTypeMetaData = field(
        default=VehicleMileageQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[VehicleMileageQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleMileageQueryRsType:
    vehicle_mileage_ret: List[VehicleMileageRet] = field(
        default_factory=list,
        metadata={
            "name": "VehicleMileageRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleModRqType:
    vehicle_mod: Optional[VehicleMod] = field(
        default=None,
        metadata={
            "name": "VehicleMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleModRsType:
    vehicle_ret: Optional[VehicleRet] = field(
        default=None,
        metadata={
            "name": "VehicleRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: VehicleQueryRqTypeMetaData = field(
        default=VehicleQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class VehicleQueryRsType:
    vehicle_ret: List[VehicleRet] = field(
        default_factory=list,
        metadata={
            "name": "VehicleRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class VendorAddRqType:
    vendor_add: Optional[VendorAdd] = field(
        default=None,
        metadata={
            "name": "VendorAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditAdd:
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    expense_line_add: List[ExpenseLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineAdd",
            "type": "Element",
        },
    )
    item_line_add: List[ItemLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineAdd",
            "type": "Element",
        },
    )
    item_group_line_add: List[ItemGroupLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditQueryRqType:
    txn_id: List[TxnId] = field(
        default_factory=list,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    ref_number: List[RefNumber] = field(
        default_factory=list,
        metadata={
            "name": "RefNumber",
            "type": "Element",
        },
    )
    ref_number_case_sensitive: List[RefNumberCaseSensitive] = field(
        default_factory=list,
        metadata={
            "name": "RefNumberCaseSensitive",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    modified_date_range_filter: Optional[ModifiedDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "ModifiedDateRangeFilter",
            "type": "Element",
        },
    )
    txn_date_range_filter: Optional[TxnDateRangeFilter] = field(
        default=None,
        metadata={
            "name": "TxnDateRangeFilter",
            "type": "Element",
        },
    )
    entity_filter: Optional[EntityFilter] = field(
        default=None,
        metadata={
            "name": "EntityFilter",
            "type": "Element",
        },
    )
    account_filter: Optional[AccountFilter] = field(
        default=None,
        metadata={
            "name": "AccountFilter",
            "type": "Element",
        },
    )
    ref_number_filter: Optional[RefNumberFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberFilter",
            "type": "Element",
        },
    )
    ref_number_range_filter: Optional[RefNumberRangeFilter] = field(
        default=None,
        metadata={
            "name": "RefNumberRangeFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    include_line_items: Optional[IncludeLineItems] = field(
        default=None,
        metadata={
            "name": "IncludeLineItems",
            "type": "Element",
        },
    )
    include_linked_txns: Optional[IncludeLinkedTxns] = field(
        default=None,
        metadata={
            "name": "IncludeLinkedTxns",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: VendorCreditQueryRqTypeMetaData = field(
        default=VendorCreditQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[VendorCreditQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorModRqType:
    vendor_mod: Optional[VendorMod] = field(
        default=None,
        metadata={
            "name": "VendorMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    total_balance_filter: Optional[TotalBalanceFilter] = field(
        default=None,
        metadata={
            "name": "TotalBalanceFilter",
            "type": "Element",
        },
    )
    currency_filter: Optional[CurrencyFilter] = field(
        default=None,
        metadata={
            "name": "CurrencyFilter",
            "type": "Element",
        },
    )
    class_filter: Optional[ClassFilter] = field(
        default=None,
        metadata={
            "name": "ClassFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    owner_id: List[OwnerId] = field(
        default_factory=list,
        metadata={
            "name": "OwnerID",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: VendorQueryRqTypeMetaData = field(
        default=VendorQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )
    iterator: Optional[VendorQueryRqTypeIterator] = field(
        default=None,
        metadata={
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    is_tax_agency: Optional[IsTaxAgency] = field(
        default=None,
        metadata={
            "name": "IsTaxAgency",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 41,
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    vendor_address_block: Optional[VendorAddressBlock] = field(
        default=None,
        metadata={
            "name": "VendorAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    cc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Cc",
            "type": "Element",
            "max_length": 1023,
        },
    )
    contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "Contact",
            "type": "Element",
            "max_length": 41,
        },
    )
    alt_contact: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltContact",
            "type": "Element",
            "max_length": 41,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    contacts_ret: List[ContactsRet] = field(
        default_factory=list,
        metadata={
            "name": "ContactsRet",
            "type": "Element",
        },
    )
    name_on_check: Optional[str] = field(
        default=None,
        metadata={
            "name": "NameOnCheck",
            "type": "Element",
            "max_length": 41,
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes_ret: List[AdditionalNotesRet] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotesRet",
            "type": "Element",
        },
    )
    vendor_type_ref: Optional[VendorTypeRef] = field(
        default=None,
        metadata={
            "name": "VendorTypeRef",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    credit_limit: Optional[CreditLimit] = field(
        default=None,
        metadata={
            "name": "CreditLimit",
            "type": "Element",
        },
    )
    vendor_tax_ident: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorTaxIdent",
            "type": "Element",
            "max_length": 15,
        },
    )
    is_vendor_eligible_for1099: Optional[IsVendorEligibleFor1099] = field(
        default=None,
        metadata={
            "name": "IsVendorEligibleFor1099",
            "type": "Element",
        },
    )
    balance: Optional[Balance] = field(
        default=None,
        metadata={
            "name": "Balance",
            "type": "Element",
        },
    )
    billing_rate_ref: Optional[BillingRateRef] = field(
        default=None,
        metadata={
            "name": "BillingRateRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    sales_tax_country: Optional[SalesTaxCountry] = field(
        default=None,
        metadata={
            "name": "SalesTaxCountry",
            "type": "Element",
        },
    )
    is_sales_tax_agency: Optional[IsSalesTaxAgency] = field(
        default=None,
        metadata={
            "name": "IsSalesTaxAgency",
            "type": "Element",
        },
    )
    sales_tax_return_ref: Optional[SalesTaxReturnRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxReturnRef",
            "type": "Element",
        },
    )
    tax_registration_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "TaxRegistrationNumber",
            "type": "Element",
            "max_length": 30,
        },
    )
    reporting_period: Optional[ReportingPeriod] = field(
        default=None,
        metadata={
            "name": "ReportingPeriod",
            "type": "Element",
        },
    )
    is_tax_tracked_on_purchases: Optional[IsTaxTrackedOnPurchases] = field(
        default=None,
        metadata={
            "name": "IsTaxTrackedOnPurchases",
            "type": "Element",
        },
    )
    tax_on_purchases_account_ref: Optional[TaxOnPurchasesAccountRef] = field(
        default=None,
        metadata={
            "name": "TaxOnPurchasesAccountRef",
            "type": "Element",
        },
    )
    is_tax_tracked_on_sales: Optional[IsTaxTrackedOnSales] = field(
        default=None,
        metadata={
            "name": "IsTaxTrackedOnSales",
            "type": "Element",
        },
    )
    tax_on_sales_account_ref: Optional[TaxOnSalesAccountRef] = field(
        default=None,
        metadata={
            "name": "TaxOnSalesAccountRef",
            "type": "Element",
        },
    )
    is_tax_on_tax: Optional[IsTaxOnTax] = field(
        default=None,
        metadata={
            "name": "IsTaxOnTax",
            "type": "Element",
        },
    )
    prefill_account_ref: List[PrefillAccountRef] = field(
        default_factory=list,
        metadata={
            "name": "PrefillAccountRef",
            "type": "Element",
            "max_occurs": 3,
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class VendorTypeAddRqType:
    vendor_type_add: Optional[VendorTypeAdd] = field(
        default=None,
        metadata={
            "name": "VendorTypeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorTypeAddRsType:
    vendor_type_ret: Optional[VendorTypeRet] = field(
        default=None,
        metadata={
            "name": "VendorTypeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VendorTypeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: VendorTypeQueryRqTypeMetaData = field(
        default=VendorTypeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class VendorTypeQueryRsType:
    vendor_type_ret: List[VendorTypeRet] = field(
        default_factory=list,
        metadata={
            "name": "VendorTypeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeAdd:
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "required": True,
            "max_length": 13,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate_entry: List[RateEntry] = field(
        default_factory=list,
        metadata={
            "name": "RateEntry",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class WorkersCompCodeMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 13,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate_entry: List[RateEntry] = field(
        default_factory=list,
        metadata={
            "name": "RateEntry",
            "type": "Element",
        },
    )


@dataclass
class WorkersCompCodeQueryRqType:
    list_id: List[ListId] = field(
        default_factory=list,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    full_name: List[FullName] = field(
        default_factory=list,
        metadata={
            "name": "FullName",
            "type": "Element",
        },
    )
    max_returned: Optional[MaxReturned] = field(
        default=None,
        metadata={
            "name": "MaxReturned",
            "type": "Element",
        },
    )
    active_status: Optional[ActiveStatus] = field(
        default=None,
        metadata={
            "name": "ActiveStatus",
            "type": "Element",
        },
    )
    from_modified_date: Optional[FromModifiedDate] = field(
        default=None,
        metadata={
            "name": "FromModifiedDate",
            "type": "Element",
        },
    )
    to_modified_date: Optional[ToModifiedDate] = field(
        default=None,
        metadata={
            "name": "ToModifiedDate",
            "type": "Element",
        },
    )
    name_filter: Optional[NameFilter] = field(
        default=None,
        metadata={
            "name": "NameFilter",
            "type": "Element",
        },
    )
    name_range_filter: Optional[NameRangeFilter] = field(
        default=None,
        metadata={
            "name": "NameRangeFilter",
            "type": "Element",
        },
    )
    from_effective_date: Optional[FromEffectiveDate] = field(
        default=None,
        metadata={
            "name": "FromEffectiveDate",
            "type": "Element",
        },
    )
    to_effective_date: Optional[ToEffectiveDate] = field(
        default=None,
        metadata={
            "name": "ToEffectiveDate",
            "type": "Element",
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    meta_data: WorkersCompCodeQueryRqTypeMetaData = field(
        default=WorkersCompCodeQueryRqTypeMetaData.NO_META_DATA,
        metadata={
            "name": "metaData",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 13,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 31,
        },
    )
    current_rate: Optional[CurrentRate] = field(
        default=None,
        metadata={
            "name": "CurrentRate",
            "type": "Element",
        },
    )
    current_effective_date: Optional[CurrentEffectiveDate] = field(
        default=None,
        metadata={
            "name": "CurrentEffectiveDate",
            "type": "Element",
        },
    )
    next_rate: Optional[NextRate] = field(
        default=None,
        metadata={
            "name": "NextRate",
            "type": "Element",
        },
    )
    next_effective_date: Optional[NextEffectiveDate] = field(
        default=None,
        metadata={
            "name": "NextEffectiveDate",
            "type": "Element",
        },
    )
    rate_history: List[RateHistory] = field(
        default_factory=list,
        metadata={
            "name": "RateHistory",
            "type": "Element",
        },
    )


@dataclass
class ArrefundCreditCardAdd:
    class Meta:
        name = "ARRefundCreditCardAdd"

    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    refund_from_account_ref: Optional[RefundFromAccountRef] = field(
        default=None,
        metadata={
            "name": "RefundFromAccountRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    refund_applied_to_txn_add: List[RefundAppliedToTxnAdd] = field(
        default_factory=list,
        metadata={
            "name": "RefundAppliedToTxnAdd",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ArrefundCreditCardRet:
    class Meta:
        name = "ARRefundCreditCardRet"

    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    refund_from_account_ref: Optional[RefundFromAccountRef] = field(
        default=None,
        metadata={
            "name": "RefundFromAccountRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    address_block: Optional[AddressBlock] = field(
        default=None,
        metadata={
            "name": "AddressBlock",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    refund_applied_to_txn_ret: List[RefundAppliedToTxnRet] = field(
        default_factory=list,
        metadata={
            "name": "RefundAppliedToTxnRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class AccountAddRsType:
    account_ret: Optional[AccountRet] = field(
        default=None,
        metadata={
            "name": "AccountRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class AccountModRsType:
    account_ret: Optional[AccountRet] = field(
        default=None,
        metadata={
            "name": "AccountRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class AccountQueryRsType:
    account_ret: List[AccountRet] = field(
        default_factory=list,
        metadata={
            "name": "AccountRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class BillAddRqType:
    bill_add: Optional[BillAdd] = field(
        default=None,
        metadata={
            "name": "BillAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BillMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    clear_expense_lines: Optional[ClearExpenseLines] = field(
        default=None,
        metadata={
            "name": "ClearExpenseLines",
            "type": "Element",
        },
    )
    expense_line_mod: List[ExpenseLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineMod",
            "type": "Element",
        },
    )
    clear_item_lines: Optional[ClearItemLines] = field(
        default=None,
        metadata={
            "name": "ClearItemLines",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )
    item_group_line_mod: List[ItemGroupLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineMod",
            "type": "Element",
        },
    )


@dataclass
class BillPaymentCheckAdd:
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    bank_account_ref: Optional[BankAccountRef] = field(
        default=None,
        metadata={
            "name": "BankAccountRef",
            "type": "Element",
            "required": True,
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    applied_to_txn_add: List[AppliedToTxnAdd] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnAdd",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    bank_account_ref: Optional[BankAccountRef] = field(
        default=None,
        metadata={
            "name": "BankAccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    applied_to_txn_mod: List[AppliedToTxnMod] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnMod",
            "type": "Element",
        },
    )


@dataclass
class BillPaymentCheckRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    bank_account_ref: Optional[BankAccountRef] = field(
        default=None,
        metadata={
            "name": "BankAccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    address_block: Optional[AddressBlock] = field(
        default=None,
        metadata={
            "name": "AddressBlock",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    applied_to_txn_ret: List[AppliedToTxnRet] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class BillPaymentCreditCardAdd:
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
            "required": True,
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    credit_card_account_ref: Optional[CreditCardAccountRef] = field(
        default=None,
        metadata={
            "name": "CreditCardAccountRef",
            "type": "Element",
            "required": True,
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    applied_to_txn_add: List[AppliedToTxnAdd] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnAdd",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCreditCardRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    credit_card_account_ref: Optional[CreditCardAccountRef] = field(
        default=None,
        metadata={
            "name": "CreditCardAccountRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    applied_to_txn_ret: List[AppliedToTxnRet] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class BillToPayQueryRsType:
    bill_to_pay_ret: List[BillToPayRet] = field(
        default_factory=list,
        metadata={
            "name": "BillToPayRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class BillingRateAddRqType:
    billing_rate_add: Optional[BillingRateAdd] = field(
        default=None,
        metadata={
            "name": "BillingRateAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BillingRateAddRsType:
    billing_rate_ret: Optional[BillingRateRet] = field(
        default=None,
        metadata={
            "name": "BillingRateRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillingRateQueryRsType:
    billing_rate_ret: List[BillingRateRet] = field(
        default_factory=list,
        metadata={
            "name": "BillingRateRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyAddRsType:
    build_assembly_ret: Optional[BuildAssemblyRet] = field(
        default=None,
        metadata={
            "name": "BuildAssemblyRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyModRsType:
    build_assembly_ret: Optional[BuildAssemblyRet] = field(
        default=None,
        metadata={
            "name": "BuildAssemblyRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BuildAssemblyQueryRsType:
    build_assembly_ret: List[BuildAssemblyRet] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeAddRsType:
    charge_ret: Optional[ChargeRet] = field(
        default=None,
        metadata={
            "name": "ChargeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeModRsType:
    charge_ret: Optional[ChargeRet] = field(
        default=None,
        metadata={
            "name": "ChargeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ChargeQueryRsType:
    charge_ret: List[ChargeRet] = field(
        default_factory=list,
        metadata={
            "name": "ChargeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CheckAddRqType:
    check_add: Optional[CheckAdd] = field(
        default=None,
        metadata={
            "name": "CheckAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CheckMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    apply_check_to_txn_mod: List[ApplyCheckToTxnMod] = field(
        default_factory=list,
        metadata={
            "name": "ApplyCheckToTxnMod",
            "type": "Element",
        },
    )
    clear_expense_lines: Optional[ClearExpenseLines] = field(
        default=None,
        metadata={
            "name": "ClearExpenseLines",
            "type": "Element",
        },
    )
    expense_line_mod: List[ExpenseLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineMod",
            "type": "Element",
        },
    )
    clear_item_lines: Optional[ClearItemLines] = field(
        default=None,
        metadata={
            "name": "ClearItemLines",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )
    item_group_line_mod: List[ItemGroupLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineMod",
            "type": "Element",
        },
    )


@dataclass
class CompanyRet:
    is_sample_company: Optional[IsSampleCompany] = field(
        default=None,
        metadata={
            "name": "IsSampleCompany",
            "type": "Element",
        },
    )
    company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyName",
            "type": "Element",
            "max_length": 59,
        },
    )
    legal_company_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LegalCompanyName",
            "type": "Element",
            "max_length": 59,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    address_block: Optional[AddressBlock] = field(
        default=None,
        metadata={
            "name": "AddressBlock",
            "type": "Element",
        },
    )
    legal_address: Optional[LegalAddress] = field(
        default=None,
        metadata={
            "name": "LegalAddress",
            "type": "Element",
        },
    )
    company_address_for_customer: Optional[CompanyAddressForCustomer] = field(
        default=None,
        metadata={
            "name": "CompanyAddressForCustomer",
            "type": "Element",
        },
    )
    company_address_block_for_customer: Optional[
        CompanyAddressBlockForCustomer
    ] = field(
        default=None,
        metadata={
            "name": "CompanyAddressBlockForCustomer",
            "type": "Element",
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 51,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 51,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    company_email_for_customer: Optional[CompanyEmailForCustomer] = field(
        default=None,
        metadata={
            "name": "CompanyEmailForCustomer",
            "type": "Element",
        },
    )
    company_web_site: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyWebSite",
            "type": "Element",
            "max_length": 128,
        },
    )
    first_month_fiscal_year: Optional[FirstMonthFiscalYear] = field(
        default=None,
        metadata={
            "name": "FirstMonthFiscalYear",
            "type": "Element",
        },
    )
    first_month_income_tax_year: Optional[FirstMonthIncomeTaxYear] = field(
        default=None,
        metadata={
            "name": "FirstMonthIncomeTaxYear",
            "type": "Element",
        },
    )
    company_type: Optional[str] = field(
        default=None,
        metadata={
            "name": "CompanyType",
            "type": "Element",
            "max_length": 255,
        },
    )
    ein: Optional[str] = field(
        default=None,
        metadata={
            "name": "EIN",
            "type": "Element",
            "max_length": 20,
        },
    )
    ssn: Optional[str] = field(
        default=None,
        metadata={
            "name": "SSN",
            "type": "Element",
            "max_length": 11,
        },
    )
    tax_form: Optional[TaxForm] = field(
        default=None,
        metadata={
            "name": "TaxForm",
            "type": "Element",
        },
    )
    subscribed_services: Optional[SubscribedServices] = field(
        default=None,
        metadata={
            "name": "SubscribedServices",
            "type": "Element",
        },
    )
    accountant_copy: Optional[AccountantCopy] = field(
        default=None,
        metadata={
            "name": "AccountantCopy",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CreditCardChargeAddRqType:
    credit_card_charge_add: Optional[CreditCardChargeAdd] = field(
        default=None,
        metadata={
            "name": "CreditCardChargeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    clear_expense_lines: Optional[ClearExpenseLines] = field(
        default=None,
        metadata={
            "name": "ClearExpenseLines",
            "type": "Element",
        },
    )
    expense_line_mod: List[ExpenseLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineMod",
            "type": "Element",
        },
    )
    clear_item_lines: Optional[ClearItemLines] = field(
        default=None,
        metadata={
            "name": "ClearItemLines",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )
    item_group_line_mod: List[ItemGroupLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineMod",
            "type": "Element",
        },
    )


@dataclass
class CreditCardCreditAddRqType:
    credit_card_credit_add: Optional[CreditCardCreditAdd] = field(
        default=None,
        metadata={
            "name": "CreditCardCreditAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    clear_expense_lines: Optional[ClearExpenseLines] = field(
        default=None,
        metadata={
            "name": "ClearExpenseLines",
            "type": "Element",
        },
    )
    expense_line_mod: List[ExpenseLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineMod",
            "type": "Element",
        },
    )
    clear_item_lines: Optional[ClearItemLines] = field(
        default=None,
        metadata={
            "name": "ClearItemLines",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )
    item_group_line_mod: List[ItemGroupLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineMod",
            "type": "Element",
        },
    )


@dataclass
class CreditMemoLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CreditMemoMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    credit_memo_line_mod: List[CreditMemoLineMod] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineMod",
            "type": "Element",
        },
    )
    credit_memo_line_group_mod: List[CreditMemoLineGroupMod] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineGroupMod",
            "type": "Element",
        },
    )


@dataclass
class CurrencyAddRqType:
    currency_add: Optional[CurrencyAdd] = field(
        default=None,
        metadata={
            "name": "CurrencyAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CurrencyAddRsType:
    currency_ret: Optional[CurrencyRet] = field(
        default=None,
        metadata={
            "name": "CurrencyRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CurrencyModRqType:
    currency_mod: Optional[CurrencyMod] = field(
        default=None,
        metadata={
            "name": "CurrencyMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CurrencyModRsType:
    currency_ret: Optional[CurrencyRet] = field(
        default=None,
        metadata={
            "name": "CurrencyRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CurrencyQueryRsType:
    currency_ret: List[CurrencyRet] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerAddRqType:
    customer_add: Optional[CustomerAdd] = field(
        default=None,
        metadata={
            "name": "CustomerAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerAddRsType:
    customer_ret: Optional[CustomerRet] = field(
        default=None,
        metadata={
            "name": "CustomerRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerModRqType:
    customer_mod: Optional[CustomerMod] = field(
        default=None,
        metadata={
            "name": "CustomerMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerModRsType:
    customer_ret: Optional[CustomerRet] = field(
        default=None,
        metadata={
            "name": "CustomerRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CustomerQueryRsType:
    customer_ret: List[CustomerRet] = field(
        default_factory=list,
        metadata={
            "name": "CustomerRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class DataEventSubscriptionAddRqType:
    data_event_subscription_add: Optional[DataEventSubscriptionAdd] = field(
        default=None,
        metadata={
            "name": "DataEventSubscriptionAdd",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DataEventSubscriptionAddRsType:
    data_event_subscription_ret: Optional[DataEventSubscriptionRet] = field(
        default=None,
        metadata={
            "name": "DataEventSubscriptionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DataEventSubscriptionQueryRsType:
    data_event_subscription_ret: Optional[DataEventSubscriptionRet] = field(
        default=None,
        metadata={
            "name": "DataEventSubscriptionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DepositAddRqType:
    deposit_add: Optional[DepositAdd] = field(
        default=None,
        metadata={
            "name": "DepositAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DepositAddRsType:
    deposit_ret: Optional[DepositRet] = field(
        default=None,
        metadata={
            "name": "DepositRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DepositModRqType:
    deposit_mod: Optional[DepositMod] = field(
        default=None,
        metadata={
            "name": "DepositMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class DepositModRsType:
    deposit_ret: Optional[DepositRet] = field(
        default=None,
        metadata={
            "name": "DepositRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class DepositQueryRsType:
    deposit_ret: List[DepositRet] = field(
        default_factory=list,
        metadata={
            "name": "DepositRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class EmployeeAdd:
    name: Optional[Name] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    supervisor_ref: Optional[SupervisorRef] = field(
        default=None,
        metadata={
            "name": "SupervisorRef",
            "type": "Element",
        },
    )
    department: Optional[str] = field(
        default=None,
        metadata={
            "name": "Department",
            "type": "Element",
            "max_length": 31,
        },
    )
    description: Optional[str] = field(
        default=None,
        metadata={
            "name": "Description",
            "type": "Element",
            "max_length": 64,
        },
    )
    target_bonus: Optional[TargetBonus] = field(
        default=None,
        metadata={
            "name": "TargetBonus",
            "type": "Element",
        },
    )
    employee_address: Optional[EmployeeAddress] = field(
        default=None,
        metadata={
            "name": "EmployeeAddress",
            "type": "Element",
        },
    )
    print_as: Optional[str] = field(
        default=None,
        metadata={
            "name": "PrintAs",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager_pin: Optional[str] = field(
        default=None,
        metadata={
            "name": "PagerPIN",
            "type": "Element",
            "max_length": 10,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    ssn: Optional[str] = field(
        default=None,
        metadata={
            "name": "SSN",
            "type": "Element",
            "max_length": 15,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    emergency_contacts: Optional[EmergencyContacts] = field(
        default=None,
        metadata={
            "name": "EmergencyContacts",
            "type": "Element",
        },
    )
    employee_type: Optional[EmployeeType] = field(
        default=None,
        metadata={
            "name": "EmployeeType",
            "type": "Element",
        },
    )
    part_or_full_time: Optional[PartOrFullTime] = field(
        default=None,
        metadata={
            "name": "PartOrFullTime",
            "type": "Element",
        },
    )
    exempt: Optional[Exempt] = field(
        default=None,
        metadata={
            "name": "Exempt",
            "type": "Element",
        },
    )
    key_employee: Optional[KeyEmployee] = field(
        default=None,
        metadata={
            "name": "KeyEmployee",
            "type": "Element",
        },
    )
    gender: Optional[Gender] = field(
        default=None,
        metadata={
            "name": "Gender",
            "type": "Element",
        },
    )
    hired_date: Optional[HiredDate] = field(
        default=None,
        metadata={
            "name": "HiredDate",
            "type": "Element",
        },
    )
    original_hire_date: Optional[OriginalHireDate] = field(
        default=None,
        metadata={
            "name": "OriginalHireDate",
            "type": "Element",
        },
    )
    adjusted_service_date: Optional[AdjustedServiceDate] = field(
        default=None,
        metadata={
            "name": "AdjustedServiceDate",
            "type": "Element",
        },
    )
    released_date: Optional[ReleasedDate] = field(
        default=None,
        metadata={
            "name": "ReleasedDate",
            "type": "Element",
        },
    )
    birth_date: Optional[BirthDate] = field(
        default=None,
        metadata={
            "name": "BirthDate",
            "type": "Element",
        },
    )
    uscitizen: Optional[Uscitizen] = field(
        default=None,
        metadata={
            "name": "USCitizen",
            "type": "Element",
        },
    )
    ethnicity: Optional[Ethnicity] = field(
        default=None,
        metadata={
            "name": "Ethnicity",
            "type": "Element",
        },
    )
    disabled: Optional[Disabled] = field(
        default=None,
        metadata={
            "name": "Disabled",
            "type": "Element",
        },
    )
    disability_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "DisabilityDesc",
            "type": "Element",
            "max_length": 25,
        },
    )
    on_file: Optional[OnFile] = field(
        default=None,
        metadata={
            "name": "OnFile",
            "type": "Element",
        },
    )
    work_auth_expire_date: Optional[WorkAuthExpireDate] = field(
        default=None,
        metadata={
            "name": "WorkAuthExpireDate",
            "type": "Element",
        },
    )
    usveteran: Optional[Usveteran] = field(
        default=None,
        metadata={
            "name": "USVeteran",
            "type": "Element",
        },
    )
    military_status: Optional[MilitaryStatus] = field(
        default=None,
        metadata={
            "name": "MilitaryStatus",
            "type": "Element",
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes: List[AdditionalNotes] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotes",
            "type": "Element",
        },
    )
    billing_rate_ref: Optional[BillingRateRef] = field(
        default=None,
        metadata={
            "name": "BillingRateRef",
            "type": "Element",
        },
    )
    employee_payroll_info: Optional[EmployeePayrollInfo] = field(
        default=None,
        metadata={
            "name": "EmployeePayrollInfo",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )


@dataclass
class EmployeeMod:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    name: Optional[Name] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    supervisor_ref: Optional[SupervisorRef] = field(
        default=None,
        metadata={
            "name": "SupervisorRef",
            "type": "Element",
        },
    )
    department: Optional[str] = field(
        default=None,
        metadata={
            "name": "Department",
            "type": "Element",
            "max_length": 31,
        },
    )
    description: Optional[str] = field(
        default=None,
        metadata={
            "name": "Description",
            "type": "Element",
            "max_length": 64,
        },
    )
    target_bonus: Optional[TargetBonus] = field(
        default=None,
        metadata={
            "name": "TargetBonus",
            "type": "Element",
        },
    )
    employee_address: Optional[EmployeeAddress] = field(
        default=None,
        metadata={
            "name": "EmployeeAddress",
            "type": "Element",
        },
    )
    print_as: Optional[str] = field(
        default=None,
        metadata={
            "name": "PrintAs",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager_pin: Optional[str] = field(
        default=None,
        metadata={
            "name": "PagerPIN",
            "type": "Element",
            "max_length": 10,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    emergency_contacts: Optional[EmergencyContacts] = field(
        default=None,
        metadata={
            "name": "EmergencyContacts",
            "type": "Element",
        },
    )
    employee_type: Optional[EmployeeType] = field(
        default=None,
        metadata={
            "name": "EmployeeType",
            "type": "Element",
        },
    )
    part_or_full_time: Optional[PartOrFullTime] = field(
        default=None,
        metadata={
            "name": "PartOrFullTime",
            "type": "Element",
        },
    )
    exempt: Optional[Exempt] = field(
        default=None,
        metadata={
            "name": "Exempt",
            "type": "Element",
        },
    )
    key_employee: Optional[KeyEmployee] = field(
        default=None,
        metadata={
            "name": "KeyEmployee",
            "type": "Element",
        },
    )
    hired_date: Optional[HiredDate] = field(
        default=None,
        metadata={
            "name": "HiredDate",
            "type": "Element",
        },
    )
    original_hire_date: Optional[OriginalHireDate] = field(
        default=None,
        metadata={
            "name": "OriginalHireDate",
            "type": "Element",
        },
    )
    adjusted_service_date: Optional[AdjustedServiceDate] = field(
        default=None,
        metadata={
            "name": "AdjustedServiceDate",
            "type": "Element",
        },
    )
    released_date: Optional[ReleasedDate] = field(
        default=None,
        metadata={
            "name": "ReleasedDate",
            "type": "Element",
        },
    )
    birth_date: Optional[BirthDate] = field(
        default=None,
        metadata={
            "name": "BirthDate",
            "type": "Element",
        },
    )
    uscitizen: Optional[Uscitizen] = field(
        default=None,
        metadata={
            "name": "USCitizen",
            "type": "Element",
        },
    )
    ethnicity: Optional[Ethnicity] = field(
        default=None,
        metadata={
            "name": "Ethnicity",
            "type": "Element",
        },
    )
    disabled: Optional[Disabled] = field(
        default=None,
        metadata={
            "name": "Disabled",
            "type": "Element",
        },
    )
    disability_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "DisabilityDesc",
            "type": "Element",
            "max_length": 25,
        },
    )
    on_file: Optional[OnFile] = field(
        default=None,
        metadata={
            "name": "OnFile",
            "type": "Element",
        },
    )
    work_auth_expire_date: Optional[WorkAuthExpireDate] = field(
        default=None,
        metadata={
            "name": "WorkAuthExpireDate",
            "type": "Element",
        },
    )
    usveteran: Optional[Usveteran] = field(
        default=None,
        metadata={
            "name": "USVeteran",
            "type": "Element",
        },
    )
    military_status: Optional[MilitaryStatus] = field(
        default=None,
        metadata={
            "name": "MilitaryStatus",
            "type": "Element",
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes_mod: List[AdditionalNotesMod] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotesMod",
            "type": "Element",
        },
    )
    billing_rate_ref: Optional[BillingRateRef] = field(
        default=None,
        metadata={
            "name": "BillingRateRef",
            "type": "Element",
        },
    )
    employee_payroll_info_mod: Optional[EmployeePayrollInfoMod] = field(
        default=None,
        metadata={
            "name": "EmployeePayrollInfoMod",
            "type": "Element",
        },
    )


@dataclass
class EmployeeRet:
    list_id: Optional[ListId] = field(
        default=None,
        metadata={
            "name": "ListID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Element",
            "max_length": 41,
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    salutation: Optional[str] = field(
        default=None,
        metadata={
            "name": "Salutation",
            "type": "Element",
            "max_length": 15,
        },
    )
    first_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "FirstName",
            "type": "Element",
            "max_length": 25,
        },
    )
    middle_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "MiddleName",
            "type": "Element",
            "max_length": 5,
        },
    )
    last_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LastName",
            "type": "Element",
            "max_length": 25,
        },
    )
    suffix: Optional[Suffix] = field(
        default=None,
        metadata={
            "name": "Suffix",
            "type": "Element",
        },
    )
    job_title: Optional[str] = field(
        default=None,
        metadata={
            "name": "JobTitle",
            "type": "Element",
            "max_length": 41,
        },
    )
    supervisor_ref: Optional[SupervisorRef] = field(
        default=None,
        metadata={
            "name": "SupervisorRef",
            "type": "Element",
        },
    )
    department: Optional[str] = field(
        default=None,
        metadata={
            "name": "Department",
            "type": "Element",
            "max_length": 31,
        },
    )
    description: Optional[str] = field(
        default=None,
        metadata={
            "name": "Description",
            "type": "Element",
            "max_length": 64,
        },
    )
    target_bonus: Optional[TargetBonus] = field(
        default=None,
        metadata={
            "name": "TargetBonus",
            "type": "Element",
        },
    )
    employee_address: Optional[EmployeeAddress] = field(
        default=None,
        metadata={
            "name": "EmployeeAddress",
            "type": "Element",
        },
    )
    print_as: Optional[str] = field(
        default=None,
        metadata={
            "name": "PrintAs",
            "type": "Element",
            "max_length": 41,
        },
    )
    phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "Phone",
            "type": "Element",
            "max_length": 21,
        },
    )
    mobile: Optional[str] = field(
        default=None,
        metadata={
            "name": "Mobile",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager: Optional[str] = field(
        default=None,
        metadata={
            "name": "Pager",
            "type": "Element",
            "max_length": 21,
        },
    )
    pager_pin: Optional[str] = field(
        default=None,
        metadata={
            "name": "PagerPIN",
            "type": "Element",
            "max_length": 10,
        },
    )
    alt_phone: Optional[str] = field(
        default=None,
        metadata={
            "name": "AltPhone",
            "type": "Element",
            "max_length": 21,
        },
    )
    fax: Optional[str] = field(
        default=None,
        metadata={
            "name": "Fax",
            "type": "Element",
            "max_length": 21,
        },
    )
    ssn: Optional[str] = field(
        default=None,
        metadata={
            "name": "SSN",
            "type": "Element",
            "max_length": 11,
        },
    )
    email: Optional[str] = field(
        default=None,
        metadata={
            "name": "Email",
            "type": "Element",
            "max_length": 1023,
        },
    )
    additional_contact_ref: List[AdditionalContactRef] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalContactRef",
            "type": "Element",
            "max_occurs": 8,
        },
    )
    emergency_contacts: Optional[EmergencyContacts] = field(
        default=None,
        metadata={
            "name": "EmergencyContacts",
            "type": "Element",
        },
    )
    employee_type: Optional[EmployeeType] = field(
        default=None,
        metadata={
            "name": "EmployeeType",
            "type": "Element",
        },
    )
    part_or_full_time: Optional[PartOrFullTime] = field(
        default=None,
        metadata={
            "name": "PartOrFullTime",
            "type": "Element",
        },
    )
    exempt: Optional[Exempt] = field(
        default=None,
        metadata={
            "name": "Exempt",
            "type": "Element",
        },
    )
    key_employee: Optional[KeyEmployee] = field(
        default=None,
        metadata={
            "name": "KeyEmployee",
            "type": "Element",
        },
    )
    gender: Optional[Gender] = field(
        default=None,
        metadata={
            "name": "Gender",
            "type": "Element",
        },
    )
    hired_date: Optional[HiredDate] = field(
        default=None,
        metadata={
            "name": "HiredDate",
            "type": "Element",
        },
    )
    original_hire_date: Optional[OriginalHireDate] = field(
        default=None,
        metadata={
            "name": "OriginalHireDate",
            "type": "Element",
        },
    )
    adjusted_service_date: Optional[AdjustedServiceDate] = field(
        default=None,
        metadata={
            "name": "AdjustedServiceDate",
            "type": "Element",
        },
    )
    released_date: Optional[ReleasedDate] = field(
        default=None,
        metadata={
            "name": "ReleasedDate",
            "type": "Element",
        },
    )
    birth_date: Optional[BirthDate] = field(
        default=None,
        metadata={
            "name": "BirthDate",
            "type": "Element",
        },
    )
    uscitizen: Optional[Uscitizen] = field(
        default=None,
        metadata={
            "name": "USCitizen",
            "type": "Element",
        },
    )
    ethnicity: Optional[Ethnicity] = field(
        default=None,
        metadata={
            "name": "Ethnicity",
            "type": "Element",
        },
    )
    disabled: Optional[Disabled] = field(
        default=None,
        metadata={
            "name": "Disabled",
            "type": "Element",
        },
    )
    disability_desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "DisabilityDesc",
            "type": "Element",
            "max_length": 25,
        },
    )
    on_file: Optional[OnFile] = field(
        default=None,
        metadata={
            "name": "OnFile",
            "type": "Element",
        },
    )
    work_auth_expire_date: Optional[WorkAuthExpireDate] = field(
        default=None,
        metadata={
            "name": "WorkAuthExpireDate",
            "type": "Element",
        },
    )
    usveteran: Optional[Usveteran] = field(
        default=None,
        metadata={
            "name": "USVeteran",
            "type": "Element",
        },
    )
    military_status: Optional[MilitaryStatus] = field(
        default=None,
        metadata={
            "name": "MilitaryStatus",
            "type": "Element",
        },
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Element",
            "max_length": 99,
        },
    )
    notes: Optional[str] = field(
        default=None,
        metadata={
            "name": "Notes",
            "type": "Element",
            "max_length": 4095,
        },
    )
    additional_notes_ret: List[AdditionalNotesRet] = field(
        default_factory=list,
        metadata={
            "name": "AdditionalNotesRet",
            "type": "Element",
        },
    )
    billing_rate_ref: Optional[BillingRateRef] = field(
        default=None,
        metadata={
            "name": "BillingRateRef",
            "type": "Element",
        },
    )
    employee_payroll_info: Optional[EmployeePayrollInfo] = field(
        default=None,
        metadata={
            "name": "EmployeePayrollInfo",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class EstimateAddRqType:
    estimate_add: Optional[EstimateAdd] = field(
        default=None,
        metadata={
            "name": "EstimateAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateLineGroupRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
            "required": True,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    estimate_line_ret: List[EstimateLineRet] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class EstimateMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    create_change_order: Optional[CreateChangeOrder] = field(
        default=None,
        metadata={
            "name": "CreateChangeOrder",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    estimate_line_mod: List[EstimateLineMod] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineMod",
            "type": "Element",
        },
    )
    estimate_line_group_mod: List[EstimateLineGroupMod] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineGroupMod",
            "type": "Element",
        },
    )


@dataclass
class Form1099CategoryAccountMappingMod:
    is_filing1099_misc: Optional[IsFiling1099Misc] = field(
        default=None,
        metadata={
            "name": "IsFiling1099Misc",
            "type": "Element",
        },
    )
    category_account_mapping_mod: List[CategoryAccountMappingMod] = field(
        default_factory=list,
        metadata={
            "name": "CategoryAccountMappingMod",
            "type": "Element",
        },
    )


@dataclass
class Form1099CategoryAccountMappingModRsType:
    form1099_category_account_mapping_ret: Optional[
        Form1099CategoryAccountMappingRet
    ] = field(
        default=None,
        metadata={
            "name": "Form1099CategoryAccountMappingRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class Form1099CategoryAccountMappingQueryRsType:
    form1099_category_account_mapping_ret: Optional[
        Form1099CategoryAccountMappingRet
    ] = field(
        default=None,
        metadata={
            "name": "Form1099CategoryAccountMappingRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class HostQueryRsType:
    host_ret: Optional[HostRet] = field(
        default=None,
        metadata={
            "name": "HostRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentAdd:
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
            "required": True,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    inventory_adjustment_line_add: List[InventoryAdjustmentLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentLineAdd",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentAddRsType:
    inventory_adjustment_ret: Optional[InventoryAdjustmentRet] = field(
        default=None,
        metadata={
            "name": "InventoryAdjustmentRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentModRqType:
    inventory_adjustment_mod: Optional[InventoryAdjustmentMod] = field(
        default=None,
        metadata={
            "name": "InventoryAdjustmentMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentModRsType:
    inventory_adjustment_ret: Optional[InventoryAdjustmentRet] = field(
        default=None,
        metadata={
            "name": "InventoryAdjustmentRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentQueryRsType:
    inventory_adjustment_ret: List[InventoryAdjustmentRet] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceAddRqType:
    invoice_add: Optional[InvoiceAdd] = field(
        default=None,
        metadata={
            "name": "InvoiceAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceLineGroupRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
            "required": True,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    invoice_line_ret: List[InvoiceLineRet] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class InvoiceMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    set_credit: List[SetCredit] = field(
        default_factory=list,
        metadata={
            "name": "SetCredit",
            "type": "Element",
        },
    )
    invoice_line_mod: List[InvoiceLineMod] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineMod",
            "type": "Element",
        },
    )
    invoice_line_group_mod: List[InvoiceLineGroupMod] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineGroupMod",
            "type": "Element",
        },
    )


@dataclass
class ItemDiscountAddRqType:
    item_discount_add: Optional[ItemDiscountAdd] = field(
        default=None,
        metadata={
            "name": "ItemDiscountAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemDiscountAddRsType:
    item_discount_ret: Optional[ItemDiscountRet] = field(
        default=None,
        metadata={
            "name": "ItemDiscountRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemDiscountModRqType:
    item_discount_mod: Optional[ItemDiscountMod] = field(
        default=None,
        metadata={
            "name": "ItemDiscountMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemDiscountModRsType:
    item_discount_ret: Optional[ItemDiscountRet] = field(
        default=None,
        metadata={
            "name": "ItemDiscountRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemDiscountQueryRsType:
    item_discount_ret: List[ItemDiscountRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemFixedAssetAddRqType:
    item_fixed_asset_add: Optional[ItemFixedAssetAdd] = field(
        default=None,
        metadata={
            "name": "ItemFixedAssetAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemFixedAssetAddRsType:
    item_fixed_asset_ret: Optional[ItemFixedAssetRet] = field(
        default=None,
        metadata={
            "name": "ItemFixedAssetRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemFixedAssetModRqType:
    item_fixed_asset_mod: Optional[ItemFixedAssetMod] = field(
        default=None,
        metadata={
            "name": "ItemFixedAssetMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemFixedAssetModRsType:
    item_fixed_asset_ret: Optional[ItemFixedAssetRet] = field(
        default=None,
        metadata={
            "name": "ItemFixedAssetRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemFixedAssetQueryRsType:
    item_fixed_asset_ret: List[ItemFixedAssetRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemGroupAddRqType:
    item_group_add: Optional[ItemGroupAdd] = field(
        default=None,
        metadata={
            "name": "ItemGroupAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemGroupAddRsType:
    item_group_ret: Optional[ItemGroupRet] = field(
        default=None,
        metadata={
            "name": "ItemGroupRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemGroupLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )


@dataclass
class ItemGroupModRqType:
    item_group_mod: Optional[ItemGroupMod] = field(
        default=None,
        metadata={
            "name": "ItemGroupMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemGroupModRsType:
    item_group_ret: Optional[ItemGroupRet] = field(
        default=None,
        metadata={
            "name": "ItemGroupRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemGroupQueryRsType:
    item_group_ret: List[ItemGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAddRqType:
    item_inventory_add: Optional[ItemInventoryAdd] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAddRsType:
    item_inventory_ret: Optional[ItemInventoryRet] = field(
        default=None,
        metadata={
            "name": "ItemInventoryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAssemblyAddRqType:
    item_inventory_assembly_add: Optional[ItemInventoryAssemblyAdd] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAssemblyAddRsType:
    item_inventory_assembly_ret: Optional[ItemInventoryAssemblyRet] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAssemblyModRqType:
    item_inventory_assembly_mod: Optional[ItemInventoryAssemblyMod] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAssemblyModRsType:
    item_inventory_assembly_ret: Optional[ItemInventoryAssemblyRet] = field(
        default=None,
        metadata={
            "name": "ItemInventoryAssemblyRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryAssemblyQueryRsType:
    item_inventory_assembly_ret: List[ItemInventoryAssemblyRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryModRqType:
    item_inventory_mod: Optional[ItemInventoryMod] = field(
        default=None,
        metadata={
            "name": "ItemInventoryMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryModRsType:
    item_inventory_ret: Optional[ItemInventoryRet] = field(
        default=None,
        metadata={
            "name": "ItemInventoryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemInventoryQueryRsType:
    item_inventory_ret: List[ItemInventoryRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemNonInventoryAddRqType:
    item_non_inventory_add: Optional[ItemNonInventoryAdd] = field(
        default=None,
        metadata={
            "name": "ItemNonInventoryAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemNonInventoryAddRsType:
    item_non_inventory_ret: Optional[ItemNonInventoryRet] = field(
        default=None,
        metadata={
            "name": "ItemNonInventoryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemNonInventoryModRqType:
    item_non_inventory_mod: Optional[ItemNonInventoryMod] = field(
        default=None,
        metadata={
            "name": "ItemNonInventoryMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemNonInventoryModRsType:
    item_non_inventory_ret: Optional[ItemNonInventoryRet] = field(
        default=None,
        metadata={
            "name": "ItemNonInventoryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemNonInventoryQueryRsType:
    item_non_inventory_ret: List[ItemNonInventoryRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemOtherChargeAddRqType:
    item_other_charge_add: Optional[ItemOtherChargeAdd] = field(
        default=None,
        metadata={
            "name": "ItemOtherChargeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemOtherChargeAddRsType:
    item_other_charge_ret: Optional[ItemOtherChargeRet] = field(
        default=None,
        metadata={
            "name": "ItemOtherChargeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemOtherChargeModRqType:
    item_other_charge_mod: Optional[ItemOtherChargeMod] = field(
        default=None,
        metadata={
            "name": "ItemOtherChargeMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemOtherChargeModRsType:
    item_other_charge_ret: Optional[ItemOtherChargeRet] = field(
        default=None,
        metadata={
            "name": "ItemOtherChargeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemOtherChargeQueryRsType:
    item_other_charge_ret: List[ItemOtherChargeRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemPaymentAddRqType:
    item_payment_add: Optional[ItemPaymentAdd] = field(
        default=None,
        metadata={
            "name": "ItemPaymentAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemPaymentAddRsType:
    item_payment_ret: Optional[ItemPaymentRet] = field(
        default=None,
        metadata={
            "name": "ItemPaymentRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemPaymentModRqType:
    item_payment_mod: Optional[ItemPaymentMod] = field(
        default=None,
        metadata={
            "name": "ItemPaymentMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemPaymentModRsType:
    item_payment_ret: Optional[ItemPaymentRet] = field(
        default=None,
        metadata={
            "name": "ItemPaymentRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemPaymentQueryRsType:
    item_payment_ret: List[ItemPaymentRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemQueryRsType:
    item_service_ret: List[ItemServiceRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceRet",
            "type": "Element",
        },
    )
    item_non_inventory_ret: List[ItemNonInventoryRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryRet",
            "type": "Element",
        },
    )
    item_other_charge_ret: List[ItemOtherChargeRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeRet",
            "type": "Element",
        },
    )
    item_inventory_ret: List[ItemInventoryRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryRet",
            "type": "Element",
        },
    )
    item_inventory_assembly_ret: List[ItemInventoryAssemblyRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyRet",
            "type": "Element",
        },
    )
    item_fixed_asset_ret: List[ItemFixedAssetRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetRet",
            "type": "Element",
        },
    )
    item_subtotal_ret: List[ItemSubtotalRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalRet",
            "type": "Element",
        },
    )
    item_discount_ret: List[ItemDiscountRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountRet",
            "type": "Element",
        },
    )
    item_payment_ret: List[ItemPaymentRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentRet",
            "type": "Element",
        },
    )
    item_sales_tax_ret: List[ItemSalesTaxRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxRet",
            "type": "Element",
        },
    )
    item_sales_tax_group_ret: List[ItemSalesTaxGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupRet",
            "type": "Element",
        },
    )
    item_group_ret: List[ItemGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptAddRqType:
    item_receipt_add: Optional[ItemReceiptAdd] = field(
        default=None,
        metadata={
            "name": "ItemReceiptAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    clear_expense_lines: Optional[ClearExpenseLines] = field(
        default=None,
        metadata={
            "name": "ClearExpenseLines",
            "type": "Element",
        },
    )
    expense_line_mod: List[ExpenseLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineMod",
            "type": "Element",
        },
    )
    clear_item_lines: Optional[ClearItemLines] = field(
        default=None,
        metadata={
            "name": "ClearItemLines",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )
    item_group_line_mod: List[ItemGroupLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineMod",
            "type": "Element",
        },
    )


@dataclass
class ItemSalesTaxAddRqType:
    item_sales_tax_add: Optional[ItemSalesTaxAdd] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxAddRsType:
    item_sales_tax_ret: Optional[ItemSalesTaxRet] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxGroupAddRqType:
    item_sales_tax_group_add: Optional[ItemSalesTaxGroupAdd] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxGroupAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxGroupAddRsType:
    item_sales_tax_group_ret: Optional[ItemSalesTaxGroupRet] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxGroupRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxGroupModRqType:
    item_sales_tax_group_mod: Optional[ItemSalesTaxGroupMod] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxGroupMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxGroupModRsType:
    item_sales_tax_group_ret: Optional[ItemSalesTaxGroupRet] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxGroupRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxGroupQueryRsType:
    item_sales_tax_group_ret: List[ItemSalesTaxGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxModRqType:
    item_sales_tax_mod: Optional[ItemSalesTaxMod] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxModRsType:
    item_sales_tax_ret: Optional[ItemSalesTaxRet] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSalesTaxQueryRsType:
    item_sales_tax_ret: List[ItemSalesTaxRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemServiceAddRqType:
    item_service_add: Optional[ItemServiceAdd] = field(
        default=None,
        metadata={
            "name": "ItemServiceAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemServiceAddRsType:
    item_service_ret: Optional[ItemServiceRet] = field(
        default=None,
        metadata={
            "name": "ItemServiceRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemServiceModRqType:
    item_service_mod: Optional[ItemServiceMod] = field(
        default=None,
        metadata={
            "name": "ItemServiceMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemServiceModRsType:
    item_service_ret: Optional[ItemServiceRet] = field(
        default=None,
        metadata={
            "name": "ItemServiceRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemServiceQueryRsType:
    item_service_ret: List[ItemServiceRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalAddRqType:
    item_subtotal_add: Optional[ItemSubtotalAdd] = field(
        default=None,
        metadata={
            "name": "ItemSubtotalAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalAddRsType:
    item_subtotal_ret: Optional[ItemSubtotalRet] = field(
        default=None,
        metadata={
            "name": "ItemSubtotalRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalModRqType:
    item_subtotal_mod: Optional[ItemSubtotalMod] = field(
        default=None,
        metadata={
            "name": "ItemSubtotalMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalModRsType:
    item_subtotal_ret: Optional[ItemSubtotalRet] = field(
        default=None,
        metadata={
            "name": "ItemSubtotalRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemSubtotalQueryRsType:
    item_subtotal_ret: List[ItemSubtotalRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryAddRqType:
    journal_entry_add: Optional[JournalEntryAdd] = field(
        default=None,
        metadata={
            "name": "JournalEntryAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryAddRsType:
    journal_entry_ret: Optional[JournalEntryRet] = field(
        default=None,
        metadata={
            "name": "JournalEntryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryModRqType:
    journal_entry_mod: Optional[JournalEntryMod] = field(
        default=None,
        metadata={
            "name": "JournalEntryMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryModRsType:
    journal_entry_ret: Optional[JournalEntryRet] = field(
        default=None,
        metadata={
            "name": "JournalEntryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class JournalEntryQueryRsType:
    journal_entry_ret: List[JournalEntryRet] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class LeadAddRqType:
    lead_add: Optional[LeadAdd] = field(
        default=None,
        metadata={
            "name": "LeadAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class LeadAddRsType:
    lead_ret: Optional[LeadRet] = field(
        default=None,
        metadata={
            "name": "LeadRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class LeadModRqType:
    lead_mod: Optional[LeadMod] = field(
        default=None,
        metadata={
            "name": "LeadMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class LeadModRsType:
    lead_ret: Optional[LeadRet] = field(
        default=None,
        metadata={
            "name": "LeadRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class LeadQueryRsType:
    lead_ret: List[LeadRet] = field(
        default_factory=list,
        metadata={
            "name": "LeadRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class OtherNameAddRsType:
    other_name_ret: Optional[OtherNameRet] = field(
        default=None,
        metadata={
            "name": "OtherNameRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class OtherNameModRsType:
    other_name_ret: Optional[OtherNameRet] = field(
        default=None,
        metadata={
            "name": "OtherNameRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class OtherNameQueryRsType:
    other_name_ret: List[OtherNameRet] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class PreferencesRet:
    accounting_preferences: Optional[AccountingPreferences] = field(
        default=None,
        metadata={
            "name": "AccountingPreferences",
            "type": "Element",
        },
    )
    finance_charge_preferences: Optional[FinanceChargePreferences] = field(
        default=None,
        metadata={
            "name": "FinanceChargePreferences",
            "type": "Element",
        },
    )
    jobs_and_estimates_preferences: Optional[JobsAndEstimatesPreferences] = (
        field(
            default=None,
            metadata={
                "name": "JobsAndEstimatesPreferences",
                "type": "Element",
            },
        )
    )
    multi_currency_preferences: Optional[MultiCurrencyPreferences] = field(
        default=None,
        metadata={
            "name": "MultiCurrencyPreferences",
            "type": "Element",
        },
    )
    multi_location_inventory_preferences: Optional[
        MultiLocationInventoryPreferences
    ] = field(
        default=None,
        metadata={
            "name": "MultiLocationInventoryPreferences",
            "type": "Element",
        },
    )
    purchases_and_vendors_preferences: Optional[
        PurchasesAndVendorsPreferences
    ] = field(
        default=None,
        metadata={
            "name": "PurchasesAndVendorsPreferences",
            "type": "Element",
        },
    )
    reports_preferences: Optional[ReportsPreferences] = field(
        default=None,
        metadata={
            "name": "ReportsPreferences",
            "type": "Element",
        },
    )
    sales_and_customers_preferences: Optional[SalesAndCustomersPreferences] = (
        field(
            default=None,
            metadata={
                "name": "SalesAndCustomersPreferences",
                "type": "Element",
            },
        )
    )
    sales_tax_preferences: Optional[SalesTaxPreferences] = field(
        default=None,
        metadata={
            "name": "SalesTaxPreferences",
            "type": "Element",
        },
    )
    time_tracking_preferences: Optional[TimeTrackingPreferences] = field(
        default=None,
        metadata={
            "name": "TimeTrackingPreferences",
            "type": "Element",
        },
    )
    current_app_access_rights: Optional[CurrentAppAccessRights] = field(
        default=None,
        metadata={
            "name": "CurrentAppAccessRights",
            "type": "Element",
        },
    )
    items_and_inventory_preferences: Optional[ItemsAndInventoryPreferences] = (
        field(
            default=None,
            metadata={
                "name": "ItemsAndInventoryPreferences",
                "type": "Element",
            },
        )
    )


@dataclass
class PriceLevelAddRqType:
    price_level_add: Optional[PriceLevelAdd] = field(
        default=None,
        metadata={
            "name": "PriceLevelAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PriceLevelAddRsType:
    price_level_ret: Optional[PriceLevelRet] = field(
        default=None,
        metadata={
            "name": "PriceLevelRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PriceLevelModRqType:
    price_level_mod: Optional[PriceLevelMod] = field(
        default=None,
        metadata={
            "name": "PriceLevelMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PriceLevelModRsType:
    price_level_ret: Optional[PriceLevelRet] = field(
        default=None,
        metadata={
            "name": "PriceLevelRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PriceLevelQueryRsType:
    price_level_ret: List[PriceLevelRet] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderAddRqType:
    purchase_order_add: Optional[PurchaseOrderAdd] = field(
        default=None,
        metadata={
            "name": "PurchaseOrderAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderLineGroupRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
            "required": True,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    purchase_order_line_ret: List[PurchaseOrderLineRet] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class PurchaseOrderMod:
    txn_id: Optional[PurchaseOrderModTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    ship_to_entity_ref: Optional[ShipToEntityRef] = field(
        default=None,
        metadata={
            "name": "ShipToEntityRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    expected_date: Optional[ExpectedDate] = field(
        default=None,
        metadata={
            "name": "ExpectedDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    vendor_msg: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorMsg",
            "type": "Element",
            "max_length": 99,
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 25,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    purchase_order_line_mod: List[PurchaseOrderLineMod] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineMod",
            "type": "Element",
        },
    )
    purchase_order_line_group_mod: List[PurchaseOrderLineGroupMod] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineGroupMod",
            "type": "Element",
        },
    )


@dataclass
class ReceivePaymentAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    is_auto_apply: Optional[IsAutoApply] = field(
        default=None,
        metadata={
            "name": "IsAutoApply",
            "type": "Element",
        },
    )
    applied_to_txn_add: List[AppliedToTxnAdd] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    credit_card_txn_info_mod: Optional[CreditCardTxnInfoMod] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfoMod",
            "type": "Element",
        },
    )
    applied_to_txn_mod: List[AppliedToTxnMod] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnMod",
            "type": "Element",
        },
    )


@dataclass
class ReceivePaymentRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    unused_payment: Optional[UnusedPayment] = field(
        default=None,
        metadata={
            "name": "UnusedPayment",
            "type": "Element",
        },
    )
    unused_credits: Optional[UnusedCredits] = field(
        default=None,
        metadata={
            "name": "UnusedCredits",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    applied_to_txn_ret: List[AppliedToTxnRet] = field(
        default_factory=list,
        metadata={
            "name": "AppliedToTxnRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ReportRet:
    report_title: Optional[ReportTitle] = field(
        default=None,
        metadata={
            "name": "ReportTitle",
            "type": "Element",
            "required": True,
        },
    )
    report_subtitle: Optional[ReportSubtitle] = field(
        default=None,
        metadata={
            "name": "ReportSubtitle",
            "type": "Element",
            "required": True,
        },
    )
    report_basis: Optional[ReportBasis] = field(
        default=None,
        metadata={
            "name": "ReportBasis",
            "type": "Element",
        },
    )
    num_rows: Optional[NumRows] = field(
        default=None,
        metadata={
            "name": "NumRows",
            "type": "Element",
            "required": True,
        },
    )
    num_columns: Optional[NumColumns] = field(
        default=None,
        metadata={
            "name": "NumColumns",
            "type": "Element",
            "required": True,
        },
    )
    num_col_title_rows: Optional[NumColTitleRows] = field(
        default=None,
        metadata={
            "name": "NumColTitleRows",
            "type": "Element",
            "required": True,
        },
    )
    col_desc: List[ColDesc] = field(
        default_factory=list,
        metadata={
            "name": "ColDesc",
            "type": "Element",
            "min_occurs": 1,
        },
    )
    report_data: Optional[ReportData] = field(
        default=None,
        metadata={
            "name": "ReportData",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderAddRqType:
    sales_order_add: Optional[SalesOrderAdd] = field(
        default=None,
        metadata={
            "name": "SalesOrderAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderLineGroupRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
            "required": True,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    sales_order_line_ret: List[SalesOrderLineRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class SalesOrderMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    sales_order_line_mod: List[SalesOrderLineMod] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineMod",
            "type": "Element",
        },
    )
    sales_order_line_group_mod: List[SalesOrderLineGroupMod] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineGroupMod",
            "type": "Element",
        },
    )


@dataclass
class SalesReceiptLineAdd:
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    price_level_ref: Optional[PriceLevelRef] = field(
        default=None,
        metadata={
            "name": "PriceLevelRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    option_for_price_rule_conflict: Optional[OptionForPriceRuleConflict] = (
        field(
            default=None,
            metadata={
                "name": "OptionForPriceRuleConflict",
                "type": "Element",
            },
        )
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    override_item_account_ref: Optional[OverrideItemAccountRef] = field(
        default=None,
        metadata={
            "name": "OverrideItemAccountRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    data_ext: List[DataExt] = field(
        default_factory=list,
        metadata={
            "name": "DataExt",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptLineRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_ref: Optional[ItemRef] = field(
        default=None,
        metadata={
            "name": "ItemRef",
            "type": "Element",
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    rate: Optional[Rate] = field(
        default=None,
        metadata={
            "name": "Rate",
            "type": "Element",
        },
    )
    rate_percent: Optional[RatePercent] = field(
        default=None,
        metadata={
            "name": "RatePercent",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    tax_amount: Optional[TaxAmount] = field(
        default=None,
        metadata={
            "name": "TaxAmount",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    inventory_site_location_ref: Optional[InventorySiteLocationRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteLocationRef",
            "type": "Element",
        },
    )
    serial_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "SerialNumber",
            "type": "Element",
            "max_length": 4095,
        },
    )
    lot_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "LotNumber",
            "type": "Element",
            "max_length": 40,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_taxable: Optional[IsTaxable] = field(
        default=None,
        metadata={
            "name": "IsTaxable",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 29,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class SalesReceiptMod:
    txn_id: Optional[SalesReceiptModTxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    sales_receipt_line_mod: List[SalesReceiptLineMod] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineMod",
            "type": "Element",
        },
    )
    sales_receipt_line_group_mod: List[SalesReceiptLineGroupMod] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineGroupMod",
            "type": "Element",
        },
    )


@dataclass
class SalesTaxPayableQueryRsType:
    sales_tax_payable_ret: List[SalesTaxPayableRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxPayableRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckAddRqType:
    sales_tax_payment_check_add: Optional[SalesTaxPaymentCheckAdd] = field(
        default=None,
        metadata={
            "name": "SalesTaxPaymentCheckAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckAddRsType:
    sales_tax_payment_check_ret: Optional[SalesTaxPaymentCheckRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxPaymentCheckRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckModRsType:
    sales_tax_payment_check_ret: Optional[SalesTaxPaymentCheckRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxPaymentCheckRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesTaxPaymentCheckQueryRsType:
    sales_tax_payment_check_ret: List[SalesTaxPaymentCheckRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxPaymentCheckRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SpecialAccountAddRsType:
    account_ret: Optional[AccountRet] = field(
        default=None,
        metadata={
            "name": "AccountRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SpecialItemAddRqType:
    special_item_add: Optional[SpecialItemAdd] = field(
        default=None,
        metadata={
            "name": "SpecialItemAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SpecialItemAddRsType:
    item_other_charge_ret: Optional[ItemOtherChargeRet] = field(
        default=None,
        metadata={
            "name": "ItemOtherChargeRet",
            "type": "Element",
        },
    )
    item_subtotal_ret: Optional[ItemSubtotalRet] = field(
        default=None,
        metadata={
            "name": "ItemSubtotalRet",
            "type": "Element",
        },
    )
    item_group_ret: Optional[ItemGroupRet] = field(
        default=None,
        metadata={
            "name": "ItemGroupRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class Submenu:
    display_condition: Optional[DisplayCondition] = field(
        default=None,
        metadata={
            "name": "DisplayCondition",
            "type": "Element",
        },
    )
    menu_item: List[MenuItem] = field(
        default_factory=list,
        metadata={
            "name": "MenuItem",
            "type": "Element",
            "min_occurs": 1,
        },
    )


@dataclass
class TransferInventoryAddRqType:
    transfer_inventory_add: Optional[TransferInventoryAdd] = field(
        default=None,
        metadata={
            "name": "TransferInventoryAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryAddRsType:
    transfer_inventory_ret: Optional[TransferInventoryRet] = field(
        default=None,
        metadata={
            "name": "TransferInventoryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryModRqType:
    transfer_inventory_mod: Optional[TransferInventoryMod] = field(
        default=None,
        metadata={
            "name": "TransferInventoryMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryModRsType:
    transfer_inventory_ret: Optional[TransferInventoryRet] = field(
        default=None,
        metadata={
            "name": "TransferInventoryRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class TransferInventoryQueryRsType:
    transfer_inventory_ret: List[TransferInventoryRet] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class UieventSubscriptionAddRqType:
    class Meta:
        name = "UIEventSubscriptionAddRqType"

    uievent_subscription_add: Optional[UieventSubscriptionAdd] = field(
        default=None,
        metadata={
            "name": "UIEventSubscriptionAdd",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class UieventSubscriptionAddRsType:
    class Meta:
        name = "UIEventSubscriptionAddRsType"

    uievent_subscription_ret: Optional[UieventSubscriptionRet] = field(
        default=None,
        metadata={
            "name": "UIEventSubscriptionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class UieventSubscriptionQueryRsType:
    class Meta:
        name = "UIEventSubscriptionQueryRsType"

    uievent_subscription_ret: Optional[UieventSubscriptionRet] = field(
        default=None,
        metadata={
            "name": "UIEventSubscriptionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class UnitOfMeasureSetAddRqType:
    unit_of_measure_set_add: Optional[UnitOfMeasureSetAdd] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class UnitOfMeasureSetAddRsType:
    unit_of_measure_set_ret: Optional[UnitOfMeasureSetRet] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasureSetRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class UnitOfMeasureSetQueryRsType:
    unit_of_measure_set_ret: List[UnitOfMeasureSetRet] = field(
        default_factory=list,
        metadata={
            "name": "UnitOfMeasureSetRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class VendorAddRsType:
    vendor_ret: Optional[VendorRet] = field(
        default=None,
        metadata={
            "name": "VendorRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditAddRqType:
    vendor_credit_add: Optional[VendorCreditAdd] = field(
        default=None,
        metadata={
            "name": "VendorCreditAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditMod:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
            "required": True,
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "required": True,
            "max_length": 16,
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    clear_expense_lines: Optional[ClearExpenseLines] = field(
        default=None,
        metadata={
            "name": "ClearExpenseLines",
            "type": "Element",
        },
    )
    expense_line_mod: List[ExpenseLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineMod",
            "type": "Element",
        },
    )
    clear_item_lines: Optional[ClearItemLines] = field(
        default=None,
        metadata={
            "name": "ClearItemLines",
            "type": "Element",
        },
    )
    item_line_mod: List[ItemLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineMod",
            "type": "Element",
        },
    )
    item_group_line_mod: List[ItemGroupLineMod] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineMod",
            "type": "Element",
        },
    )


@dataclass
class VendorModRsType:
    vendor_ret: Optional[VendorRet] = field(
        default=None,
        metadata={
            "name": "VendorRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VendorQueryRsType:
    vendor_ret: List[VendorRet] = field(
        default_factory=list,
        metadata={
            "name": "VendorRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeAddRqType:
    workers_comp_code_add: Optional[WorkersCompCodeAdd] = field(
        default=None,
        metadata={
            "name": "WorkersCompCodeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeAddRsType:
    workers_comp_code_ret: Optional[WorkersCompCodeRet] = field(
        default=None,
        metadata={
            "name": "WorkersCompCodeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeModRqType:
    workers_comp_code_mod: Optional[WorkersCompCodeMod] = field(
        default=None,
        metadata={
            "name": "WorkersCompCodeMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeModRsType:
    workers_comp_code_ret: Optional[WorkersCompCodeRet] = field(
        default=None,
        metadata={
            "name": "WorkersCompCodeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class WorkersCompCodeQueryRsType:
    workers_comp_code_ret: List[WorkersCompCodeRet] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class ArrefundCreditCardAddRqType:
    class Meta:
        name = "ARRefundCreditCardAddRqType"

    arrefund_credit_card_add: Optional[ArrefundCreditCardAdd] = field(
        default=None,
        metadata={
            "name": "ARRefundCreditCardAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ArrefundCreditCardAddRsType:
    class Meta:
        name = "ARRefundCreditCardAddRsType"

    arrefund_credit_card_ret: Optional[ArrefundCreditCardRet] = field(
        default=None,
        metadata={
            "name": "ARRefundCreditCardRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ArrefundCreditCardQueryRsType:
    class Meta:
        name = "ARRefundCreditCardQueryRsType"

    arrefund_credit_card_ret: List[ArrefundCreditCardRet] = field(
        default_factory=list,
        metadata={
            "name": "ARRefundCreditCardRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class AgingReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillModRqType:
    bill_mod: Optional[BillMod] = field(
        default=None,
        metadata={
            "name": "BillMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckAddRqType:
    bill_payment_check_add: Optional[BillPaymentCheckAdd] = field(
        default=None,
        metadata={
            "name": "BillPaymentCheckAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckAddRsType:
    bill_payment_check_ret: Optional[BillPaymentCheckRet] = field(
        default=None,
        metadata={
            "name": "BillPaymentCheckRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckModRqType:
    bill_payment_check_mod: Optional[BillPaymentCheckMod] = field(
        default=None,
        metadata={
            "name": "BillPaymentCheckMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckModRsType:
    bill_payment_check_ret: Optional[BillPaymentCheckRet] = field(
        default=None,
        metadata={
            "name": "BillPaymentCheckRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCheckQueryRsType:
    bill_payment_check_ret: List[BillPaymentCheckRet] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCreditCardAddRqType:
    bill_payment_credit_card_add: Optional[BillPaymentCreditCardAdd] = field(
        default=None,
        metadata={
            "name": "BillPaymentCreditCardAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCreditCardAddRsType:
    bill_payment_credit_card_ret: Optional[BillPaymentCreditCardRet] = field(
        default=None,
        metadata={
            "name": "BillPaymentCreditCardRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillPaymentCreditCardQueryRsType:
    bill_payment_credit_card_ret: List[BillPaymentCreditCardRet] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCreditCardRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class BillRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    amount_due: Optional[AmountDue] = field(
        default=None,
        metadata={
            "name": "AmountDue",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_due_in_home_currency: Optional[AmountDueInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountDueInHomeCurrency",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    is_paid: Optional[IsPaid] = field(
        default=None,
        metadata={
            "name": "IsPaid",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    expense_line_ret: List[ExpenseLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineRet",
            "type": "Element",
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    item_group_line_ret: List[ItemGroupLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineRet",
            "type": "Element",
        },
    )
    open_amount: Optional[OpenAmount] = field(
        default=None,
        metadata={
            "name": "OpenAmount",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class BudgetSummaryReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CheckModRqType:
    check_mod: Optional[CheckMod] = field(
        default=None,
        metadata={
            "name": "CheckMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CheckRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    address: Optional[Address] = field(
        default=None,
        metadata={
            "name": "Address",
            "type": "Element",
        },
    )
    address_block: Optional[AddressBlock] = field(
        default=None,
        metadata={
            "name": "AddressBlock",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    expense_line_ret: List[ExpenseLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineRet",
            "type": "Element",
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    item_group_line_ret: List[ItemGroupLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CompanyQueryRsType:
    company_ret: Optional[CompanyRet] = field(
        default=None,
        metadata={
            "name": "CompanyRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeModRqType:
    credit_card_charge_mod: Optional[CreditCardChargeMod] = field(
        default=None,
        metadata={
            "name": "CreditCardChargeMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    expense_line_ret: List[ExpenseLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineRet",
            "type": "Element",
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    item_group_line_ret: List[ItemGroupLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CreditCardCreditModRqType:
    credit_card_credit_mod: Optional[CreditCardCreditMod] = field(
        default=None,
        metadata={
            "name": "CreditCardCreditMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    account_ref: Optional[AccountRef] = field(
        default=None,
        metadata={
            "name": "AccountRef",
            "type": "Element",
        },
    )
    payee_entity_ref: Optional[PayeeEntityRef] = field(
        default=None,
        metadata={
            "name": "PayeeEntityRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    amount: Optional[Amount] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    amount_in_home_currency: Optional[AmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "AmountInHomeCurrency",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    expense_line_ret: List[ExpenseLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineRet",
            "type": "Element",
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    item_group_line_ret: List[ItemGroupLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CreditMemoAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
            "required": True,
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    credit_memo_line_add: List[CreditMemoLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineAdd",
            "type": "Element",
        },
    )
    credit_memo_line_group_add: List[CreditMemoLineGroupAdd] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineGroupAdd",
            "type": "Element",
        },
    )
    discount_line_add: Optional[DiscountLineAdd] = field(
        default=None,
        metadata={
            "name": "DiscountLineAdd",
            "type": "Element",
        },
    )
    sales_tax_line_add: Optional[SalesTaxLineAdd] = field(
        default=None,
        metadata={
            "name": "SalesTaxLineAdd",
            "type": "Element",
        },
    )
    shipping_line_add: Optional[ShippingLineAdd] = field(
        default=None,
        metadata={
            "name": "ShippingLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoLineGroupRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
            "required": True,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    credit_memo_line_ret: List[CreditMemoLineRet] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class CreditMemoModRqType:
    credit_memo_mod: Optional[CreditMemoMod] = field(
        default=None,
        metadata={
            "name": "CreditMemoMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CustomDetailReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CustomSummaryReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class EmployeeAddRqType:
    employee_add: Optional[EmployeeAdd] = field(
        default=None,
        metadata={
            "name": "EmployeeAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class EmployeeAddRsType:
    employee_ret: Optional[EmployeeRet] = field(
        default=None,
        metadata={
            "name": "EmployeeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class EmployeeModRqType:
    employee_mod: Optional[EmployeeMod] = field(
        default=None,
        metadata={
            "name": "EmployeeMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class EmployeeModRsType:
    employee_ret: Optional[EmployeeRet] = field(
        default=None,
        metadata={
            "name": "EmployeeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class EmployeeQueryRsType:
    employee_ret: List[EmployeeRet] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )


@dataclass
class EntityQueryRsType:
    customer_ret: List[CustomerRet] = field(
        default_factory=list,
        metadata={
            "name": "CustomerRet",
            "type": "Element",
        },
    )
    employee_ret: List[EmployeeRet] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeRet",
            "type": "Element",
        },
    )
    other_name_ret: List[OtherNameRet] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameRet",
            "type": "Element",
        },
    )
    vendor_ret: List[VendorRet] = field(
        default_factory=list,
        metadata={
            "name": "VendorRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateModRqType:
    estimate_mod: Optional[EstimateMod] = field(
        default=None,
        metadata={
            "name": "EstimateMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    bill_address_block: Optional[BillAddressBlock] = field(
        default=None,
        metadata={
            "name": "BillAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    is_active: Optional[IsActive] = field(
        default=None,
        metadata={
            "name": "IsActive",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    subtotal: Optional[Subtotal] = field(
        default=None,
        metadata={
            "name": "Subtotal",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_percentage: Optional[SalesTaxPercentage] = field(
        default=None,
        metadata={
            "name": "SalesTaxPercentage",
            "type": "Element",
        },
    )
    sales_tax_total: Optional[SalesTaxTotal] = field(
        default=None,
        metadata={
            "name": "SalesTaxTotal",
            "type": "Element",
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    estimate_line_ret: List[EstimateLineRet] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineRet",
            "type": "Element",
        },
    )
    estimate_line_group_ret: List[EstimateLineGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "EstimateLineGroupRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class Form1099CategoryAccountMappingModRqType:
    form1099_category_account_mapping_mod: Optional[
        Form1099CategoryAccountMappingMod
    ] = field(
        default=None,
        metadata={
            "name": "Form1099CategoryAccountMappingMod",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class GeneralDetailReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class GeneralSummaryReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InventoryAdjustmentAddRqType:
    inventory_adjustment_add: Optional[InventoryAdjustmentAdd] = field(
        default=None,
        metadata={
            "name": "InventoryAdjustmentAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceModRqType:
    invoice_mod: Optional[InvoiceMod] = field(
        default=None,
        metadata={
            "name": "InvoiceMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    bill_address_block: Optional[BillAddressBlock] = field(
        default=None,
        metadata={
            "name": "BillAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    is_finance_charge: Optional[IsFinanceCharge] = field(
        default=None,
        metadata={
            "name": "IsFinanceCharge",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    subtotal: Optional[Subtotal] = field(
        default=None,
        metadata={
            "name": "Subtotal",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_percentage: Optional[SalesTaxPercentage] = field(
        default=None,
        metadata={
            "name": "SalesTaxPercentage",
            "type": "Element",
        },
    )
    sales_tax_total: Optional[SalesTaxTotal] = field(
        default=None,
        metadata={
            "name": "SalesTaxTotal",
            "type": "Element",
        },
    )
    applied_amount: Optional[AppliedAmount] = field(
        default=None,
        metadata={
            "name": "AppliedAmount",
            "type": "Element",
        },
    )
    balance_remaining: Optional[BalanceRemaining] = field(
        default=None,
        metadata={
            "name": "BalanceRemaining",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    balance_remaining_in_home_currency: Optional[
        BalanceRemainingInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "BalanceRemainingInHomeCurrency",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_paid: Optional[IsPaid] = field(
        default=None,
        metadata={
            "name": "IsPaid",
            "type": "Element",
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    suggested_discount_amount: Optional[SuggestedDiscountAmount] = field(
        default=None,
        metadata={
            "name": "SuggestedDiscountAmount",
            "type": "Element",
        },
    )
    suggested_discount_date: Optional[SuggestedDiscountDate] = field(
        default=None,
        metadata={
            "name": "SuggestedDiscountDate",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    invoice_line_ret: List[InvoiceLineRet] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineRet",
            "type": "Element",
        },
    )
    invoice_line_group_ret: List[InvoiceLineGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceLineGroupRet",
            "type": "Element",
        },
    )
    discount_line_ret: Optional[DiscountLineRet] = field(
        default=None,
        metadata={
            "name": "DiscountLineRet",
            "type": "Element",
        },
    )
    sales_tax_line_ret: Optional[SalesTaxLineRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxLineRet",
            "type": "Element",
        },
    )
    shipping_line_ret: Optional[ShippingLineRet] = field(
        default=None,
        metadata={
            "name": "ShippingLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ItemReceiptModRqType:
    item_receipt_mod: Optional[ItemReceiptMod] = field(
        default=None,
        metadata={
            "name": "ItemReceiptMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    liability_account_ref: Optional[LiabilityAccountRef] = field(
        default=None,
        metadata={
            "name": "LiabilityAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    expense_line_ret: List[ExpenseLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineRet",
            "type": "Element",
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    item_group_line_ret: List[ItemGroupLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class JobReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class MenuExtensionSubscription:
    add_to_menu: Optional[AddToMenu] = field(
        default=None,
        metadata={
            "name": "AddToMenu",
            "type": "Element",
            "required": True,
        },
    )
    submenu: Optional[Submenu] = field(
        default=None,
        metadata={
            "name": "Submenu",
            "type": "Element",
        },
    )
    menu_item: Optional[MenuItem] = field(
        default=None,
        metadata={
            "name": "MenuItem",
            "type": "Element",
        },
    )


@dataclass
class PayrollDetailReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PayrollSummaryReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PreferencesQueryRsType:
    preferences_ret: Optional[PreferencesRet] = field(
        default=None,
        metadata={
            "name": "PreferencesRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderModRqType:
    purchase_order_mod: Optional[PurchaseOrderMod] = field(
        default=None,
        metadata={
            "name": "PurchaseOrderMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    inventory_site_ref: Optional[InventorySiteRef] = field(
        default=None,
        metadata={
            "name": "InventorySiteRef",
            "type": "Element",
        },
    )
    ship_to_entity_ref: Optional[ShipToEntityRef] = field(
        default=None,
        metadata={
            "name": "ShipToEntityRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    vendor_address: Optional[VendorAddress] = field(
        default=None,
        metadata={
            "name": "VendorAddress",
            "type": "Element",
        },
    )
    vendor_address_block: Optional[VendorAddressBlock] = field(
        default=None,
        metadata={
            "name": "VendorAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    expected_date: Optional[ExpectedDate] = field(
        default=None,
        metadata={
            "name": "ExpectedDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    is_fully_received: Optional[IsFullyReceived] = field(
        default=None,
        metadata={
            "name": "IsFullyReceived",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    vendor_msg: Optional[str] = field(
        default=None,
        metadata={
            "name": "VendorMsg",
            "type": "Element",
            "max_length": 99,
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    other1: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other1",
            "type": "Element",
            "max_length": 25,
        },
    )
    other2: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other2",
            "type": "Element",
            "max_length": 29,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    purchase_order_line_ret: List[PurchaseOrderLineRet] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineRet",
            "type": "Element",
        },
    )
    purchase_order_line_group_ret: List[PurchaseOrderLineGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderLineGroupRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class ReceivePaymentAddRqType:
    receive_payment_add: Optional[ReceivePaymentAdd] = field(
        default=None,
        metadata={
            "name": "ReceivePaymentAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentAddRsType:
    receive_payment_ret: Optional[ReceivePaymentRet] = field(
        default=None,
        metadata={
            "name": "ReceivePaymentRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentModRqType:
    receive_payment_mod: Optional[ReceivePaymentMod] = field(
        default=None,
        metadata={
            "name": "ReceivePaymentMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentModRsType:
    receive_payment_ret: Optional[ReceivePaymentRet] = field(
        default=None,
        metadata={
            "name": "ReceivePaymentRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ReceivePaymentQueryRsType:
    receive_payment_ret: List[ReceivePaymentRet] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderModRqType:
    sales_order_mod: Optional[SalesOrderMod] = field(
        default=None,
        metadata={
            "name": "SalesOrderMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    bill_address_block: Optional[BillAddressBlock] = field(
        default=None,
        metadata={
            "name": "BillAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    subtotal: Optional[Subtotal] = field(
        default=None,
        metadata={
            "name": "Subtotal",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_percentage: Optional[SalesTaxPercentage] = field(
        default=None,
        metadata={
            "name": "SalesTaxPercentage",
            "type": "Element",
        },
    )
    sales_tax_total: Optional[SalesTaxTotal] = field(
        default=None,
        metadata={
            "name": "SalesTaxTotal",
            "type": "Element",
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    is_manually_closed: Optional[IsManuallyClosed] = field(
        default=None,
        metadata={
            "name": "IsManuallyClosed",
            "type": "Element",
        },
    )
    is_fully_invoiced: Optional[IsFullyInvoiced] = field(
        default=None,
        metadata={
            "name": "IsFullyInvoiced",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    sales_order_line_ret: List[SalesOrderLineRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineRet",
            "type": "Element",
        },
    )
    sales_order_line_group_ret: List[SalesOrderLineGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderLineGroupRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class SalesReceiptAdd:
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_receipt_line_add: List[SalesReceiptLineAdd] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineAdd",
            "type": "Element",
        },
    )
    sales_receipt_line_group_add: List[SalesReceiptLineGroupAdd] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineGroupAdd",
            "type": "Element",
        },
    )
    discount_line_add: Optional[DiscountLineAdd] = field(
        default=None,
        metadata={
            "name": "DiscountLineAdd",
            "type": "Element",
        },
    )
    sales_tax_line_add: Optional[SalesTaxLineAdd] = field(
        default=None,
        metadata={
            "name": "SalesTaxLineAdd",
            "type": "Element",
        },
    )
    shipping_line_add: Optional[ShippingLineAdd] = field(
        default=None,
        metadata={
            "name": "ShippingLineAdd",
            "type": "Element",
        },
    )
    def_macro: Optional[str] = field(
        default=None,
        metadata={
            "name": "defMacro",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptLineGroupRet:
    txn_line_id: Optional[TxnLineId] = field(
        default=None,
        metadata={
            "name": "TxnLineID",
            "type": "Element",
            "required": True,
        },
    )
    item_group_ref: Optional[ItemGroupRef] = field(
        default=None,
        metadata={
            "name": "ItemGroupRef",
            "type": "Element",
            "required": True,
        },
    )
    desc: Optional[str] = field(
        default=None,
        metadata={
            "name": "Desc",
            "type": "Element",
            "max_length": 4095,
        },
    )
    quantity: Optional[Quantity] = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    unit_of_measure: Optional[str] = field(
        default=None,
        metadata={
            "name": "UnitOfMeasure",
            "type": "Element",
            "max_length": 31,
        },
    )
    override_uomset_ref: Optional[OverrideUomsetRef] = field(
        default=None,
        metadata={
            "name": "OverrideUOMSetRef",
            "type": "Element",
        },
    )
    is_print_items_in_group: Optional[IsPrintItemsInGroup] = field(
        default=None,
        metadata={
            "name": "IsPrintItemsInGroup",
            "type": "Element",
            "required": True,
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
            "required": True,
        },
    )
    service_date: Optional[ServiceDate] = field(
        default=None,
        metadata={
            "name": "ServiceDate",
            "type": "Element",
        },
    )
    sales_receipt_line_ret: List[SalesReceiptLineRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class SalesReceiptModRqType:
    sales_receipt_mod: Optional[SalesReceiptMod] = field(
        default=None,
        metadata={
            "name": "SalesReceiptMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class TimeReportQueryRsType:
    report_ret: Optional[ReportRet] = field(
        default=None,
        metadata={
            "name": "ReportRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditModRqType:
    vendor_credit_mod: Optional[VendorCreditMod] = field(
        default=None,
        metadata={
            "name": "VendorCreditMod",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    vendor_ref: Optional[VendorRef] = field(
        default=None,
        metadata={
            "name": "VendorRef",
            "type": "Element",
        },
    )
    apaccount_ref: Optional[ApaccountRef] = field(
        default=None,
        metadata={
            "name": "APAccountRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    credit_amount: Optional[CreditAmount] = field(
        default=None,
        metadata={
            "name": "CreditAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    credit_amount_in_home_currency: Optional[CreditAmountInHomeCurrency] = (
        field(
            default=None,
            metadata={
                "name": "CreditAmountInHomeCurrency",
                "type": "Element",
            },
        )
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 20,
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    sales_tax_code_ref: Optional[SalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "SalesTaxCodeRef",
            "type": "Element",
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    expense_line_ret: List[ExpenseLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ExpenseLineRet",
            "type": "Element",
        },
    )
    item_line_ret: List[ItemLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemLineRet",
            "type": "Element",
        },
    )
    item_group_line_ret: List[ItemGroupLineRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupLineRet",
            "type": "Element",
        },
    )
    open_amount: Optional[OpenAmount] = field(
        default=None,
        metadata={
            "name": "OpenAmount",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class BillAddRsType:
    bill_ret: Optional[BillRet] = field(
        default=None,
        metadata={
            "name": "BillRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillModRsType:
    bill_ret: Optional[BillRet] = field(
        default=None,
        metadata={
            "name": "BillRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class BillQueryRsType:
    bill_ret: List[BillRet] = field(
        default_factory=list,
        metadata={
            "name": "BillRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CheckAddRsType:
    check_ret: Optional[CheckRet] = field(
        default=None,
        metadata={
            "name": "CheckRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CheckModRsType:
    check_ret: Optional[CheckRet] = field(
        default=None,
        metadata={
            "name": "CheckRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CheckQueryRsType:
    check_ret: List[CheckRet] = field(
        default_factory=list,
        metadata={
            "name": "CheckRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeAddRsType:
    credit_card_charge_ret: Optional[CreditCardChargeRet] = field(
        default=None,
        metadata={
            "name": "CreditCardChargeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeModRsType:
    credit_card_charge_ret: Optional[CreditCardChargeRet] = field(
        default=None,
        metadata={
            "name": "CreditCardChargeRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardChargeQueryRsType:
    credit_card_charge_ret: List[CreditCardChargeRet] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditAddRsType:
    credit_card_credit_ret: Optional[CreditCardCreditRet] = field(
        default=None,
        metadata={
            "name": "CreditCardCreditRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditModRsType:
    credit_card_credit_ret: Optional[CreditCardCreditRet] = field(
        default=None,
        metadata={
            "name": "CreditCardCreditRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditCardCreditQueryRsType:
    credit_card_credit_ret: List[CreditCardCreditRet] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoAddRqType:
    credit_memo_add: Optional[CreditMemoAdd] = field(
        default=None,
        metadata={
            "name": "CreditMemoAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    araccount_ref: Optional[AraccountRef] = field(
        default=None,
        metadata={
            "name": "ARAccountRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    bill_address_block: Optional[BillAddressBlock] = field(
        default=None,
        metadata={
            "name": "BillAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    ponumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "PONumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    terms_ref: Optional[TermsRef] = field(
        default=None,
        metadata={
            "name": "TermsRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    subtotal: Optional[Subtotal] = field(
        default=None,
        metadata={
            "name": "Subtotal",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_percentage: Optional[SalesTaxPercentage] = field(
        default=None,
        metadata={
            "name": "SalesTaxPercentage",
            "type": "Element",
        },
    )
    sales_tax_total: Optional[SalesTaxTotal] = field(
        default=None,
        metadata={
            "name": "SalesTaxTotal",
            "type": "Element",
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    credit_remaining: Optional[CreditRemaining] = field(
        default=None,
        metadata={
            "name": "CreditRemaining",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    credit_remaining_in_home_currency: Optional[
        CreditRemainingInHomeCurrency
    ] = field(
        default=None,
        metadata={
            "name": "CreditRemainingInHomeCurrency",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    linked_txn: List[LinkedTxn] = field(
        default_factory=list,
        metadata={
            "name": "LinkedTxn",
            "type": "Element",
        },
    )
    credit_memo_line_ret: List[CreditMemoLineRet] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineRet",
            "type": "Element",
        },
    )
    credit_memo_line_group_ret: List[CreditMemoLineGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoLineGroupRet",
            "type": "Element",
        },
    )
    discount_line_ret: Optional[DiscountLineRet] = field(
        default=None,
        metadata={
            "name": "DiscountLineRet",
            "type": "Element",
        },
    )
    sales_tax_line_ret: Optional[SalesTaxLineRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxLineRet",
            "type": "Element",
        },
    )
    shipping_line_ret: Optional[ShippingLineRet] = field(
        default=None,
        metadata={
            "name": "ShippingLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class EstimateAddRsType:
    estimate_ret: Optional[EstimateRet] = field(
        default=None,
        metadata={
            "name": "EstimateRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateModRsType:
    estimate_ret: Optional[EstimateRet] = field(
        default=None,
        metadata={
            "name": "EstimateRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class EstimateQueryRsType:
    estimate_ret: List[EstimateRet] = field(
        default_factory=list,
        metadata={
            "name": "EstimateRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceAddRsType:
    invoice_ret: Optional[InvoiceRet] = field(
        default=None,
        metadata={
            "name": "InvoiceRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceModRsType:
    invoice_ret: Optional[InvoiceRet] = field(
        default=None,
        metadata={
            "name": "InvoiceRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class InvoiceQueryRsType:
    invoice_ret: List[InvoiceRet] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptAddRsType:
    item_receipt_ret: Optional[ItemReceiptRet] = field(
        default=None,
        metadata={
            "name": "ItemReceiptRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptModRsType:
    item_receipt_ret: Optional[ItemReceiptRet] = field(
        default=None,
        metadata={
            "name": "ItemReceiptRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class ItemReceiptQueryRsType:
    item_receipt_ret: List[ItemReceiptRet] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderAddRsType:
    purchase_order_ret: Optional[PurchaseOrderRet] = field(
        default=None,
        metadata={
            "name": "PurchaseOrderRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderModRsType:
    purchase_order_ret: Optional[PurchaseOrderRet] = field(
        default=None,
        metadata={
            "name": "PurchaseOrderRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class PurchaseOrderQueryRsType:
    purchase_order_ret: List[PurchaseOrderRet] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderAddRsType:
    sales_order_ret: Optional[SalesOrderRet] = field(
        default=None,
        metadata={
            "name": "SalesOrderRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderModRsType:
    sales_order_ret: Optional[SalesOrderRet] = field(
        default=None,
        metadata={
            "name": "SalesOrderRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesOrderQueryRsType:
    sales_order_ret: List[SalesOrderRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptAddRqType:
    sales_receipt_add: Optional[SalesReceiptAdd] = field(
        default=None,
        metadata={
            "name": "SalesReceiptAdd",
            "type": "Element",
            "required": True,
        },
    )
    include_ret_element: List[str] = field(
        default_factory=list,
        metadata={
            "name": "IncludeRetElement",
            "type": "Element",
            "max_length": 50,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptRet:
    txn_id: Optional[TxnId] = field(
        default=None,
        metadata={
            "name": "TxnID",
            "type": "Element",
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
        },
    )
    time_modified: Optional[TimeModified] = field(
        default=None,
        metadata={
            "name": "TimeModified",
            "type": "Element",
        },
    )
    edit_sequence: Optional[str] = field(
        default=None,
        metadata={
            "name": "EditSequence",
            "type": "Element",
            "max_length": 16,
        },
    )
    txn_number: Optional[TxnNumber] = field(
        default=None,
        metadata={
            "name": "TxnNumber",
            "type": "Element",
        },
    )
    customer_ref: Optional[CustomerRef] = field(
        default=None,
        metadata={
            "name": "CustomerRef",
            "type": "Element",
        },
    )
    class_ref: Optional[ClassRef] = field(
        default=None,
        metadata={
            "name": "ClassRef",
            "type": "Element",
        },
    )
    template_ref: Optional[TemplateRef] = field(
        default=None,
        metadata={
            "name": "TemplateRef",
            "type": "Element",
        },
    )
    txn_date: Optional[TxnDate] = field(
        default=None,
        metadata={
            "name": "TxnDate",
            "type": "Element",
        },
    )
    ref_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RefNumber",
            "type": "Element",
            "max_length": 11,
        },
    )
    bill_address: Optional[BillAddress] = field(
        default=None,
        metadata={
            "name": "BillAddress",
            "type": "Element",
        },
    )
    bill_address_block: Optional[BillAddressBlock] = field(
        default=None,
        metadata={
            "name": "BillAddressBlock",
            "type": "Element",
        },
    )
    ship_address: Optional[ShipAddress] = field(
        default=None,
        metadata={
            "name": "ShipAddress",
            "type": "Element",
        },
    )
    ship_address_block: Optional[ShipAddressBlock] = field(
        default=None,
        metadata={
            "name": "ShipAddressBlock",
            "type": "Element",
        },
    )
    is_pending: Optional[IsPending] = field(
        default=None,
        metadata={
            "name": "IsPending",
            "type": "Element",
        },
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Element",
            "max_length": 25,
        },
    )
    payment_method_ref: Optional[PaymentMethodRef] = field(
        default=None,
        metadata={
            "name": "PaymentMethodRef",
            "type": "Element",
        },
    )
    due_date: Optional[DueDate] = field(
        default=None,
        metadata={
            "name": "DueDate",
            "type": "Element",
        },
    )
    sales_rep_ref: Optional[SalesRepRef] = field(
        default=None,
        metadata={
            "name": "SalesRepRef",
            "type": "Element",
        },
    )
    ship_date: Optional[ShipDate] = field(
        default=None,
        metadata={
            "name": "ShipDate",
            "type": "Element",
        },
    )
    ship_method_ref: Optional[ShipMethodRef] = field(
        default=None,
        metadata={
            "name": "ShipMethodRef",
            "type": "Element",
        },
    )
    fob: Optional[str] = field(
        default=None,
        metadata={
            "name": "FOB",
            "type": "Element",
            "max_length": 13,
        },
    )
    subtotal: Optional[Subtotal] = field(
        default=None,
        metadata={
            "name": "Subtotal",
            "type": "Element",
        },
    )
    item_sales_tax_ref: Optional[ItemSalesTaxRef] = field(
        default=None,
        metadata={
            "name": "ItemSalesTaxRef",
            "type": "Element",
        },
    )
    sales_tax_percentage: Optional[SalesTaxPercentage] = field(
        default=None,
        metadata={
            "name": "SalesTaxPercentage",
            "type": "Element",
        },
    )
    sales_tax_total: Optional[SalesTaxTotal] = field(
        default=None,
        metadata={
            "name": "SalesTaxTotal",
            "type": "Element",
        },
    )
    total_amount: Optional[TotalAmount] = field(
        default=None,
        metadata={
            "name": "TotalAmount",
            "type": "Element",
        },
    )
    currency_ref: Optional[CurrencyRef] = field(
        default=None,
        metadata={
            "name": "CurrencyRef",
            "type": "Element",
        },
    )
    exchange_rate: Optional[ExchangeRate] = field(
        default=None,
        metadata={
            "name": "ExchangeRate",
            "type": "Element",
        },
    )
    total_amount_in_home_currency: Optional[TotalAmountInHomeCurrency] = field(
        default=None,
        metadata={
            "name": "TotalAmountInHomeCurrency",
            "type": "Element",
        },
    )
    memo: Optional[str] = field(
        default=None,
        metadata={
            "name": "Memo",
            "type": "Element",
            "max_length": 4095,
        },
    )
    customer_msg_ref: Optional[CustomerMsgRef] = field(
        default=None,
        metadata={
            "name": "CustomerMsgRef",
            "type": "Element",
        },
    )
    is_to_be_printed: Optional[IsToBePrinted] = field(
        default=None,
        metadata={
            "name": "IsToBePrinted",
            "type": "Element",
        },
    )
    is_to_be_emailed: Optional[IsToBeEmailed] = field(
        default=None,
        metadata={
            "name": "IsToBeEmailed",
            "type": "Element",
        },
    )
    is_tax_included: Optional[IsTaxIncluded] = field(
        default=None,
        metadata={
            "name": "IsTaxIncluded",
            "type": "Element",
        },
    )
    customer_sales_tax_code_ref: Optional[CustomerSalesTaxCodeRef] = field(
        default=None,
        metadata={
            "name": "CustomerSalesTaxCodeRef",
            "type": "Element",
        },
    )
    deposit_to_account_ref: Optional[DepositToAccountRef] = field(
        default=None,
        metadata={
            "name": "DepositToAccountRef",
            "type": "Element",
        },
    )
    credit_card_txn_info: Optional[CreditCardTxnInfo] = field(
        default=None,
        metadata={
            "name": "CreditCardTxnInfo",
            "type": "Element",
        },
    )
    other: Optional[str] = field(
        default=None,
        metadata={
            "name": "Other",
            "type": "Element",
            "max_length": 29,
        },
    )
    external_guid: Optional[ExternalGuid] = field(
        default=None,
        metadata={
            "name": "ExternalGUID",
            "type": "Element",
        },
    )
    sales_receipt_line_ret: List[SalesReceiptLineRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineRet",
            "type": "Element",
        },
    )
    sales_receipt_line_group_ret: List[SalesReceiptLineGroupRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptLineGroupRet",
            "type": "Element",
        },
    )
    discount_line_ret: Optional[DiscountLineRet] = field(
        default=None,
        metadata={
            "name": "DiscountLineRet",
            "type": "Element",
        },
    )
    sales_tax_line_ret: Optional[SalesTaxLineRet] = field(
        default=None,
        metadata={
            "name": "SalesTaxLineRet",
            "type": "Element",
        },
    )
    shipping_line_ret: Optional[ShippingLineRet] = field(
        default=None,
        metadata={
            "name": "ShippingLineRet",
            "type": "Element",
        },
    )
    data_ext_ret: List[DataExtRet] = field(
        default_factory=list,
        metadata={
            "name": "DataExtRet",
            "type": "Element",
        },
    )


@dataclass
class UiextensionSubscriptionAdd:
    class Meta:
        name = "UIExtensionSubscriptionAdd"

    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    comcallback_info: Optional[ComcallbackInfo] = field(
        default=None,
        metadata={
            "name": "COMCallbackInfo",
            "type": "Element",
            "required": True,
        },
    )
    menu_extension_subscription: Optional[MenuExtensionSubscription] = field(
        default=None,
        metadata={
            "name": "MenuExtensionSubscription",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class UiextensionSubscriptionRet:
    class Meta:
        name = "UIExtensionSubscriptionRet"

    subscriber_id: Optional[SubscriberId] = field(
        default=None,
        metadata={
            "name": "SubscriberID",
            "type": "Element",
            "required": True,
        },
    )
    time_created: Optional[TimeCreated] = field(
        default=None,
        metadata={
            "name": "TimeCreated",
            "type": "Element",
            "required": True,
        },
    )
    time_last_processed: Optional[TimeLastProcessed] = field(
        default=None,
        metadata={
            "name": "TimeLastProcessed",
            "type": "Element",
        },
    )
    comcallback_info: Optional[ComcallbackInfo] = field(
        default=None,
        metadata={
            "name": "COMCallbackInfo",
            "type": "Element",
            "required": True,
        },
    )
    menu_extension_subscription: Optional[MenuExtensionSubscription] = field(
        default=None,
        metadata={
            "name": "MenuExtensionSubscription",
            "type": "Element",
            "required": True,
        },
    )


@dataclass
class VendorCreditAddRsType:
    vendor_credit_ret: Optional[VendorCreditRet] = field(
        default=None,
        metadata={
            "name": "VendorCreditRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditModRsType:
    vendor_credit_ret: Optional[VendorCreditRet] = field(
        default=None,
        metadata={
            "name": "VendorCreditRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class VendorCreditQueryRsType:
    vendor_credit_ret: List[VendorCreditRet] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoAddRsType:
    credit_memo_ret: Optional[CreditMemoRet] = field(
        default=None,
        metadata={
            "name": "CreditMemoRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoModRsType:
    credit_memo_ret: Optional[CreditMemoRet] = field(
        default=None,
        metadata={
            "name": "CreditMemoRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class CreditMemoQueryRsType:
    credit_memo_ret: List[CreditMemoRet] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class QbxmlmsgsRq:
    class Meta:
        name = "QBXMLMsgsRq"

    host_query_rq: List[HostQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "HostQueryRq",
            "type": "Element",
        },
    )
    company_query_rq: List[CompanyQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CompanyQueryRq",
            "type": "Element",
        },
    )
    company_activity_query_rq: List[CompanyActivityQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CompanyActivityQueryRq",
            "type": "Element",
        },
    )
    preferences_query_rq: List[PreferencesQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "PreferencesQueryRq",
            "type": "Element",
        },
    )
    account_add_rq: List[AccountAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "AccountAddRq",
            "type": "Element",
        },
    )
    account_mod_rq: List[AccountModRqType] = field(
        default_factory=list,
        metadata={
            "name": "AccountModRq",
            "type": "Element",
        },
    )
    account_query_rq: List[AccountQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "AccountQueryRq",
            "type": "Element",
        },
    )
    special_account_add_rq: List[SpecialAccountAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "SpecialAccountAddRq",
            "type": "Element",
        },
    )
    account_tax_line_info_query_rq: List[AccountTaxLineInfoQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "AccountTaxLineInfoQueryRq",
                "type": "Element",
            },
        )
    )
    lead_add_rq: List[LeadAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "LeadAddRq",
            "type": "Element",
        },
    )
    lead_mod_rq: List[LeadModRqType] = field(
        default_factory=list,
        metadata={
            "name": "LeadModRq",
            "type": "Element",
        },
    )
    lead_query_rq: List[LeadQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "LeadQueryRq",
            "type": "Element",
        },
    )
    customer_add_rq: List[CustomerAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerAddRq",
            "type": "Element",
        },
    )
    customer_mod_rq: List[CustomerModRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerModRq",
            "type": "Element",
        },
    )
    customer_query_rq: List[CustomerQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerQueryRq",
            "type": "Element",
        },
    )
    employee_add_rq: List[EmployeeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeAddRq",
            "type": "Element",
        },
    )
    employee_mod_rq: List[EmployeeModRqType] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeModRq",
            "type": "Element",
        },
    )
    employee_query_rq: List[EmployeeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeQueryRq",
            "type": "Element",
        },
    )
    other_name_add_rq: List[OtherNameAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameAddRq",
            "type": "Element",
        },
    )
    other_name_mod_rq: List[OtherNameModRqType] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameModRq",
            "type": "Element",
        },
    )
    other_name_query_rq: List[OtherNameQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameQueryRq",
            "type": "Element",
        },
    )
    vendor_add_rq: List[VendorAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorAddRq",
            "type": "Element",
        },
    )
    vendor_mod_rq: List[VendorModRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorModRq",
            "type": "Element",
        },
    )
    vendor_query_rq: List[VendorQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorQueryRq",
            "type": "Element",
        },
    )
    entity_query_rq: List[EntityQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "EntityQueryRq",
            "type": "Element",
        },
    )
    standard_terms_add_rq: List[StandardTermsAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "StandardTermsAddRq",
            "type": "Element",
        },
    )
    standard_terms_query_rq: List[StandardTermsQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "StandardTermsQueryRq",
            "type": "Element",
        },
    )
    date_driven_terms_add_rq: List[DateDrivenTermsAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "DateDrivenTermsAddRq",
            "type": "Element",
        },
    )
    date_driven_terms_query_rq: List[DateDrivenTermsQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "DateDrivenTermsQueryRq",
            "type": "Element",
        },
    )
    terms_query_rq: List[TermsQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TermsQueryRq",
            "type": "Element",
        },
    )
    class_add_rq: List[ClassAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ClassAddRq",
            "type": "Element",
        },
    )
    class_mod_rq: List[ClassModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ClassModRq",
            "type": "Element",
        },
    )
    class_query_rq: List[ClassQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ClassQueryRq",
            "type": "Element",
        },
    )
    sales_rep_add_rq: List[SalesRepAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepAddRq",
            "type": "Element",
        },
    )
    sales_rep_mod_rq: List[SalesRepModRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepModRq",
            "type": "Element",
        },
    )
    sales_rep_query_rq: List[SalesRepQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepQueryRq",
            "type": "Element",
        },
    )
    customer_type_add_rq: List[CustomerTypeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerTypeAddRq",
            "type": "Element",
        },
    )
    customer_type_query_rq: List[CustomerTypeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerTypeQueryRq",
            "type": "Element",
        },
    )
    vendor_type_add_rq: List[VendorTypeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorTypeAddRq",
            "type": "Element",
        },
    )
    vendor_type_query_rq: List[VendorTypeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorTypeQueryRq",
            "type": "Element",
        },
    )
    job_type_add_rq: List[JobTypeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "JobTypeAddRq",
            "type": "Element",
        },
    )
    job_type_query_rq: List[JobTypeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "JobTypeQueryRq",
            "type": "Element",
        },
    )
    customer_msg_add_rq: List[CustomerMsgAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerMsgAddRq",
            "type": "Element",
        },
    )
    customer_msg_query_rq: List[CustomerMsgQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerMsgQueryRq",
            "type": "Element",
        },
    )
    payment_method_add_rq: List[PaymentMethodAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "PaymentMethodAddRq",
            "type": "Element",
        },
    )
    payment_method_query_rq: List[PaymentMethodQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "PaymentMethodQueryRq",
            "type": "Element",
        },
    )
    ship_method_add_rq: List[ShipMethodAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ShipMethodAddRq",
            "type": "Element",
        },
    )
    ship_method_query_rq: List[ShipMethodQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ShipMethodQueryRq",
            "type": "Element",
        },
    )
    sales_tax_code_add_rq: List[SalesTaxCodeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeAddRq",
            "type": "Element",
        },
    )
    sales_tax_code_mod_rq: List[SalesTaxCodeModRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeModRq",
            "type": "Element",
        },
    )
    sales_tax_code_query_rq: List[SalesTaxCodeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeQueryRq",
            "type": "Element",
        },
    )
    to_do_add_rq: List[ToDoAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ToDoAddRq",
            "type": "Element",
        },
    )
    to_do_mod_rq: List[ToDoModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ToDoModRq",
            "type": "Element",
        },
    )
    to_do_query_rq: List[ToDoQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ToDoQueryRq",
            "type": "Element",
        },
    )
    item_service_add_rq: List[ItemServiceAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceAddRq",
            "type": "Element",
        },
    )
    item_service_mod_rq: List[ItemServiceModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceModRq",
            "type": "Element",
        },
    )
    item_service_query_rq: List[ItemServiceQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceQueryRq",
            "type": "Element",
        },
    )
    item_non_inventory_add_rq: List[ItemNonInventoryAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryAddRq",
            "type": "Element",
        },
    )
    item_non_inventory_mod_rq: List[ItemNonInventoryModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryModRq",
            "type": "Element",
        },
    )
    item_non_inventory_query_rq: List[ItemNonInventoryQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryQueryRq",
            "type": "Element",
        },
    )
    item_other_charge_add_rq: List[ItemOtherChargeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeAddRq",
            "type": "Element",
        },
    )
    item_other_charge_mod_rq: List[ItemOtherChargeModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeModRq",
            "type": "Element",
        },
    )
    item_other_charge_query_rq: List[ItemOtherChargeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeQueryRq",
            "type": "Element",
        },
    )
    item_inventory_add_rq: List[ItemInventoryAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAddRq",
            "type": "Element",
        },
    )
    item_inventory_mod_rq: List[ItemInventoryModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryModRq",
            "type": "Element",
        },
    )
    item_inventory_query_rq: List[ItemInventoryQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryQueryRq",
            "type": "Element",
        },
    )
    item_inventory_assembly_add_rq: List[ItemInventoryAssemblyAddRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "ItemInventoryAssemblyAddRq",
                "type": "Element",
            },
        )
    )
    item_inventory_assembly_mod_rq: List[ItemInventoryAssemblyModRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "ItemInventoryAssemblyModRq",
                "type": "Element",
            },
        )
    )
    item_inventory_assembly_query_rq: List[
        ItemInventoryAssemblyQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyQueryRq",
            "type": "Element",
        },
    )
    item_fixed_asset_add_rq: List[ItemFixedAssetAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetAddRq",
            "type": "Element",
        },
    )
    item_fixed_asset_mod_rq: List[ItemFixedAssetModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetModRq",
            "type": "Element",
        },
    )
    item_fixed_asset_query_rq: List[ItemFixedAssetQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetQueryRq",
            "type": "Element",
        },
    )
    item_subtotal_add_rq: List[ItemSubtotalAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalAddRq",
            "type": "Element",
        },
    )
    item_subtotal_mod_rq: List[ItemSubtotalModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalModRq",
            "type": "Element",
        },
    )
    item_subtotal_query_rq: List[ItemSubtotalQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalQueryRq",
            "type": "Element",
        },
    )
    item_discount_add_rq: List[ItemDiscountAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountAddRq",
            "type": "Element",
        },
    )
    item_discount_mod_rq: List[ItemDiscountModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountModRq",
            "type": "Element",
        },
    )
    item_discount_query_rq: List[ItemDiscountQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountQueryRq",
            "type": "Element",
        },
    )
    item_payment_add_rq: List[ItemPaymentAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentAddRq",
            "type": "Element",
        },
    )
    item_payment_mod_rq: List[ItemPaymentModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentModRq",
            "type": "Element",
        },
    )
    item_payment_query_rq: List[ItemPaymentQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentQueryRq",
            "type": "Element",
        },
    )
    item_sales_tax_add_rq: List[ItemSalesTaxAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxAddRq",
            "type": "Element",
        },
    )
    item_sales_tax_mod_rq: List[ItemSalesTaxModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxModRq",
            "type": "Element",
        },
    )
    item_sales_tax_query_rq: List[ItemSalesTaxQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxQueryRq",
            "type": "Element",
        },
    )
    item_sales_tax_group_add_rq: List[ItemSalesTaxGroupAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupAddRq",
            "type": "Element",
        },
    )
    item_sales_tax_group_mod_rq: List[ItemSalesTaxGroupModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupModRq",
            "type": "Element",
        },
    )
    item_sales_tax_group_query_rq: List[ItemSalesTaxGroupQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupQueryRq",
            "type": "Element",
        },
    )
    item_group_add_rq: List[ItemGroupAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupAddRq",
            "type": "Element",
        },
    )
    item_group_mod_rq: List[ItemGroupModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupModRq",
            "type": "Element",
        },
    )
    item_group_query_rq: List[ItemGroupQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupQueryRq",
            "type": "Element",
        },
    )
    special_item_add_rq: List[SpecialItemAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "SpecialItemAddRq",
            "type": "Element",
        },
    )
    item_query_rq: List[ItemQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemQueryRq",
            "type": "Element",
        },
    )
    payroll_item_wage_add_rq: List[PayrollItemWageAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "PayrollItemWageAddRq",
            "type": "Element",
        },
    )
    payroll_item_wage_query_rq: List[PayrollItemWageQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "PayrollItemWageQueryRq",
            "type": "Element",
        },
    )
    payroll_item_non_wage_query_rq: List[PayrollItemNonWageQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "PayrollItemNonWageQueryRq",
                "type": "Element",
            },
        )
    )
    template_query_rq: List[TemplateQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TemplateQueryRq",
            "type": "Element",
        },
    )
    price_level_add_rq: List[PriceLevelAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelAddRq",
            "type": "Element",
        },
    )
    price_level_mod_rq: List[PriceLevelModRqType] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelModRq",
            "type": "Element",
        },
    )
    price_level_query_rq: List[PriceLevelQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelQueryRq",
            "type": "Element",
        },
    )
    billing_rate_add_rq: List[BillingRateAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillingRateAddRq",
            "type": "Element",
        },
    )
    billing_rate_query_rq: List[BillingRateQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillingRateQueryRq",
            "type": "Element",
        },
    )
    vehicle_add_rq: List[VehicleAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleAddRq",
            "type": "Element",
        },
    )
    vehicle_mod_rq: List[VehicleModRqType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleModRq",
            "type": "Element",
        },
    )
    vehicle_query_rq: List[VehicleQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleQueryRq",
            "type": "Element",
        },
    )
    unit_of_measure_set_add_rq: List[UnitOfMeasureSetAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "UnitOfMeasureSetAddRq",
            "type": "Element",
        },
    )
    unit_of_measure_set_query_rq: List[UnitOfMeasureSetQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "UnitOfMeasureSetQueryRq",
            "type": "Element",
        },
    )
    workers_comp_code_add_rq: List[WorkersCompCodeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeAddRq",
            "type": "Element",
        },
    )
    workers_comp_code_mod_rq: List[WorkersCompCodeModRqType] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeModRq",
            "type": "Element",
        },
    )
    workers_comp_code_query_rq: List[WorkersCompCodeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeQueryRq",
            "type": "Element",
        },
    )
    form1099_category_account_mapping_mod_rq: List[
        Form1099CategoryAccountMappingModRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "Form1099CategoryAccountMappingModRq",
            "type": "Element",
        },
    )
    form1099_category_account_mapping_query_rq: List[
        Form1099CategoryAccountMappingQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "Form1099CategoryAccountMappingQueryRq",
            "type": "Element",
        },
    )
    sales_tax_return_query_rq: List[SalesTaxReturnQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxReturnQueryRq",
            "type": "Element",
        },
    )
    sales_tax_return_line_query_rq: List[SalesTaxReturnLineQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxReturnLineQueryRq",
                "type": "Element",
            },
        )
    )
    currency_add_rq: List[CurrencyAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyAddRq",
            "type": "Element",
        },
    )
    currency_mod_rq: List[CurrencyModRqType] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyModRq",
            "type": "Element",
        },
    )
    currency_query_rq: List[CurrencyQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyQueryRq",
            "type": "Element",
        },
    )
    payroll_last_period_query_rq: List[PayrollLastPeriodQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "PayrollLastPeriodQueryRq",
            "type": "Element",
        },
    )
    inventory_site_add_rq: List[InventorySiteAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteAddRq",
            "type": "Element",
        },
    )
    inventory_site_mod_rq: List[InventorySiteModRqType] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteModRq",
            "type": "Element",
        },
    )
    inventory_site_query_rq: List[InventorySiteQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteQueryRq",
            "type": "Element",
        },
    )
    invoice_add_rq: List[InvoiceAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceAddRq",
            "type": "Element",
        },
    )
    invoice_mod_rq: List[InvoiceModRqType] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceModRq",
            "type": "Element",
        },
    )
    invoice_query_rq: List[InvoiceQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceQueryRq",
            "type": "Element",
        },
    )
    estimate_add_rq: List[EstimateAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "EstimateAddRq",
            "type": "Element",
        },
    )
    estimate_mod_rq: List[EstimateModRqType] = field(
        default_factory=list,
        metadata={
            "name": "EstimateModRq",
            "type": "Element",
        },
    )
    estimate_query_rq: List[EstimateQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "EstimateQueryRq",
            "type": "Element",
        },
    )
    sales_order_add_rq: List[SalesOrderAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderAddRq",
            "type": "Element",
        },
    )
    sales_order_mod_rq: List[SalesOrderModRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderModRq",
            "type": "Element",
        },
    )
    sales_order_query_rq: List[SalesOrderQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderQueryRq",
            "type": "Element",
        },
    )
    sales_receipt_add_rq: List[SalesReceiptAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptAddRq",
            "type": "Element",
        },
    )
    sales_receipt_mod_rq: List[SalesReceiptModRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptModRq",
            "type": "Element",
        },
    )
    sales_receipt_query_rq: List[SalesReceiptQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptQueryRq",
            "type": "Element",
        },
    )
    credit_memo_add_rq: List[CreditMemoAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoAddRq",
            "type": "Element",
        },
    )
    credit_memo_mod_rq: List[CreditMemoModRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoModRq",
            "type": "Element",
        },
    )
    credit_memo_query_rq: List[CreditMemoQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoQueryRq",
            "type": "Element",
        },
    )
    receive_payment_add_rq: List[ReceivePaymentAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentAddRq",
            "type": "Element",
        },
    )
    receive_payment_mod_rq: List[ReceivePaymentModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentModRq",
            "type": "Element",
        },
    )
    receive_payment_query_rq: List[ReceivePaymentQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentQueryRq",
            "type": "Element",
        },
    )
    receive_payment_to_deposit_query_rq: List[
        ReceivePaymentToDepositQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentToDepositQueryRq",
            "type": "Element",
        },
    )
    charge_add_rq: List[ChargeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ChargeAddRq",
            "type": "Element",
        },
    )
    charge_mod_rq: List[ChargeModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ChargeModRq",
            "type": "Element",
        },
    )
    charge_query_rq: List[ChargeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ChargeQueryRq",
            "type": "Element",
        },
    )
    purchase_order_add_rq: List[PurchaseOrderAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderAddRq",
            "type": "Element",
        },
    )
    purchase_order_mod_rq: List[PurchaseOrderModRqType] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderModRq",
            "type": "Element",
        },
    )
    purchase_order_query_rq: List[PurchaseOrderQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderQueryRq",
            "type": "Element",
        },
    )
    bill_add_rq: List[BillAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillAddRq",
            "type": "Element",
        },
    )
    bill_mod_rq: List[BillModRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillModRq",
            "type": "Element",
        },
    )
    bill_query_rq: List[BillQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillQueryRq",
            "type": "Element",
        },
    )
    item_receipt_add_rq: List[ItemReceiptAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptAddRq",
            "type": "Element",
        },
    )
    item_receipt_mod_rq: List[ItemReceiptModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptModRq",
            "type": "Element",
        },
    )
    item_receipt_query_rq: List[ItemReceiptQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptQueryRq",
            "type": "Element",
        },
    )
    vendor_credit_add_rq: List[VendorCreditAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditAddRq",
            "type": "Element",
        },
    )
    vendor_credit_mod_rq: List[VendorCreditModRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditModRq",
            "type": "Element",
        },
    )
    vendor_credit_query_rq: List[VendorCreditQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditQueryRq",
            "type": "Element",
        },
    )
    bill_payment_check_add_rq: List[BillPaymentCheckAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckAddRq",
            "type": "Element",
        },
    )
    bill_payment_check_mod_rq: List[BillPaymentCheckModRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckModRq",
            "type": "Element",
        },
    )
    bill_payment_check_query_rq: List[BillPaymentCheckQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckQueryRq",
            "type": "Element",
        },
    )
    bill_payment_credit_card_add_rq: List[BillPaymentCreditCardAddRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "BillPaymentCreditCardAddRq",
                "type": "Element",
            },
        )
    )
    bill_payment_credit_card_query_rq: List[
        BillPaymentCreditCardQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCreditCardQueryRq",
            "type": "Element",
        },
    )
    bill_to_pay_query_rq: List[BillToPayQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "BillToPayQueryRq",
            "type": "Element",
        },
    )
    sales_tax_payment_check_add_rq: List[SalesTaxPaymentCheckAddRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckAddRq",
                "type": "Element",
            },
        )
    )
    sales_tax_payment_check_mod_rq: List[SalesTaxPaymentCheckModRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckModRq",
                "type": "Element",
            },
        )
    )
    sales_tax_payment_check_query_rq: List[SalesTaxPaymentCheckQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckQueryRq",
                "type": "Element",
            },
        )
    )
    sales_tax_payable_query_rq: List[SalesTaxPayableQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxPayableQueryRq",
            "type": "Element",
        },
    )
    inventory_adjustment_add_rq: List[InventoryAdjustmentAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentAddRq",
            "type": "Element",
        },
    )
    inventory_adjustment_mod_rq: List[InventoryAdjustmentModRqType] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentModRq",
            "type": "Element",
        },
    )
    inventory_adjustment_query_rq: List[InventoryAdjustmentQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "InventoryAdjustmentQueryRq",
                "type": "Element",
            },
        )
    )
    time_tracking_add_rq: List[TimeTrackingAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingAddRq",
            "type": "Element",
        },
    )
    time_tracking_mod_rq: List[TimeTrackingModRqType] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingModRq",
            "type": "Element",
        },
    )
    time_tracking_query_rq: List[TimeTrackingQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingQueryRq",
            "type": "Element",
        },
    )
    check_add_rq: List[CheckAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CheckAddRq",
            "type": "Element",
        },
    )
    check_mod_rq: List[CheckModRqType] = field(
        default_factory=list,
        metadata={
            "name": "CheckModRq",
            "type": "Element",
        },
    )
    check_query_rq: List[CheckQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CheckQueryRq",
            "type": "Element",
        },
    )
    credit_card_charge_add_rq: List[CreditCardChargeAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeAddRq",
            "type": "Element",
        },
    )
    credit_card_charge_mod_rq: List[CreditCardChargeModRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeModRq",
            "type": "Element",
        },
    )
    credit_card_charge_query_rq: List[CreditCardChargeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeQueryRq",
            "type": "Element",
        },
    )
    credit_card_credit_add_rq: List[CreditCardCreditAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditAddRq",
            "type": "Element",
        },
    )
    credit_card_credit_mod_rq: List[CreditCardCreditModRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditModRq",
            "type": "Element",
        },
    )
    credit_card_credit_query_rq: List[CreditCardCreditQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditQueryRq",
            "type": "Element",
        },
    )
    journal_entry_add_rq: List[JournalEntryAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryAddRq",
            "type": "Element",
        },
    )
    journal_entry_mod_rq: List[JournalEntryModRqType] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryModRq",
            "type": "Element",
        },
    )
    journal_entry_query_rq: List[JournalEntryQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryQueryRq",
            "type": "Element",
        },
    )
    deposit_add_rq: List[DepositAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "DepositAddRq",
            "type": "Element",
        },
    )
    deposit_mod_rq: List[DepositModRqType] = field(
        default_factory=list,
        metadata={
            "name": "DepositModRq",
            "type": "Element",
        },
    )
    deposit_query_rq: List[DepositQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "DepositQueryRq",
            "type": "Element",
        },
    )
    list_del_rq: List[ListDelRqType] = field(
        default_factory=list,
        metadata={
            "name": "ListDelRq",
            "type": "Element",
        },
    )
    list_merge_rq: List[ListMergeRqType] = field(
        default_factory=list,
        metadata={
            "name": "ListMergeRq",
            "type": "Element",
        },
    )
    list_deleted_query_rq: List[ListDeletedQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ListDeletedQueryRq",
            "type": "Element",
        },
    )
    txn_del_rq: List[TxnDelRqType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDelRq",
            "type": "Element",
        },
    )
    txn_void_rq: List[TxnVoidRqType] = field(
        default_factory=list,
        metadata={
            "name": "TxnVoidRq",
            "type": "Element",
        },
    )
    txn_deleted_query_rq: List[TxnDeletedQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDeletedQueryRq",
            "type": "Element",
        },
    )
    cleared_status_mod_rq: List[ClearedStatusModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ClearedStatusModRq",
            "type": "Element",
        },
    )
    list_display_add_rq: List[ListDisplayAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ListDisplayAddRq",
            "type": "Element",
        },
    )
    list_display_mod_rq: List[ListDisplayModRqType] = field(
        default_factory=list,
        metadata={
            "name": "ListDisplayModRq",
            "type": "Element",
        },
    )
    txn_display_add_rq: List[TxnDisplayAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDisplayAddRq",
            "type": "Element",
        },
    )
    txn_display_mod_rq: List[TxnDisplayModRqType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDisplayModRq",
            "type": "Element",
        },
    )
    data_event_recovery_info_del_rq: List[DataEventRecoveryInfoDelRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "DataEventRecoveryInfoDelRq",
                "type": "Element",
            },
        )
    )
    data_event_recovery_info_query_rq: List[
        DataEventRecoveryInfoQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "DataEventRecoveryInfoQueryRq",
            "type": "Element",
        },
    )
    transaction_query_rq: List[TransactionQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransactionQueryRq",
            "type": "Element",
        },
    )
    build_assembly_add_rq: List[BuildAssemblyAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyAddRq",
            "type": "Element",
        },
    )
    build_assembly_mod_rq: List[BuildAssemblyModRqType] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyModRq",
            "type": "Element",
        },
    )
    build_assembly_query_rq: List[BuildAssemblyQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyQueryRq",
            "type": "Element",
        },
    )
    item_assemblies_can_build_query_rq: List[
        ItemAssembliesCanBuildQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "ItemAssembliesCanBuildQueryRq",
            "type": "Element",
        },
    )
    arrefund_credit_card_add_rq: List[ArrefundCreditCardAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "ARRefundCreditCardAddRq",
            "type": "Element",
        },
    )
    arrefund_credit_card_query_rq: List[ArrefundCreditCardQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ARRefundCreditCardQueryRq",
            "type": "Element",
        },
    )
    vehicle_mileage_add_rq: List[VehicleMileageAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleMileageAddRq",
            "type": "Element",
        },
    )
    vehicle_mileage_query_rq: List[VehicleMileageQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleMileageQueryRq",
            "type": "Element",
        },
    )
    transfer_inventory_add_rq: List[TransferInventoryAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryAddRq",
            "type": "Element",
        },
    )
    transfer_inventory_mod_rq: List[TransferInventoryModRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryModRq",
            "type": "Element",
        },
    )
    transfer_inventory_query_rq: List[TransferInventoryQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryQueryRq",
            "type": "Element",
        },
    )
    item_sites_query_rq: List[ItemSitesQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSitesQueryRq",
            "type": "Element",
        },
    )
    bar_code_query_rq: List[BarCodeQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "BarCodeQueryRq",
            "type": "Element",
        },
    )
    transfer_add_rq: List[TransferAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransferAddRq",
            "type": "Element",
        },
    )
    transfer_mod_rq: List[TransferModRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransferModRq",
            "type": "Element",
        },
    )
    transfer_query_rq: List[TransferQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TransferQueryRq",
            "type": "Element",
        },
    )
    general_summary_report_query_rq: List[GeneralSummaryReportQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "GeneralSummaryReportQueryRq",
                "type": "Element",
            },
        )
    )
    job_report_query_rq: List[JobReportQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "JobReportQueryRq",
            "type": "Element",
        },
    )
    time_report_query_rq: List[TimeReportQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "TimeReportQueryRq",
            "type": "Element",
        },
    )
    aging_report_query_rq: List[AgingReportQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "AgingReportQueryRq",
            "type": "Element",
        },
    )
    budget_summary_report_query_rq: List[BudgetSummaryReportQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "BudgetSummaryReportQueryRq",
                "type": "Element",
            },
        )
    )
    general_detail_report_query_rq: List[GeneralDetailReportQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "GeneralDetailReportQueryRq",
                "type": "Element",
            },
        )
    )
    custom_detail_report_query_rq: List[CustomDetailReportQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "CustomDetailReportQueryRq",
            "type": "Element",
        },
    )
    custom_summary_report_query_rq: List[CustomSummaryReportQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "CustomSummaryReportQueryRq",
                "type": "Element",
            },
        )
    )
    payroll_detail_report_query_rq: List[PayrollDetailReportQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "PayrollDetailReportQueryRq",
                "type": "Element",
            },
        )
    )
    payroll_summary_report_query_rq: List[PayrollSummaryReportQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "PayrollSummaryReportQueryRq",
                "type": "Element",
            },
        )
    )
    data_ext_def_add_rq: List[DataExtDefAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefAddRq",
            "type": "Element",
        },
    )
    data_ext_def_mod_rq: List[DataExtDefModRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefModRq",
            "type": "Element",
        },
    )
    data_ext_def_del_rq: List[DataExtDefDelRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefDelRq",
            "type": "Element",
        },
    )
    data_ext_def_query_rq: List[DataExtDefQueryRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefQueryRq",
            "type": "Element",
        },
    )
    data_ext_add_rq: List[DataExtAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtAddRq",
            "type": "Element",
        },
    )
    data_ext_mod_rq: List[DataExtModRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtModRq",
            "type": "Element",
        },
    )
    data_ext_del_rq: List[DataExtDelRqType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDelRq",
            "type": "Element",
        },
    )
    old_message_set_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "oldMessageSetID",
            "type": "Attribute",
        },
    )
    new_message_set_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "newMessageSetID",
            "type": "Attribute",
        },
    )
    response_data: QbxmlmsgsRqResponseData = field(
        default=QbxmlmsgsRqResponseData.INCLUDE_ALL,
        metadata={
            "name": "responseData",
            "type": "Attribute",
        },
    )
    on_error: Optional[QbxmlmsgsRqOnError] = field(
        default=None,
        metadata={
            "name": "onError",
            "type": "Attribute",
            "required": True,
        },
    )


@dataclass
class SalesReceiptAddRsType:
    sales_receipt_ret: Optional[SalesReceiptRet] = field(
        default=None,
        metadata={
            "name": "SalesReceiptRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptModRsType:
    sales_receipt_ret: Optional[SalesReceiptRet] = field(
        default=None,
        metadata={
            "name": "SalesReceiptRet",
            "type": "Element",
        },
    )
    error_recovery: Optional[ErrorRecovery] = field(
        default=None,
        metadata={
            "name": "ErrorRecovery",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class SalesReceiptQueryRsType:
    sales_receipt_ret: List[SalesReceiptRet] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )
    ret_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "retCount",
            "type": "Attribute",
        },
    )
    iterator_remaining_count: Optional[int] = field(
        default=None,
        metadata={
            "name": "iteratorRemainingCount",
            "type": "Attribute",
        },
    )
    iterator_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "iteratorID",
            "type": "Attribute",
        },
    )


@dataclass
class UiextensionSubscriptionAddRqType:
    class Meta:
        name = "UIExtensionSubscriptionAddRqType"

    uiextension_subscription_add: Optional[UiextensionSubscriptionAdd] = field(
        default=None,
        metadata={
            "name": "UIExtensionSubscriptionAdd",
            "type": "Element",
            "required": True,
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )


@dataclass
class UiextensionSubscriptionAddRsType:
    class Meta:
        name = "UIExtensionSubscriptionAddRsType"

    uiextension_subscription_ret: Optional[UiextensionSubscriptionRet] = field(
        default=None,
        metadata={
            "name": "UIExtensionSubscriptionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class UiextensionSubscriptionQueryRsType:
    class Meta:
        name = "UIExtensionSubscriptionQueryRsType"

    uiextension_subscription_ret: Optional[UiextensionSubscriptionRet] = field(
        default=None,
        metadata={
            "name": "UIExtensionSubscriptionRet",
            "type": "Element",
        },
    )
    request_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "requestID",
            "type": "Attribute",
        },
    )
    status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "statusCode",
            "type": "Attribute",
            "required": True,
        },
    )
    status_severity: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusSeverity",
            "type": "Attribute",
            "required": True,
        },
    )
    status_message: Optional[str] = field(
        default=None,
        metadata={
            "name": "statusMessage",
            "type": "Attribute",
        },
    )


@dataclass
class QbxmlmsgsRs:
    class Meta:
        name = "QBXMLMsgsRs"

    host_query_rs: List[HostQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "HostQueryRs",
            "type": "Element",
        },
    )
    company_query_rs: List[CompanyQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CompanyQueryRs",
            "type": "Element",
        },
    )
    company_activity_query_rs: List[CompanyActivityQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CompanyActivityQueryRs",
            "type": "Element",
        },
    )
    preferences_query_rs: List[PreferencesQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "PreferencesQueryRs",
            "type": "Element",
        },
    )
    account_add_rs: List[AccountAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "AccountAddRs",
            "type": "Element",
        },
    )
    account_mod_rs: List[AccountModRsType] = field(
        default_factory=list,
        metadata={
            "name": "AccountModRs",
            "type": "Element",
        },
    )
    account_query_rs: List[AccountQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "AccountQueryRs",
            "type": "Element",
        },
    )
    special_account_add_rs: List[SpecialAccountAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "SpecialAccountAddRs",
            "type": "Element",
        },
    )
    account_tax_line_info_query_rs: List[AccountTaxLineInfoQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "AccountTaxLineInfoQueryRs",
                "type": "Element",
            },
        )
    )
    lead_add_rs: List[LeadAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "LeadAddRs",
            "type": "Element",
        },
    )
    lead_mod_rs: List[LeadModRsType] = field(
        default_factory=list,
        metadata={
            "name": "LeadModRs",
            "type": "Element",
        },
    )
    lead_query_rs: List[LeadQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "LeadQueryRs",
            "type": "Element",
        },
    )
    customer_add_rs: List[CustomerAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerAddRs",
            "type": "Element",
        },
    )
    customer_mod_rs: List[CustomerModRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerModRs",
            "type": "Element",
        },
    )
    customer_query_rs: List[CustomerQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerQueryRs",
            "type": "Element",
        },
    )
    employee_add_rs: List[EmployeeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeAddRs",
            "type": "Element",
        },
    )
    employee_mod_rs: List[EmployeeModRsType] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeModRs",
            "type": "Element",
        },
    )
    employee_query_rs: List[EmployeeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "EmployeeQueryRs",
            "type": "Element",
        },
    )
    other_name_add_rs: List[OtherNameAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameAddRs",
            "type": "Element",
        },
    )
    other_name_mod_rs: List[OtherNameModRsType] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameModRs",
            "type": "Element",
        },
    )
    other_name_query_rs: List[OtherNameQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "OtherNameQueryRs",
            "type": "Element",
        },
    )
    vendor_add_rs: List[VendorAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorAddRs",
            "type": "Element",
        },
    )
    vendor_mod_rs: List[VendorModRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorModRs",
            "type": "Element",
        },
    )
    vendor_query_rs: List[VendorQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorQueryRs",
            "type": "Element",
        },
    )
    entity_query_rs: List[EntityQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "EntityQueryRs",
            "type": "Element",
        },
    )
    standard_terms_add_rs: List[StandardTermsAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "StandardTermsAddRs",
            "type": "Element",
        },
    )
    standard_terms_query_rs: List[StandardTermsQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "StandardTermsQueryRs",
            "type": "Element",
        },
    )
    date_driven_terms_add_rs: List[DateDrivenTermsAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "DateDrivenTermsAddRs",
            "type": "Element",
        },
    )
    date_driven_terms_query_rs: List[DateDrivenTermsQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "DateDrivenTermsQueryRs",
            "type": "Element",
        },
    )
    terms_query_rs: List[TermsQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TermsQueryRs",
            "type": "Element",
        },
    )
    class_add_rs: List[ClassAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ClassAddRs",
            "type": "Element",
        },
    )
    class_mod_rs: List[ClassModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ClassModRs",
            "type": "Element",
        },
    )
    class_query_rs: List[ClassQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ClassQueryRs",
            "type": "Element",
        },
    )
    sales_rep_add_rs: List[SalesRepAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepAddRs",
            "type": "Element",
        },
    )
    sales_rep_mod_rs: List[SalesRepModRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepModRs",
            "type": "Element",
        },
    )
    sales_rep_query_rs: List[SalesRepQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesRepQueryRs",
            "type": "Element",
        },
    )
    customer_type_add_rs: List[CustomerTypeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerTypeAddRs",
            "type": "Element",
        },
    )
    customer_type_query_rs: List[CustomerTypeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerTypeQueryRs",
            "type": "Element",
        },
    )
    vendor_type_add_rs: List[VendorTypeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorTypeAddRs",
            "type": "Element",
        },
    )
    vendor_type_query_rs: List[VendorTypeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorTypeQueryRs",
            "type": "Element",
        },
    )
    job_type_add_rs: List[JobTypeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "JobTypeAddRs",
            "type": "Element",
        },
    )
    job_type_query_rs: List[JobTypeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "JobTypeQueryRs",
            "type": "Element",
        },
    )
    customer_msg_add_rs: List[CustomerMsgAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerMsgAddRs",
            "type": "Element",
        },
    )
    customer_msg_query_rs: List[CustomerMsgQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomerMsgQueryRs",
            "type": "Element",
        },
    )
    payment_method_add_rs: List[PaymentMethodAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "PaymentMethodAddRs",
            "type": "Element",
        },
    )
    payment_method_query_rs: List[PaymentMethodQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "PaymentMethodQueryRs",
            "type": "Element",
        },
    )
    ship_method_add_rs: List[ShipMethodAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ShipMethodAddRs",
            "type": "Element",
        },
    )
    ship_method_query_rs: List[ShipMethodQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ShipMethodQueryRs",
            "type": "Element",
        },
    )
    sales_tax_code_add_rs: List[SalesTaxCodeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeAddRs",
            "type": "Element",
        },
    )
    sales_tax_code_mod_rs: List[SalesTaxCodeModRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeModRs",
            "type": "Element",
        },
    )
    sales_tax_code_query_rs: List[SalesTaxCodeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxCodeQueryRs",
            "type": "Element",
        },
    )
    to_do_add_rs: List[ToDoAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ToDoAddRs",
            "type": "Element",
        },
    )
    to_do_mod_rs: List[ToDoModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ToDoModRs",
            "type": "Element",
        },
    )
    to_do_query_rs: List[ToDoQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ToDoQueryRs",
            "type": "Element",
        },
    )
    item_service_add_rs: List[ItemServiceAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceAddRs",
            "type": "Element",
        },
    )
    item_service_mod_rs: List[ItemServiceModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceModRs",
            "type": "Element",
        },
    )
    item_service_query_rs: List[ItemServiceQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemServiceQueryRs",
            "type": "Element",
        },
    )
    item_non_inventory_add_rs: List[ItemNonInventoryAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryAddRs",
            "type": "Element",
        },
    )
    item_non_inventory_mod_rs: List[ItemNonInventoryModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryModRs",
            "type": "Element",
        },
    )
    item_non_inventory_query_rs: List[ItemNonInventoryQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemNonInventoryQueryRs",
            "type": "Element",
        },
    )
    item_other_charge_add_rs: List[ItemOtherChargeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeAddRs",
            "type": "Element",
        },
    )
    item_other_charge_mod_rs: List[ItemOtherChargeModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeModRs",
            "type": "Element",
        },
    )
    item_other_charge_query_rs: List[ItemOtherChargeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemOtherChargeQueryRs",
            "type": "Element",
        },
    )
    item_inventory_add_rs: List[ItemInventoryAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAddRs",
            "type": "Element",
        },
    )
    item_inventory_mod_rs: List[ItemInventoryModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryModRs",
            "type": "Element",
        },
    )
    item_inventory_query_rs: List[ItemInventoryQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryQueryRs",
            "type": "Element",
        },
    )
    item_inventory_assembly_add_rs: List[ItemInventoryAssemblyAddRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "ItemInventoryAssemblyAddRs",
                "type": "Element",
            },
        )
    )
    item_inventory_assembly_mod_rs: List[ItemInventoryAssemblyModRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "ItemInventoryAssemblyModRs",
                "type": "Element",
            },
        )
    )
    item_inventory_assembly_query_rs: List[
        ItemInventoryAssemblyQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "ItemInventoryAssemblyQueryRs",
            "type": "Element",
        },
    )
    item_fixed_asset_add_rs: List[ItemFixedAssetAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetAddRs",
            "type": "Element",
        },
    )
    item_fixed_asset_mod_rs: List[ItemFixedAssetModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetModRs",
            "type": "Element",
        },
    )
    item_fixed_asset_query_rs: List[ItemFixedAssetQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemFixedAssetQueryRs",
            "type": "Element",
        },
    )
    item_subtotal_add_rs: List[ItemSubtotalAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalAddRs",
            "type": "Element",
        },
    )
    item_subtotal_mod_rs: List[ItemSubtotalModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalModRs",
            "type": "Element",
        },
    )
    item_subtotal_query_rs: List[ItemSubtotalQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSubtotalQueryRs",
            "type": "Element",
        },
    )
    item_discount_add_rs: List[ItemDiscountAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountAddRs",
            "type": "Element",
        },
    )
    item_discount_mod_rs: List[ItemDiscountModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountModRs",
            "type": "Element",
        },
    )
    item_discount_query_rs: List[ItemDiscountQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemDiscountQueryRs",
            "type": "Element",
        },
    )
    item_payment_add_rs: List[ItemPaymentAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentAddRs",
            "type": "Element",
        },
    )
    item_payment_mod_rs: List[ItemPaymentModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentModRs",
            "type": "Element",
        },
    )
    item_payment_query_rs: List[ItemPaymentQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemPaymentQueryRs",
            "type": "Element",
        },
    )
    item_sales_tax_add_rs: List[ItemSalesTaxAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxAddRs",
            "type": "Element",
        },
    )
    item_sales_tax_mod_rs: List[ItemSalesTaxModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxModRs",
            "type": "Element",
        },
    )
    item_sales_tax_query_rs: List[ItemSalesTaxQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxQueryRs",
            "type": "Element",
        },
    )
    item_sales_tax_group_add_rs: List[ItemSalesTaxGroupAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupAddRs",
            "type": "Element",
        },
    )
    item_sales_tax_group_mod_rs: List[ItemSalesTaxGroupModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupModRs",
            "type": "Element",
        },
    )
    item_sales_tax_group_query_rs: List[ItemSalesTaxGroupQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSalesTaxGroupQueryRs",
            "type": "Element",
        },
    )
    item_group_add_rs: List[ItemGroupAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupAddRs",
            "type": "Element",
        },
    )
    item_group_mod_rs: List[ItemGroupModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupModRs",
            "type": "Element",
        },
    )
    item_group_query_rs: List[ItemGroupQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemGroupQueryRs",
            "type": "Element",
        },
    )
    special_item_add_rs: List[SpecialItemAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "SpecialItemAddRs",
            "type": "Element",
        },
    )
    item_query_rs: List[ItemQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemQueryRs",
            "type": "Element",
        },
    )
    payroll_item_wage_add_rs: List[PayrollItemWageAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "PayrollItemWageAddRs",
            "type": "Element",
        },
    )
    payroll_item_wage_query_rs: List[PayrollItemWageQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "PayrollItemWageQueryRs",
            "type": "Element",
        },
    )
    payroll_item_non_wage_query_rs: List[PayrollItemNonWageQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "PayrollItemNonWageQueryRs",
                "type": "Element",
            },
        )
    )
    template_query_rs: List[TemplateQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TemplateQueryRs",
            "type": "Element",
        },
    )
    price_level_add_rs: List[PriceLevelAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelAddRs",
            "type": "Element",
        },
    )
    price_level_mod_rs: List[PriceLevelModRsType] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelModRs",
            "type": "Element",
        },
    )
    price_level_query_rs: List[PriceLevelQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "PriceLevelQueryRs",
            "type": "Element",
        },
    )
    billing_rate_add_rs: List[BillingRateAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillingRateAddRs",
            "type": "Element",
        },
    )
    billing_rate_query_rs: List[BillingRateQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillingRateQueryRs",
            "type": "Element",
        },
    )
    vehicle_add_rs: List[VehicleAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleAddRs",
            "type": "Element",
        },
    )
    vehicle_mod_rs: List[VehicleModRsType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleModRs",
            "type": "Element",
        },
    )
    vehicle_query_rs: List[VehicleQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleQueryRs",
            "type": "Element",
        },
    )
    unit_of_measure_set_add_rs: List[UnitOfMeasureSetAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "UnitOfMeasureSetAddRs",
            "type": "Element",
        },
    )
    unit_of_measure_set_query_rs: List[UnitOfMeasureSetQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "UnitOfMeasureSetQueryRs",
            "type": "Element",
        },
    )
    workers_comp_code_add_rs: List[WorkersCompCodeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeAddRs",
            "type": "Element",
        },
    )
    workers_comp_code_mod_rs: List[WorkersCompCodeModRsType] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeModRs",
            "type": "Element",
        },
    )
    workers_comp_code_query_rs: List[WorkersCompCodeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "WorkersCompCodeQueryRs",
            "type": "Element",
        },
    )
    form1099_category_account_mapping_mod_rs: List[
        Form1099CategoryAccountMappingModRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "Form1099CategoryAccountMappingModRs",
            "type": "Element",
        },
    )
    form1099_category_account_mapping_query_rs: List[
        Form1099CategoryAccountMappingQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "Form1099CategoryAccountMappingQueryRs",
            "type": "Element",
        },
    )
    sales_tax_return_query_rs: List[SalesTaxReturnQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxReturnQueryRs",
            "type": "Element",
        },
    )
    sales_tax_return_line_query_rs: List[SalesTaxReturnLineQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxReturnLineQueryRs",
                "type": "Element",
            },
        )
    )
    currency_add_rs: List[CurrencyAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyAddRs",
            "type": "Element",
        },
    )
    currency_mod_rs: List[CurrencyModRsType] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyModRs",
            "type": "Element",
        },
    )
    currency_query_rs: List[CurrencyQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CurrencyQueryRs",
            "type": "Element",
        },
    )
    payroll_last_period_query_rs: List[PayrollLastPeriodQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "PayrollLastPeriodQueryRs",
            "type": "Element",
        },
    )
    inventory_site_add_rs: List[InventorySiteAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteAddRs",
            "type": "Element",
        },
    )
    inventory_site_mod_rs: List[InventorySiteModRsType] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteModRs",
            "type": "Element",
        },
    )
    inventory_site_query_rs: List[InventorySiteQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "InventorySiteQueryRs",
            "type": "Element",
        },
    )
    invoice_add_rs: List[InvoiceAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceAddRs",
            "type": "Element",
        },
    )
    invoice_mod_rs: List[InvoiceModRsType] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceModRs",
            "type": "Element",
        },
    )
    invoice_query_rs: List[InvoiceQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "InvoiceQueryRs",
            "type": "Element",
        },
    )
    estimate_add_rs: List[EstimateAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "EstimateAddRs",
            "type": "Element",
        },
    )
    estimate_mod_rs: List[EstimateModRsType] = field(
        default_factory=list,
        metadata={
            "name": "EstimateModRs",
            "type": "Element",
        },
    )
    estimate_query_rs: List[EstimateQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "EstimateQueryRs",
            "type": "Element",
        },
    )
    sales_order_add_rs: List[SalesOrderAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderAddRs",
            "type": "Element",
        },
    )
    sales_order_mod_rs: List[SalesOrderModRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderModRs",
            "type": "Element",
        },
    )
    sales_order_query_rs: List[SalesOrderQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesOrderQueryRs",
            "type": "Element",
        },
    )
    sales_receipt_add_rs: List[SalesReceiptAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptAddRs",
            "type": "Element",
        },
    )
    sales_receipt_mod_rs: List[SalesReceiptModRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptModRs",
            "type": "Element",
        },
    )
    sales_receipt_query_rs: List[SalesReceiptQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesReceiptQueryRs",
            "type": "Element",
        },
    )
    credit_memo_add_rs: List[CreditMemoAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoAddRs",
            "type": "Element",
        },
    )
    credit_memo_mod_rs: List[CreditMemoModRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoModRs",
            "type": "Element",
        },
    )
    credit_memo_query_rs: List[CreditMemoQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditMemoQueryRs",
            "type": "Element",
        },
    )
    receive_payment_add_rs: List[ReceivePaymentAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentAddRs",
            "type": "Element",
        },
    )
    receive_payment_mod_rs: List[ReceivePaymentModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentModRs",
            "type": "Element",
        },
    )
    receive_payment_query_rs: List[ReceivePaymentQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentQueryRs",
            "type": "Element",
        },
    )
    receive_payment_to_deposit_query_rs: List[
        ReceivePaymentToDepositQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "ReceivePaymentToDepositQueryRs",
            "type": "Element",
        },
    )
    charge_add_rs: List[ChargeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ChargeAddRs",
            "type": "Element",
        },
    )
    charge_mod_rs: List[ChargeModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ChargeModRs",
            "type": "Element",
        },
    )
    charge_query_rs: List[ChargeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ChargeQueryRs",
            "type": "Element",
        },
    )
    purchase_order_add_rs: List[PurchaseOrderAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderAddRs",
            "type": "Element",
        },
    )
    purchase_order_mod_rs: List[PurchaseOrderModRsType] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderModRs",
            "type": "Element",
        },
    )
    purchase_order_query_rs: List[PurchaseOrderQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "PurchaseOrderQueryRs",
            "type": "Element",
        },
    )
    bill_add_rs: List[BillAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillAddRs",
            "type": "Element",
        },
    )
    bill_mod_rs: List[BillModRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillModRs",
            "type": "Element",
        },
    )
    bill_query_rs: List[BillQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillQueryRs",
            "type": "Element",
        },
    )
    item_receipt_add_rs: List[ItemReceiptAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptAddRs",
            "type": "Element",
        },
    )
    item_receipt_mod_rs: List[ItemReceiptModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptModRs",
            "type": "Element",
        },
    )
    item_receipt_query_rs: List[ItemReceiptQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemReceiptQueryRs",
            "type": "Element",
        },
    )
    vendor_credit_add_rs: List[VendorCreditAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditAddRs",
            "type": "Element",
        },
    )
    vendor_credit_mod_rs: List[VendorCreditModRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditModRs",
            "type": "Element",
        },
    )
    vendor_credit_query_rs: List[VendorCreditQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "VendorCreditQueryRs",
            "type": "Element",
        },
    )
    bill_payment_check_add_rs: List[BillPaymentCheckAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckAddRs",
            "type": "Element",
        },
    )
    bill_payment_check_mod_rs: List[BillPaymentCheckModRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckModRs",
            "type": "Element",
        },
    )
    bill_payment_check_query_rs: List[BillPaymentCheckQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCheckQueryRs",
            "type": "Element",
        },
    )
    bill_payment_credit_card_add_rs: List[BillPaymentCreditCardAddRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "BillPaymentCreditCardAddRs",
                "type": "Element",
            },
        )
    )
    bill_payment_credit_card_query_rs: List[
        BillPaymentCreditCardQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "BillPaymentCreditCardQueryRs",
            "type": "Element",
        },
    )
    bill_to_pay_query_rs: List[BillToPayQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "BillToPayQueryRs",
            "type": "Element",
        },
    )
    sales_tax_payment_check_add_rs: List[SalesTaxPaymentCheckAddRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckAddRs",
                "type": "Element",
            },
        )
    )
    sales_tax_payment_check_mod_rs: List[SalesTaxPaymentCheckModRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckModRs",
                "type": "Element",
            },
        )
    )
    sales_tax_payment_check_query_rs: List[SalesTaxPaymentCheckQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "SalesTaxPaymentCheckQueryRs",
                "type": "Element",
            },
        )
    )
    sales_tax_payable_query_rs: List[SalesTaxPayableQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "SalesTaxPayableQueryRs",
            "type": "Element",
        },
    )
    inventory_adjustment_add_rs: List[InventoryAdjustmentAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentAddRs",
            "type": "Element",
        },
    )
    inventory_adjustment_mod_rs: List[InventoryAdjustmentModRsType] = field(
        default_factory=list,
        metadata={
            "name": "InventoryAdjustmentModRs",
            "type": "Element",
        },
    )
    inventory_adjustment_query_rs: List[InventoryAdjustmentQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "InventoryAdjustmentQueryRs",
                "type": "Element",
            },
        )
    )
    time_tracking_add_rs: List[TimeTrackingAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingAddRs",
            "type": "Element",
        },
    )
    time_tracking_mod_rs: List[TimeTrackingModRsType] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingModRs",
            "type": "Element",
        },
    )
    time_tracking_query_rs: List[TimeTrackingQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TimeTrackingQueryRs",
            "type": "Element",
        },
    )
    check_add_rs: List[CheckAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CheckAddRs",
            "type": "Element",
        },
    )
    check_mod_rs: List[CheckModRsType] = field(
        default_factory=list,
        metadata={
            "name": "CheckModRs",
            "type": "Element",
        },
    )
    check_query_rs: List[CheckQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CheckQueryRs",
            "type": "Element",
        },
    )
    credit_card_charge_add_rs: List[CreditCardChargeAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeAddRs",
            "type": "Element",
        },
    )
    credit_card_charge_mod_rs: List[CreditCardChargeModRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeModRs",
            "type": "Element",
        },
    )
    credit_card_charge_query_rs: List[CreditCardChargeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardChargeQueryRs",
            "type": "Element",
        },
    )
    credit_card_credit_add_rs: List[CreditCardCreditAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditAddRs",
            "type": "Element",
        },
    )
    credit_card_credit_mod_rs: List[CreditCardCreditModRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditModRs",
            "type": "Element",
        },
    )
    credit_card_credit_query_rs: List[CreditCardCreditQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CreditCardCreditQueryRs",
            "type": "Element",
        },
    )
    journal_entry_add_rs: List[JournalEntryAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryAddRs",
            "type": "Element",
        },
    )
    journal_entry_mod_rs: List[JournalEntryModRsType] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryModRs",
            "type": "Element",
        },
    )
    journal_entry_query_rs: List[JournalEntryQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "JournalEntryQueryRs",
            "type": "Element",
        },
    )
    deposit_add_rs: List[DepositAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "DepositAddRs",
            "type": "Element",
        },
    )
    deposit_mod_rs: List[DepositModRsType] = field(
        default_factory=list,
        metadata={
            "name": "DepositModRs",
            "type": "Element",
        },
    )
    deposit_query_rs: List[DepositQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "DepositQueryRs",
            "type": "Element",
        },
    )
    list_del_rs: List[ListDelRsType] = field(
        default_factory=list,
        metadata={
            "name": "ListDelRs",
            "type": "Element",
        },
    )
    list_merge_rs: List[ListMergeRsType] = field(
        default_factory=list,
        metadata={
            "name": "ListMergeRs",
            "type": "Element",
        },
    )
    list_deleted_query_rs: List[ListDeletedQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ListDeletedQueryRs",
            "type": "Element",
        },
    )
    txn_del_rs: List[TxnDelRsType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDelRs",
            "type": "Element",
        },
    )
    txn_void_rs: List[TxnVoidRsType] = field(
        default_factory=list,
        metadata={
            "name": "TxnVoidRs",
            "type": "Element",
        },
    )
    txn_deleted_query_rs: List[TxnDeletedQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDeletedQueryRs",
            "type": "Element",
        },
    )
    cleared_status_mod_rs: List[ClearedStatusModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ClearedStatusModRs",
            "type": "Element",
        },
    )
    list_display_add_rs: List[ListDisplayAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ListDisplayAddRs",
            "type": "Element",
        },
    )
    list_display_mod_rs: List[ListDisplayModRsType] = field(
        default_factory=list,
        metadata={
            "name": "ListDisplayModRs",
            "type": "Element",
        },
    )
    txn_display_add_rs: List[TxnDisplayAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDisplayAddRs",
            "type": "Element",
        },
    )
    txn_display_mod_rs: List[TxnDisplayModRsType] = field(
        default_factory=list,
        metadata={
            "name": "TxnDisplayModRs",
            "type": "Element",
        },
    )
    data_event_recovery_info_del_rs: List[DataEventRecoveryInfoDelRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "DataEventRecoveryInfoDelRs",
                "type": "Element",
            },
        )
    )
    data_event_recovery_info_query_rs: List[
        DataEventRecoveryInfoQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "DataEventRecoveryInfoQueryRs",
            "type": "Element",
        },
    )
    transaction_query_rs: List[TransactionQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransactionQueryRs",
            "type": "Element",
        },
    )
    build_assembly_add_rs: List[BuildAssemblyAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyAddRs",
            "type": "Element",
        },
    )
    build_assembly_mod_rs: List[BuildAssemblyModRsType] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyModRs",
            "type": "Element",
        },
    )
    build_assembly_query_rs: List[BuildAssemblyQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "BuildAssemblyQueryRs",
            "type": "Element",
        },
    )
    item_assemblies_can_build_query_rs: List[
        ItemAssembliesCanBuildQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "ItemAssembliesCanBuildQueryRs",
            "type": "Element",
        },
    )
    arrefund_credit_card_add_rs: List[ArrefundCreditCardAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "ARRefundCreditCardAddRs",
            "type": "Element",
        },
    )
    arrefund_credit_card_query_rs: List[ArrefundCreditCardQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ARRefundCreditCardQueryRs",
            "type": "Element",
        },
    )
    vehicle_mileage_add_rs: List[VehicleMileageAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleMileageAddRs",
            "type": "Element",
        },
    )
    vehicle_mileage_query_rs: List[VehicleMileageQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "VehicleMileageQueryRs",
            "type": "Element",
        },
    )
    transfer_inventory_add_rs: List[TransferInventoryAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryAddRs",
            "type": "Element",
        },
    )
    transfer_inventory_mod_rs: List[TransferInventoryModRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryModRs",
            "type": "Element",
        },
    )
    transfer_inventory_query_rs: List[TransferInventoryQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransferInventoryQueryRs",
            "type": "Element",
        },
    )
    item_sites_query_rs: List[ItemSitesQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "ItemSitesQueryRs",
            "type": "Element",
        },
    )
    bar_code_query_rs: List[BarCodeQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "BarCodeQueryRs",
            "type": "Element",
        },
    )
    transfer_add_rs: List[TransferAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransferAddRs",
            "type": "Element",
        },
    )
    transfer_mod_rs: List[TransferModRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransferModRs",
            "type": "Element",
        },
    )
    transfer_query_rs: List[TransferQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TransferQueryRs",
            "type": "Element",
        },
    )
    general_summary_report_query_rs: List[GeneralSummaryReportQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "GeneralSummaryReportQueryRs",
                "type": "Element",
            },
        )
    )
    job_report_query_rs: List[JobReportQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "JobReportQueryRs",
            "type": "Element",
        },
    )
    time_report_query_rs: List[TimeReportQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "TimeReportQueryRs",
            "type": "Element",
        },
    )
    aging_report_query_rs: List[AgingReportQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "AgingReportQueryRs",
            "type": "Element",
        },
    )
    budget_summary_report_query_rs: List[BudgetSummaryReportQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "BudgetSummaryReportQueryRs",
                "type": "Element",
            },
        )
    )
    general_detail_report_query_rs: List[GeneralDetailReportQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "GeneralDetailReportQueryRs",
                "type": "Element",
            },
        )
    )
    custom_detail_report_query_rs: List[CustomDetailReportQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "CustomDetailReportQueryRs",
            "type": "Element",
        },
    )
    custom_summary_report_query_rs: List[CustomSummaryReportQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "CustomSummaryReportQueryRs",
                "type": "Element",
            },
        )
    )
    payroll_detail_report_query_rs: List[PayrollDetailReportQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "PayrollDetailReportQueryRs",
                "type": "Element",
            },
        )
    )
    payroll_summary_report_query_rs: List[PayrollSummaryReportQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "PayrollSummaryReportQueryRs",
                "type": "Element",
            },
        )
    )
    data_ext_def_add_rs: List[DataExtDefAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefAddRs",
            "type": "Element",
        },
    )
    data_ext_def_mod_rs: List[DataExtDefModRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefModRs",
            "type": "Element",
        },
    )
    data_ext_def_del_rs: List[DataExtDefDelRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefDelRs",
            "type": "Element",
        },
    )
    data_ext_def_query_rs: List[DataExtDefQueryRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDefQueryRs",
            "type": "Element",
        },
    )
    data_ext_add_rs: List[DataExtAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtAddRs",
            "type": "Element",
        },
    )
    data_ext_mod_rs: List[DataExtModRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtModRs",
            "type": "Element",
        },
    )
    data_ext_del_rs: List[DataExtDelRsType] = field(
        default_factory=list,
        metadata={
            "name": "DataExtDelRs",
            "type": "Element",
        },
    )
    new_message_set_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "newMessageSetID",
            "type": "Attribute",
        },
    )
    message_set_status_code: Optional[int] = field(
        default=None,
        metadata={
            "name": "messageSetStatusCode",
            "type": "Attribute",
        },
    )


@dataclass
class QbxmlsubscriptionMsgsRq:
    class Meta:
        name = "QBXMLSubscriptionMsgsRq"

    data_event_subscription_add_rq: List[DataEventSubscriptionAddRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "DataEventSubscriptionAddRq",
                "type": "Element",
            },
        )
    )
    data_event_subscription_query_rq: List[
        DataEventSubscriptionQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "DataEventSubscriptionQueryRq",
            "type": "Element",
        },
    )
    uievent_subscription_add_rq: List[UieventSubscriptionAddRqType] = field(
        default_factory=list,
        metadata={
            "name": "UIEventSubscriptionAddRq",
            "type": "Element",
        },
    )
    uievent_subscription_query_rq: List[UieventSubscriptionQueryRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "UIEventSubscriptionQueryRq",
                "type": "Element",
            },
        )
    )
    uiextension_subscription_add_rq: List[UiextensionSubscriptionAddRqType] = (
        field(
            default_factory=list,
            metadata={
                "name": "UIExtensionSubscriptionAddRq",
                "type": "Element",
            },
        )
    )
    uiextension_subscription_query_rq: List[
        UiextensionSubscriptionQueryRqType
    ] = field(
        default_factory=list,
        metadata={
            "name": "UIExtensionSubscriptionQueryRq",
            "type": "Element",
        },
    )
    subscription_del_rq: List[SubscriptionDelRqType] = field(
        default_factory=list,
        metadata={
            "name": "SubscriptionDelRq",
            "type": "Element",
        },
    )


@dataclass
class QbxmlsubscriptionMsgsRs:
    class Meta:
        name = "QBXMLSubscriptionMsgsRs"

    data_event_subscription_add_rs: List[DataEventSubscriptionAddRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "DataEventSubscriptionAddRs",
                "type": "Element",
            },
        )
    )
    data_event_subscription_query_rs: List[
        DataEventSubscriptionQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "DataEventSubscriptionQueryRs",
            "type": "Element",
        },
    )
    uievent_subscription_add_rs: List[UieventSubscriptionAddRsType] = field(
        default_factory=list,
        metadata={
            "name": "UIEventSubscriptionAddRs",
            "type": "Element",
        },
    )
    uievent_subscription_query_rs: List[UieventSubscriptionQueryRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "UIEventSubscriptionQueryRs",
                "type": "Element",
            },
        )
    )
    uiextension_subscription_add_rs: List[UiextensionSubscriptionAddRsType] = (
        field(
            default_factory=list,
            metadata={
                "name": "UIExtensionSubscriptionAddRs",
                "type": "Element",
            },
        )
    )
    uiextension_subscription_query_rs: List[
        UiextensionSubscriptionQueryRsType
    ] = field(
        default_factory=list,
        metadata={
            "name": "UIExtensionSubscriptionQueryRs",
            "type": "Element",
        },
    )
    subscription_del_rs: List[SubscriptionDelRsType] = field(
        default_factory=list,
        metadata={
            "name": "SubscriptionDelRs",
            "type": "Element",
        },
    )


@dataclass
class Qbxml:
    class Meta:
        name = "QBXML"

    signon_msgs_rq: Optional[SignonMsgsRq] = field(
        default=None,
        metadata={
            "name": "SignonMsgsRq",
            "type": "Element",
        },
    )
    qbxmlmsgs_rq: Optional[QbxmlmsgsRq] = field(
        default=None,
        metadata={
            "name": "QBXMLMsgsRq",
            "type": "Element",
        },
    )
    qbxmlsubscription_msgs_rq: Optional[QbxmlsubscriptionMsgsRq] = field(
        default=None,
        metadata={
            "name": "QBXMLSubscriptionMsgsRq",
            "type": "Element",
        },
    )
    signon_msgs_rs: Optional[SignonMsgsRs] = field(
        default=None,
        metadata={
            "name": "SignonMsgsRs",
            "type": "Element",
        },
    )
    qbxmlmsgs_rs: Optional[QbxmlmsgsRs] = field(
        default=None,
        metadata={
            "name": "QBXMLMsgsRs",
            "type": "Element",
        },
    )
    qbxmlsubscription_msgs_rs: Optional[QbxmlsubscriptionMsgsRs] = field(
        default=None,
        metadata={
            "name": "QBXMLSubscriptionMsgsRs",
            "type": "Element",
        },
    )
